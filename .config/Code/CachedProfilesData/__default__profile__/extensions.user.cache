{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/manu/.vscode/extensions/extensions.json","path":"/home/manu/.vscode/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1743297966526,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"validate":true,"productVersion":"1.98.2","productDate":"2025-03-12T13:32:45.399Z","productCommit":"ddc367ed5c8936efe395cffeec279b04ffd7db78","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"ms-azuretools.vscode-docker","uuid":"0479fc1c-3d67-49f9-b087-fb9069afe48f"},"manifest":{"name":"vscode-docker","version":"1.29.4","publisher":"ms-azuretools","displayName":"Docker","description":"Makes it easy to create, manage, and debug containerized applications.","license":"SEE LICENSE IN LICENSE.md","icon":"resources/docker_blue.png","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","galleryBanner":{"color":"#1e1e1e","theme":"dark"},"categories":["Programming Languages","Linters","Azure"],"keywords":["docker","compose","container","containers","multi-root ready"],"repository":{"type":"git","url":"https://github.com/microsoft/vscode-docker"},"homepage":"https://github.com/Microsoft/vscode-docker/blob/main/README.md","activationEvents":["onTaskType:docker-build","onTaskType:docker-run","onTaskType:docker-compose","onDebugInitialConfigurations","onDebugResolve:docker","onFileSystem:docker","onLanguage:dockerfile","onLanguage:dockercompose"],"main":"main","contributes":{"menus":{"commandPalette":[{"command":"vscode-docker.openDockerDownloadPage","when":"never"},{"command":"vscode-docker.containers.downloadFile","when":"never"},{"command":"vscode-docker.containers.openFile","when":"never"},{"command":"vscode-docker.containers.select","when":"never"},{"command":"vscode-docker.registries.reconnectRegistry","when":"never"},{"command":"vscode-docker.containers.composeGroup.logs","when":"config.docker.containers.groupBy == 'Compose Project Name'"},{"command":"vscode-docker.containers.composeGroup.start","when":"config.docker.containers.groupBy == 'Compose Project Name'"},{"command":"vscode-docker.containers.composeGroup.stop","when":"config.docker.containers.groupBy == 'Compose Project Name'"},{"command":"vscode-docker.containers.composeGroup.restart","when":"never"},{"command":"vscode-docker.containers.composeGroup.down","when":"never"},{"command":"vscode-docker.compose.down","when":"isWorkspaceTrusted"},{"command":"vscode-docker.compose.restart","when":"isWorkspaceTrusted"},{"command":"vscode-docker.compose.up","when":"isWorkspaceTrusted"},{"command":"vscode-docker.compose.up.subset","when":"isWorkspaceTrusted"},{"command":"vscode-docker.configure","when":"isWorkspaceTrusted"},{"command":"vscode-docker.configureCompose","when":"isWorkspaceTrusted"},{"command":"vscode-docker.debugging.initializeForDebugging","when":"isWorkspaceTrusted"},{"command":"vscode-docker.images.build","when":"isWorkspaceTrusted"},{"command":"vscode-docker.registries.azure.buildImage","when":"isWorkspaceTrusted"},{"command":"vscode-docker.help.openWalkthrough","when":"never"},{"command":"vscode-docker.images.showDangling","when":"never"},{"command":"vscode-docker.images.hideDangling","when":"never"},{"command":"vscode-docker.images.group.remove","when":"never"},{"command":"vscode-docker.containers.group.remove","when":"never"},{"command":"vscode-docker.activateRegistryProviders","when":"never"}],"editor/context":[{"when":"isWorkspaceTrusted && editorLangId == dockerfile","command":"vscode-docker.registries.azure.buildImage","group":"docker"},{"when":"isWorkspaceTrusted && editorLangId == dockercompose","command":"vscode-docker.compose.down","group":"docker"},{"when":"isWorkspaceTrusted && editorLangId == dockercompose","command":"vscode-docker.compose.restart","group":"docker"},{"when":"isWorkspaceTrusted && editorLangId == dockercompose","command":"vscode-docker.compose.up","group":"docker"},{"when":"isWorkspaceTrusted && editorLangId == dockercompose","command":"vscode-docker.compose.up.subset","group":"docker"},{"when":"isWorkspaceTrusted && editorLangId == dockerfile","command":"vscode-docker.images.build","group":"docker"}],"explorer/context":[{"when":"isWorkspaceTrusted && resourceFilename =~ /dockerfile/i","command":"vscode-docker.registries.azure.buildImage","group":"docker"},{"when":"isWorkspaceTrusted && resourceLangId == dockercompose","command":"vscode-docker.compose.down","group":"docker"},{"when":"isWorkspaceTrusted && resourceLangId == dockercompose","command":"vscode-docker.compose.restart","group":"docker"},{"when":"isWorkspaceTrusted && resourceLangId == dockercompose","command":"vscode-docker.compose.up","group":"docker"},{"when":"isWorkspaceTrusted && resourceLangId == dockercompose","command":"vscode-docker.compose.up.subset","group":"docker"},{"when":"isWorkspaceTrusted && resourceLangId == dockerfile","command":"vscode-docker.images.build","group":"docker"}],"view/title":[{"command":"vscode-docker.containers.prune","when":"view == dockerContainers","group":"navigation@1"},{"command":"vscode-docker.containers.configureExplorer","when":"view == dockerContainers","group":"navigation@8"},{"command":"vscode-docker.networks.configureExplorer","when":"view == dockerNetworks","group":"navigation@8"},{"command":"vscode-docker.containers.refresh","when":"view == dockerContainers","group":"navigation@9"},{"command":"vscode-docker.networks.create","when":"view == dockerNetworks","group":"navigation@1"},{"command":"vscode-docker.networks.prune","when":"view == dockerNetworks","group":"navigation@2"},{"command":"vscode-docker.networks.refresh","when":"view == dockerNetworks","group":"navigation@9"},{"command":"vscode-docker.images.prune","when":"view == dockerImages","group":"navigation@2"},{"command":"vscode-docker.images.showDangling","when":"view == dockerImages && !vscode-docker:danglingShown","group":"navigation@3"},{"command":"vscode-docker.images.hideDangling","when":"view == dockerImages && vscode-docker:danglingShown","group":"navigation@3"},{"command":"vscode-docker.images.configureExplorer","when":"view == dockerImages","group":"navigation@8"},{"command":"vscode-docker.images.refresh","when":"view == dockerImages","group":"navigation@9"},{"command":"vscode-docker.registries.refresh","when":"view == dockerRegistries","group":"navigation@9"},{"command":"vscode-docker.registries.connectRegistry","when":"view == dockerRegistries","group":"navigation@1"},{"command":"vscode-docker.registries.help","when":"view == dockerRegistries","group":"navigation@10"},{"command":"vscode-docker.volumes.prune","when":"view == dockerVolumes","group":"navigation@1"},{"command":"vscode-docker.volumes.configureExplorer","when":"view == dockerVolumes","group":"navigation@8"},{"command":"vscode-docker.volumes.refresh","when":"view == dockerVolumes","group":"navigation@9"},{"command":"vscode-docker.contexts.configureExplorer","when":"view == vscode-docker.views.dockerContexts","group":"navigation@8"},{"command":"vscode-docker.contexts.refresh","when":"view == vscode-docker.views.dockerContexts","group":"navigation@9"},{"command":"vscode-docker.contexts.help","when":"view == vscode-docker.views.dockerContexts","group":"navigation@10"},{"command":"vscode-docker.help","when":"view == dockerContainers || view == dockerImages || view == dockerVolumes || view == dockerNetworks","group":"navigation@10"}],"view/item/context":[{"command":"vscode-docker.containers.viewLogs","when":"view == dockerContainers && viewItem =~ /container$/i","group":"containers_1_general@1"},{"command":"vscode-docker.containers.attachShell","when":"view == dockerContainers && viewItem =~ /^runningContainer$/i","group":"containers_1_general@2"},{"command":"vscode-docker.containers.inspect","when":"view == dockerContainers && viewItem =~ /container$/i","group":"containers_1_general@3"},{"command":"vscode-docker.containers.browse","when":"view == dockerContainers && viewItem =~ /runningContainer$/i","group":"containers_1_general@4"},{"command":"vscode-docker.containers.start","when":"view == dockerContainers && viewItem =~ /^(created|dead|exited|paused|terminated)Container$/i","group":"containers_1_general@5"},{"command":"vscode-docker.containers.downloadFile","when":"view == dockerContainers && viewItem == containerFile","group":"files_1@2"},{"command":"vscode-docker.containers.openFile","when":"view == dockerContainers && viewItem == containerFile","group":"files_1@1"},{"command":"vscode-docker.containers.stop","when":"view == dockerContainers && viewItem =~ /^(paused|restarting|running)Container$/i","group":"containers_1_general@6"},{"command":"vscode-docker.containers.restart","when":"view == dockerContainers && viewItem =~ /^runningContainer$/i","group":"containers_1_general@7"},{"command":"vscode-docker.containers.remove","when":"view == dockerContainers && viewItem =~ /container$/i","group":"containers_2_destructive@1"},{"command":"vscode-docker.containers.group.remove","when":"view == dockerContainers && viewItem =~ /containerGroup$/i","group":"containers_group_1_destructive@1"},{"command":"vscode-docker.containers.composeGroup.logs","when":"view == dockerContainers && viewItem =~ /composeGroup$/i","group":"composeGroup_1_general@1"},{"command":"vscode-docker.containers.composeGroup.start","when":"view == dockerContainers && viewItem =~ /composeGroup$/i","group":"composeGroup_1_general@2"},{"command":"vscode-docker.containers.composeGroup.stop","when":"view == dockerContainers && viewItem =~ /composeGroup$/i","group":"composeGroup_1_general@3"},{"command":"vscode-docker.containers.composeGroup.restart","when":"view == dockerContainers && viewItem =~ /composeGroup$/i","group":"composeGroup_2_destructive@1"},{"command":"vscode-docker.containers.composeGroup.down","when":"view == dockerContainers && viewItem =~ /composeGroup$/i","group":"composeGroup_2_destructive@2"},{"command":"vscode-docker.images.run","when":"view == dockerImages && viewItem == image","group":"images_1_run@1"},{"command":"vscode-docker.images.runInteractive","when":"view == dockerImages && viewItem == image","group":"images_1_run@2"},{"command":"vscode-docker.images.inspect","when":"view == dockerImages && viewItem == image","group":"images_2_general@1"},{"command":"vscode-docker.images.pull","when":"view == dockerImages && viewItem == image","group":"images_2_general@2"},{"command":"vscode-docker.images.push","when":"view == dockerImages && viewItem == image","group":"images_2_general@3"},{"command":"vscode-docker.images.tag","when":"view == dockerImages && viewItem == image","group":"images_2_general@4"},{"command":"vscode-docker.images.copyFullTag","when":"view == dockerImages && viewItem == image","group":"images_2_general@5"},{"command":"vscode-docker.images.remove","when":"view == dockerImages && viewItem == image","group":"images_3_destructive@1"},{"command":"vscode-docker.images.group.remove","when":"view == dockerImages && viewItem =~ /imageGroup$/i","group":"images_group_1_destructive@1"},{"command":"vscode-docker.networks.inspect","when":"view == dockerNetworks && viewItem =~ /network$/i","group":"networks_1_general@1"},{"command":"vscode-docker.networks.remove","when":"view == dockerNetworks && viewItem =~ /^customNetwork$/i","group":"networks_2_destructive@1"},{"command":"vscode-docker.registries.azure.createRegistry","when":"view == dockerRegistries && viewItem =~ /azuresubscription/i","group":"regs_1_general@1"},{"command":"vscode-docker.registries.azure.deleteRegistry","when":"view == dockerRegistries && viewItem =~ /azure;.*commonregistry/i","group":"regs_reg_2_destructive@1"},{"command":"vscode-docker.registries.pullRepository","when":"view == dockerRegistries && viewItem =~ /commonrepository/","group":"regs_repo_1_general@1"},{"command":"vscode-docker.registries.azure.deleteRepository","when":"view == dockerRegistries && viewItem =~ /azure;.*commonrepository/i","group":"regs_repo_2_destructive@1"},{"command":"vscode-docker.registries.pullImage","when":"view == dockerRegistries && viewItem =~ /commontag/i","group":"regs_tag_1_general@1"},{"command":"vscode-docker.registries.copyRemoteFullTag","when":"view == dockerRegistries && viewItem =~ /commontag/i","group":"regs_tag_1_general@2"},{"command":"vscode-docker.registries.copyImageDigest","when":"view == dockerRegistries && viewItem =~ /commontag/i && !(viewItem =~ /commontag;.*dockerhub/i)","group":"regs_tag_1_general@3"},{"command":"vscode-docker.registries.inspectRemoteImageManifest","when":"view == dockerRegistries && viewItem =~ /commontag/i && !(viewItem =~ /commontag;.*dockerhub/i)","group":"regs_tag_1_general@4"},{"command":"vscode-docker.registries.deployImageToAzure","when":"view == dockerRegistries && viewItem =~ /commontag/i","group":"regs_tag_1_general@5"},{"command":"vscode-docker.registries.deployImageToAca","when":"view == dockerRegistries && viewItem =~ /commontag/i","group":"regs_tag_1_general@6"},{"command":"vscode-docker.registries.azure.untagImage","when":"view == dockerRegistries && viewItem =~ /azure;.*commontag/i","group":"regs_tag_2_destructive@1"},{"command":"vscode-docker.registries.deleteImage","when":"view == dockerRegistries && viewItem =~ /commontag/i && !(viewItem =~ /commontag;.*(dockerhub|github)/i)","group":"regs_tag_2_destructive@2"},{"command":"vscode-docker.registries.disconnectRegistry","when":"view == dockerRegistries && viewItem =~ /commonregistryroot/i","group":"regs_yyy_destructive@1"},{"command":"vscode-docker.registries.genericV2.removeTrackedRegistry","when":"view == dockerRegistries && viewItem =~ /commonregistry;.*generic/i","group":"regs_yyy_destructive@1"},{"command":"vscode-docker.registries.genericV2.addTrackedRegistry","when":"view == dockerRegistries && viewItem =~ /commonregistryroot;.*generic/i","group":"regs_yyy_destructive@1"},{"command":"vscode-docker.registries.azure.openInPortal","when":"view == dockerRegistries && viewItem =~ /azuresubscription|azure;.*(commonregistry|commonrepository)/i","group":"regs_zzz_common@1"},{"command":"vscode-docker.registries.dockerHub.openInBrowser","when":"view == dockerRegistries && viewItem =~ /(commonregistry|commonrepository|commontag);.*dockerhub/i","group":"regs_zzz_common@1"},{"command":"vscode-docker.registries.azure.viewProperties","when":"view == dockerRegistries && viewItem =~ /azure;.*commonregistry/i","group":"regs_zzz_common@2"},{"command":"vscode-docker.registries.reconnectRegistry","when":"view == dockerRegistries && viewItem =~ /registryConnectError/i","group":"regs_zzz_common@8"},{"command":"vscode-docker.registries.refresh","when":"view == dockerRegistries && viewItem == connectedRegistries","group":"regs_zzz_common@9"},{"command":"vscode-docker.registries.refresh","when":"view == dockerRegistries && viewItem =~ /commonregistry|commonregistryroot|commonrepository/","group":"regs_zzz_common@9"},{"command":"vscode-docker.volumes.inspect","when":"view == dockerVolumes && viewItem == volume","group":"volumes_1_general@1"},{"command":"vscode-docker.volumes.remove","when":"view == dockerVolumes && viewItem == volume","group":"volumes_2_destructive@1"},{"command":"vscode-docker.contexts.inspect","when":"view == vscode-docker.views.dockerContexts && viewItem =~ /Context/i","group":"contexts_1_general@1"},{"command":"vscode-docker.contexts.use","when":"view == vscode-docker.views.dockerContexts && viewItem =~ /Context/i","group":"contexts_1_general@2"},{"command":"vscode-docker.contexts.use","when":"view == vscode-docker.views.dockerContexts && viewItem =~ /Context/i","group":"inline"},{"command":"vscode-docker.contexts.remove","when":"view == vscode-docker.views.dockerContexts && viewItem =~ /^customContext/i","group":"contexts_2_destructive@1"},{"command":"vscode-docker.containers.downloadFile","when":"view == dockerContainers && viewItem == containerFile","group":"inline@2"},{"command":"vscode-docker.containers.openFile","when":"view == dockerContainers && viewItem == containerFile","group":"inline@1"}],"issue/reporter":[{"command":"vscode-docker.help.reportIssue"}]},"debuggers":[{"type":"docker","label":"Docker: Debug in Container","languages":["csharp","razor","aspnetcorerazor","vb","fsharp"],"configurationAttributes":{"launch":{"properties":{"containerName":{"type":"string","description":"Name of the container used for debugging."},"dockerServerReadyAction":{"description":"Options for launching a browser to the Docker container. Similar to serverReadyAction, but replaces container ports with host ports.","properties":{"action":{"type":"string","description":"The action to take when the pattern is found.","enum":["debugWithChrome","openExternally"]},"containerName":{"type":"string","description":"The container name to match the host port."},"pattern":{"type":"string","description":"The regex pattern to look for in Debug console output.","default":"(https?://\\S+|[0-9]+)"},"uriFormat":{"type":"string","description":"The URI format to launch.","default":"http://localhost:%s"},"webRoot":{"type":"string","description":"The root folder from which web pages are served."}}},"removeContainerAfterDebug":{"type":"boolean","description":"Whether to remove the debug container after debugging.","default":true},"platform":{"type":"string","description":"The target platform for the application.","enum":["netCore","node","python"]},"netCore":{"description":"Options for debugging .NET projects in Docker.","properties":{"appProject":{"type":"string","description":"The .NET project (.csproj, .fsproj, etc.) to debug."}},"required":["appProject"]},"node":{"description":"Options for debugging Node.js projects in Docker.","properties":{"port":{"type":"integer","description":"The debug port to use."},"address":{"type":"string","description":"TCP/IP address of the debug port."},"sourceMaps":{"type":"boolean","description":"Enable source maps by setting this to `true`."},"outFiles":{"type":"array","description":"Array of glob patterns for locating generated JavaScript files.","items":{"type":"string"}},"autoAttachChildProcesses":{"type":"boolean","description":"Track all subprocesses of debuggee and automatically attach to those that are launched in debug mode."},"timeout":{"type":"integer","description":"When restarting a session, give up after this number of milliseconds."},"stopOnEntry":{"type":"boolean","description":"Break immediately when the program launches."},"localRoot":{"type":"string","description":"VS Code's root directory."},"package":{"type":"string","description":"The path to the package.json for the application."},"remoteRoot":{"type":"string","description":"Node's root directory within the Docker container."},"smartStep":{"type":"boolean","description":"Try to automatically step over code that doesn't map to source files."},"skipFiles":{"type":"array","description":"Automatically skip files covered by these glob patterns.","items":{"type":"string"}},"trace":{"type":"boolean","description":"Enable diagnostic output."}}},"python":{"description":"Options for debugging Python applications in Docker.","properties":{"host":{"type":"string","description":"The host for remote debugging.","default":"localhost"},"port":{"type":"number","description":"The port for remote debugging.","default":5678},"pathMappings":{"type":"array","items":{"type":"object","properties":{"localRoot":{"type":"string","description":"The host path."},"remoteRoot":{"type":"string","description":"The container path."}}}},"justMyCode":{"type":"boolean","description":"Debug only user-written code."},"django":{"type":"boolean","description":"Django debugging.","default":false},"fastapi":{"type":"boolean","description":"FastAPI debugging.","default":false},"jinja":{"type":"boolean","description":"Jinja template debugging (e.g. Flask).","default":false},"projectType":{"type":"string","description":"Type of the Python app.","enum":["django","fastapi","flask","general"]},"args":{"type":"array","description":"Arguments passed to the Python app.","items":{"type":"string"}}}}}},"attach":{"properties":{"containerName":{"type":"string","description":"The container name to attach to. If not specified, then user will be prompted to pick a container."},"processName":{"type":"string","description":"The process name to attach to. If this is used, 'processId' should not be used."},"processId":{"anyOf":[{"type":"string","description":"The process id to attach to. Use \"${command:pickProcess}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":"${command:pickProcess}"},{"type":"integer","description":"The process id to attach to. Use \"${command:pickProcess}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":0}]},"platform":{"type":"string","description":"The target platform for the application.","enum":["netCore"]},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/src\":\"${workspaceFolder}\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"netCore":{"description":"Options for debugging .NET projects in Docker.","properties":{"debuggerPath":{"type":"string","description":"The path for the debugger in the target container, for example `/remote_debugger/vsdbg`."}}}}}},"configurationSnippets":[{"label":"Docker: Attach to Node","description":"Docker: Attach to Node","body":{"type":"node","request":"attach","name":"Docker: Attach to Node","remoteRoot":"/usr/src/app"}},{"label":"Docker: .NET Attach (Preview)","description":"Docker: Attach to a .NET process in a container","body":{"name":"Docker .NET Attach (Preview)","type":"docker","request":"attach","platform":"netCore","sourceFileMap":{"/src":"^\"\\${workspaceFolder}\""}}}]}],"taskDefinitions":[{"type":"docker-build","properties":{"dockerBuild":{"description":"Options for building the Docker image used for debugging. Learn more at https://aka.ms/vscode-docker-build-task","properties":{"buildArgs":{"type":"object","description":"Build arguments applied to the Docker image used for debugging.","additionalProperties":{"type":"string"}},"context":{"type":"string","description":"Path to the Docker build context.","default":"${workspaceFolder}"},"dockerfile":{"type":"string","description":"Path to the Dockerfile used for the build.","default":"${workspaceFolder}/Dockerfile"},"labels":{"type":"object","description":"Labels applied to the Docker image used for debugging.","properties":{"includeDefaults":{"type":"boolean","description":"Whether to include the default set of labels defined by the Docker extension","default":true}},"additionalProperties":{"type":"string"}},"platform":{"anyOf":[{"type":"object","properties":{"os":{"anyOf":[{"type":"string","enum":["linux","darwin","windows"]},{"type":"string"}],"description":"OS of the target image platform."},"architecture":{"anyOf":[{"type":"string","enum":["amd64","386","arm64","arm"]},{"type":"string"}],"description":"CPU architecture of the target image platform."}}},{"type":"string","enum":["linux/amd64","linux/386","linux/arm64","linux/arm","darwin/amd64","darwin/arm64","windows/amd64","windows/386","windows/arm64","windows/arm"]},{"type":"string"}],"description":"Target platform for the image build"},"tag":{"type":"string","description":"Tag applied to the Docker image used for debugging."},"target":{"type":"string","description":"Docker build target (stage) used for debugging."},"pull":{"type":"boolean","description":"Whether or not to pull new base images before building."},"customOptions":{"type":"string","description":"Any other options to add to the `docker build` command."}},"required":["context"]},"platform":{"type":"string","description":"The target platform for the application.","enum":["netCore","node","python"]},"netCore":{"description":"Options for building .NET projects in Docker.","properties":{"appProject":{"type":"string","description":"The .NET project (.csproj, .fsproj, etc.) to build."}},"required":["appProject"]},"node":{"description":"Options for building Node.js applications in Docker.","properties":{"package":{"type":"string","description":"The path to the package.json for the application."}}},"python":{"description":"Options for building Python applications in Docker.","type":"object"},"options":{"description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."},"env":{"type":"object","description":"The environment of the executed program or shell. If omitted the parent process' environment is used.","additionalProperties":{"type":"string"}}}}},"required":["dockerBuild"]},{"type":"docker-run","properties":{"dockerRun":{"description":"Options for running the Docker container used for debugging. Learn more at https://aka.ms/vscode-docker-run-task","properties":{"command":{"type":"string","description":"The command to run upon starting the container."},"entrypoint":{"type":"string","description":"The entrypoint to use when starting the container."},"containerName":{"type":"string","description":"Name of the container used for debugging."},"env":{"type":"object","description":"Environment variables applied to the Docker container used for debugging.","additionalProperties":{"type":"string"}},"envFiles":{"type":"array","description":"Files of environment variables read in and applied to the Docker container used for debugging.","items":{"type":"string"}},"image":{"type":"string","description":"The image to run."},"labels":{"type":"object","description":"Labels applied to the Docker container used for debugging.","properties":{"includeDefaults":{"type":"boolean","description":"Whether to include the default set of labels defined by the Docker extension","default":true}},"additionalProperties":{"type":"string"}},"network":{"type":"string","description":"The network to which the container will be connected."},"networkAlias":{"type":"string","description":"The network-scoped alias to assign to the container."},"os":{"type":"string","description":"The container operating system.","default":"Linux","enum":["Linux","Windows"]},"ports":{"type":"array","description":"Ports that are going to be mapped on the host.","items":{"type":"object","properties":{"hostPort":{"type":"integer","description":"Port number to be bound on the host."},"containerPort":{"type":"integer","description":"Port number of the container to be bound."},"protocol":{"type":"string","description":"Specific protocol for the binding (`tcp | udp`).","enum":["tcp","udp"]}},"required":["containerPort"]}},"portsPublishAll":{"type":"boolean","description":"Whether to publish all exposed container ports to random ports on the host.","default":true},"extraHosts":{"type":"array","description":"Hosts to be added to the container's `hosts` file for DNS resolution.","items":{"type":"object","properties":{"hostname":{"type":"string","description":"Hostname for dns resolution."},"ip":{"type":"string","description":"IP associated to the hostname."}},"required":["hostname","ip"]}},"volumes":{"type":"array","description":"Volumes that are going to be mapped to the container.","items":{"type":"object","properties":{"localPath":{"type":"string","description":"Path on local machine that will be mapped. The folder will be created if it does not exist."},"containerPath":{"type":"string","description":"Path where the volume will be mapped within the container. The folder will be created if it does not exist."},"permissions":{"type":"string","description":"Permissions for the container for the mapped volume, `rw` for read-write or `ro` for read-only.","enum":["rw","ro"]}},"required":["localPath","containerPath"]}},"remove":{"type":"boolean","description":"Whether to clean up the container and remove the file system when the container exits.","default":false},"customOptions":{"type":"string","description":"Any other options to add to the `docker run` command."}}},"platform":{"type":"string","description":"The target platform for the application.","enum":["netCore","node","python"]},"netCore":{"description":"Options for running .NET projects in Docker.","properties":{"appProject":{"type":"string","description":"The .NET project (.csproj, .fsproj, etc.) to build."},"enableDebugging":{"type":"boolean","description":"Whether to enable debugging within the container."},"configureSsl":{"type":"boolean","description":"Whether to configure certificate and other settings to enable SSL on ASP.NET Core web services."}},"required":["appProject"]},"node":{"description":"Options for running Node.js applications in Docker.","properties":{"enableDebugging":{"type":"boolean","description":"Whether to enable debugging within the container."},"inspectMode":{"type":"string","description":"Whether debugging should break immediately upon application start."},"inspectPort":{"type":"integer","description":"The port on which debugging should occur."},"package":{"type":"string","description":"The path to the package.json for the application."}}},"python":{"type":"object","additionalProperties":false,"description":"Options for running Python applications in Docker.","properties":{"file":{"type":"string","description":"The Python file to run. Cannot be combined with `module`.","default":"${file}"},"module":{"type":"string","description":"The Python module to run. Cannot be combined with `file`."},"args":{"type":"array","description":"Arguments passed to the Python app.","items":{"type":"string"}},"wait":{"type":"boolean","description":"Whether to wait for debugger to attach.","default":true},"debugPort":{"type":"number","description":"The port that the debugger will listen on.","default":5678}},"oneOf":[{"required":["file"]},{"required":["module"]}]},"options":{"description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."},"env":{"type":"object","description":"The environment of the executed program or shell. If omitted the parent process' environment is used.","additionalProperties":{"type":"string"}}}}}},{"type":"docker-compose","properties":{"dockerCompose":{"description":"Options for the `docker-compose` command.","properties":{"up":{"description":"Options for the `docker-compose up` command. Cannot be combined with `down`.","properties":{"detached":{"type":"boolean","description":"Whether or not to run detached.","default":true},"build":{"type":"boolean","description":"Whether or not to build.","default":true},"scale":{"type":"object","description":"The scale for each service.","additionalProperties":{"type":"number"}},"services":{"type":"array","description":"A subset of services to start. Cannot be combined with `profiles`.","items":{"type":"string"}},"profiles":{"type":"array","description":"A subset of profiles to start. Cannot be combined with `services`.","items":{"type":"string"}},"customOptions":{"type":"string","description":"Any other options to add to the `docker-compose up` command."}},"not":{"required":["services","profiles"]}},"down":{"description":"Options for the `docker-compose down` command.","properties":{"removeImages":{"type":"string","description":"Images to remove.","enum":["all","local"]},"removeVolumes":{"type":"boolean","description":"Whether or not to remove named and anonymous volumes.","default":false},"customOptions":{"type":"string","description":"Any other options to add to the `docker-compose down` command. Cannot be combined with `up`."}}},"envFiles":{"type":"array","description":"(DEPRECATED) Use `envFile` instead.","items":{"type":"string"}},"envFile":{"type":"string","description":"File of environment variables read in and applied to the Docker containers."},"files":{"type":"array","description":"The docker-compose files to include, in order.","items":{"type":"string"}},"projectName":{"type":"string","description":"Alternate project name to use when naming and labeling Docker objects. If using an alternate project name when composing up, the same project name must be specified when composing down."}},"oneOf":[{"required":["up"]},{"required":["down"]}],"default":{"up":{"detached":true,"build":true},"files":["${workspaceFolder}/docker-compose.yml"]}},"options":{"description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."},"env":{"type":"object","description":"The environment of the executed program or shell. If omitted the parent process' environment is used.","additionalProperties":{"type":"string"}}}}},"required":["dockerCompose"]},{"type":"dotnet-container-sdk","properties":{"netCore":{"description":"Options for debugging .NET projects in Docker.","properties":{"appProject":{"type":"string","description":"The .NET project (.csproj, .fsproj, etc.) to debug."}},"required":["appProject"]},"dockerRun":{"description":"Options for running the Docker container used for debugging.","properties":{"containerName":{"type":"string","description":"Name of the container used for debugging."}},"required":["containerName"]}}}],"languages":[{"id":"dockerfile","aliases":["Dockerfile"],"filenamePatterns":["*.dockerfile","Dockerfile","Dockerfile.*"]},{"id":"ignore","filenames":[".dockerignore"],"filenamePatterns":["*.dockerignore"]}],"configurationDefaults":{"[dockercompose]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.autoIndent":"advanced","editor.quickSuggestions":{"other":true,"comments":false,"strings":true}}},"configuration":{"title":"Docker","properties":{"docker.promptForRegistryWhenPushingImages":{"type":"boolean","default":true,"description":"Prompt for registry selection if the image is not explicitly tagged."},"docker.commands.build":{"oneOf":[{"type":"array","items":{"properties":{"template":{"type":"string","description":"The command template."},"label":{"type":"string","description":"The label displayed to the user."},"match":{"type":"string","description":"The regular expression for choosing the right template. Checked against container name, container's image name, etc."}},"required":["label","template"]}},{"type":"string"}],"default":"${containerCommand} build --pull --rm -f \"${dockerfile}\" -t ${tag} \"${context}\"","description":"Command template(s) for `docker build` commands."},"docker.commands.run":{"oneOf":[{"type":"array","items":{"properties":{"template":{"type":"string","description":"The command template."},"label":{"type":"string","description":"The label displayed to the user."},"match":{"type":"string","description":"The regular expression for choosing the right template. Checked against image name, etc."}},"required":["label","template"]}},{"type":"string"}],"default":"${containerCommand} run --rm -d ${exposedPorts} ${tag}","description":"Command templates for `docker run` commands."},"docker.commands.runInteractive":{"oneOf":[{"type":"array","items":{"properties":{"template":{"type":"string","description":"The command template."},"label":{"type":"string","description":"The label displayed to the user."},"match":{"type":"string","description":"The regular expression for choosing the right template. Checked against image name, etc."}},"required":["label","template"]}},{"type":"string"}],"default":"${containerCommand} run --rm -it ${exposedPorts} ${tag}","description":"Command templates for `docker run -it` (interactive) commands."},"docker.commands.attach":{"oneOf":[{"type":"array","items":{"properties":{"template":{"type":"string","description":"The command template."},"label":{"type":"string","description":"The label displayed to the user."},"match":{"type":"string","description":"The regular expression for choosing the right template. Checked against container name, container's image name, etc."}},"required":["label","template"]}},{"type":"string"}],"default":"${containerCommand} exec -it ${containerId} ${shellCommand}","description":"Command templates for `docker attach` / `docker exec -it` commands."},"docker.commands.logs":{"oneOf":[{"type":"array","items":{"properties":{"template":{"type":"string","description":"The command template."},"label":{"type":"string","description":"The label displayed to the user."},"match":{"type":"string","description":"The regular expression for choosing the right template. Checked against container name, container's image name, etc."}},"required":["label","template"]}},{"type":"string"}],"default":"${containerCommand} logs --tail 1000 -f ${containerId}","description":"Command templates for `docker logs` commands."},"docker.commands.composeUp":{"oneOf":[{"type":"array","items":{"properties":{"template":{"type":"string","description":"The command template."},"label":{"type":"string","description":"The label displayed to the user."},"match":{"type":"string","description":"The regular expression for choosing the right template. Checked against docker-compose YAML files, folder name, etc."}},"required":["label","template"]}},{"type":"string"}],"default":[{"label":"Compose Up","template":"${composeCommand} ${configurationFile} up ${detached} ${build}"}],"description":"Command templates for `docker-compose up` commands."},"docker.commands.composeUpSubset":{"oneOf":[{"type":"array","items":{"properties":{"template":{"type":"string","description":"The command template."},"label":{"type":"string","description":"The label displayed to the user."},"match":{"type":"string","description":"The regular expression for choosing the right template. Checked against docker-compose YAML files, folder name, etc."}},"required":["label","template"]}},{"type":"string"}],"default":[{"label":"Compose Up","template":"${composeCommand} ${profileList} ${configurationFile} up ${detached} ${build} ${serviceList}"}],"description":"Command templates for `docker-compose up <subset>` commands."},"docker.commands.composeDown":{"oneOf":[{"type":"array","items":{"properties":{"template":{"type":"string","description":"The command template."},"label":{"type":"string","description":"The label displayed to the user."},"match":{"type":"string","description":"The regular expression for choosing the right template. Checked against docker-compose YAML files, folder name, etc."}},"required":["label","template"]}},{"type":"string"}],"default":[{"label":"Compose Down","template":"${composeCommand} ${configurationFile} down"}],"description":"Command templates for `docker-compose down` commands."},"docker.containers.groupBy":{"type":"string","default":"Compose Project Name","description":"The property to use to group containers in Docker view: ContainerId, ContainerName, CreatedTime, FullTag, ImageId, Networks, Ports, Registry, RegistryAndPath, Repository, RepositoryName, RepositoryNameShort, RepositoryNameAndTag, State, Status, Tag, or None","enum":["Compose Project Name","ContainerId","ContainerName","CreatedTime","FullTag","Image","Networks","None","Ports","Registry","RegistryAndPath","Repository","RepositoryName","RepositoryNameShort","RepositoryNameAndTag","State","Status","Tag","Label"]},"docker.containers.groupByLabel":{"type":"string","description":"The items will be grouped by the value of this container label (e.g. `com.microsoft.created-by`)"},"docker.containers.description":{"type":"array","default":["ContainerName","Status"],"description":"Any secondary properties to display for a container (an array). Possible elements include: ContainerId, ContainerName, CreatedTime, FullTag, ImageId, Networks, Ports, Registry, RegistryAndPath, Repository, RepositoryName, RepositoryNameShort, RepositoryNameAndTag, State, Status, and Tag","items":{"type":"string","enum":["Compose Project Name","ContainerId","ContainerName","CreatedTime","FullTag","Image","Networks","Ports","Registry","RegistryAndPath","Repository","RepositoryName","RepositoryNameShort","RepositoryNameAndTag","State","Status","Tag"]}},"docker.containers.label":{"type":"string","default":"FullTag","description":"The primary property to display for a container: ContainerId, ContainerName, CreatedTime, FullTag, ImageId, Networks, Ports, Registry, RegistryAndPath, Repository, RepositoryName, RepositoryNameShort, RepositoryNameAndTag, State, Status, or Tag","enum":["Compose Project Name","ContainerId","ContainerName","CreatedTime","FullTag","Image","Networks","Ports","Registry","RegistryAndPath","Repository","RepositoryName","RepositoryNameShort","RepositoryNameAndTag","State","Status","Tag"]},"docker.containers.sortBy":{"type":"string","default":"CreatedTime","description":"The property to use to sort containers in Docker view: CreatedTime or Label","enum":["CreatedTime","Label"]},"docker.contexts.description":{"type":"array","default":["Description"],"description":"Any secondary properties to display for a Docker context (an array). Possible elements include: Name, Description and DockerEndpoint","items":{"type":"string","enum":["Name","Description","DockerEndpoint"]}},"docker.contexts.label":{"type":"string","default":"Name","description":"The primary property to display for a Docker context: Name, Description or DockerEndpoint","enum":["Name","Description","DockerEndpoint"]},"docker.contexts.showInStatusBar":{"type":"boolean","default":false,"description":"Show current Docker context in the status bar"},"docker.images.groupBy":{"type":"string","default":"Repository","description":"The property to use to group images in Docker view: CreatedTime, FullTag, ImageId, None, Registry, RegistryAndPath, Repository, RepositoryName, RepositoryNameShort, RepositoryNameAndTag, or Tag","enum":["CreatedTime","FullTag","ImageId","None","Registry","RegistryAndPath","Repository","RepositoryName","RepositoryNameShort","RepositoryNameAndTag","Tag"]},"docker.images.description":{"type":"array","default":["CreatedTime"],"description":"Any secondary properties to display for a image (an array). Possible elements include: CreatedTime, FullTag, ImageId, Registry, RegistryAndPath, Repository, RepositoryName, RepositoryNameShort, RepositoryNameAndTag, Tag, and Size","items":{"type":"string","enum":["CreatedTime","FullTag","ImageId","Registry","RegistryAndPath","Repository","RepositoryName","RepositoryNameShort","RepositoryNameAndTag","Tag","Size"]}},"docker.images.label":{"type":"string","default":"Tag","description":"The primary property to display for a image: CreatedTime, FullTag, ImageId, Registry, RegistryAndPath, Repository, RepositoryName, RepositoryNameShort, RepositoryNameAndTag, Tag, or Size","enum":["CreatedTime","FullTag","ImageId","Registry","RegistryAndPath","Repository","RepositoryName","RepositoryNameShort","RepositoryNameAndTag","Tag","Size"]},"docker.images.sortBy":{"type":"string","default":"CreatedTime","description":"The property to use to sort images in Docker view: CreatedTime, Label, or Size","enum":["CreatedTime","Label","Size"]},"docker.images.checkForOutdatedImages":{"type":"boolean","default":true,"description":"Check for outdated base images once per Visual Studio Code session"},"docker.networks.groupBy":{"type":"string","default":"None","description":"The property to use to group networks in Docker view: CreatedTime, NetworkDriver, NetworkId, NetworkName, or None","enum":["CreatedTime","NetworkDriver","NetworkId","NetworkName","None"]},"docker.networks.description":{"type":"array","default":["NetworkDriver","CreatedTime"],"description":"Any secondary properties to display for a Docker network (an array). Possible elements include CreatedTime, NetworkDriver, NetworkId, and NetworkName","items":{"type":"string","enum":["CreatedTime","NetworkDriver","NetworkId","NetworkName"]}},"docker.networks.showBuiltInNetworks":{"type":"boolean","default":true,"description":"Show the built-in networks in the explorer."},"docker.networks.label":{"type":"string","default":"NetworkName","description":"The primary property to display for a Docker network: CreatedTime, NetworkDriver, NetworkId, or NetworkName","enum":["CreatedTime","NetworkDriver","NetworkId","NetworkName"]},"docker.networks.sortBy":{"type":"string","default":"CreatedTime","description":"The property to use to sort networks in Docker view: CreatedTime or Label","enum":["CreatedTime","Label"]},"docker.volumes.groupBy":{"type":"string","default":"None","description":"The property to use to group volumes in Docker view: CreatedTime, VolumeName, or None","enum":["CreatedTime","VolumeName","None"]},"docker.volumes.description":{"type":"array","default":["CreatedTime"],"description":"Any secondary properties to display for a Docker volume (an array). Possible values include CreatedTime and VolumeName","items":{"type":"string","enum":["CreatedTime","VolumeName"]}},"docker.volumes.label":{"type":"string","default":"VolumeName","description":"The primary property to display for a Docker volume: CreatedTime or VolumeName","enum":["CreatedTime","VolumeName"]},"docker.volumes.sortBy":{"type":"string","default":"CreatedTime","description":"The property to use to sort volumes in Docker view: CreatedTime or Label","enum":["CreatedTime","Label"]},"docker.imageBuildContextPath":{"type":"string","default":"","description":"Build context PATH to pass to Docker build command.","scope":"machine-overridable"},"docker.truncateLongRegistryPaths":{"type":"boolean","default":false,"description":"Set to true to truncate long image and container registry paths in Docker view"},"docker.truncateMaxLength":{"type":"number","default":10,"description":"Maximum length of a registry paths displayed in Docker view, including ellipsis. The truncateLongRegistryPaths setting must be set to true for truncateMaxLength setting to be effective."},"docker.environment":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables that will be applied to all VS Code terminals and to all background processes started by the Docker extension. Use for variables like `DOCKER_HOST`, etc.","scope":"machine-overridable"},"docker.languageserver.diagnostics.deprecatedMaintainer":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for the deprecated MAINTAINER instruction"},"docker.languageserver.diagnostics.emptyContinuationLine":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging empty continuation lines found in instructions that span multiple lines"},"docker.languageserver.diagnostics.directiveCasing":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for parser directives that are not written in lowercase"},"docker.languageserver.diagnostics.instructionCasing":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for instructions that are not written in uppercase"},"docker.languageserver.diagnostics.instructionCmdMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple CMD instructions"},"docker.languageserver.diagnostics.instructionEntrypointMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple ENTRYPOINT instructions"},"docker.languageserver.diagnostics.instructionHealthcheckMultiple":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for flagging a Dockerfile with multiple HEALTHCHECK instructions"},"docker.languageserver.diagnostics.instructionJSONInSingleQuotes":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for JSON instructions that are written incorrectly with single quotes"},"docker.languageserver.diagnostics.instructionWorkdirRelative":{"scope":"resource","type":"string","default":"warning","enum":["ignore","warning","error"],"description":"Controls the diagnostic severity for WORKDIR instructions that do not point to an absolute path"},"docker.languageserver.formatter.ignoreMultilineInstructions":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether the Dockerfile formatter should ignore instructions that span multiple lines when formatting"},"docker.dockerComposeBuild":{"type":"boolean","default":true,"description":"Set to true to include --build option when docker-compose command is invoked"},"docker.dockerComposeDetached":{"type":"boolean","default":true,"description":"Set to true to include --d (detached) option when docker-compose command is invoked"},"docker.showRemoteWorkspaceWarning":{"type":"boolean","default":true,"description":"Set to true to prompt to switch from \"UI\" extension mode to \"Workspace\" extension mode if an operation is not supported in UI mode."},"docker.scaffolding.templatePath":{"type":"string","description":"The path to use for scaffolding templates."},"docker.dockerPath":{"type":"string","description":"Absolute path to Docker client executable (`docker` command). If the path contains whitespace, it needs to be quoted appropriately.","scope":"machine-overridable"},"docker.composeCommand":{"type":"string","description":"Command to use for Docker Compose actions (e.g. `docker-compose`, `docker compose`, etc.). If the executable path contains whitespace, it needs to be quoted appropriately. If unset, the extension will attempt to auto-detect the command to use.","scope":"machine-overridable"},"docker.enableDockerComposeLanguageService":{"type":"boolean","default":true,"description":"Whether or not to enable the preview Docker Compose Language Service. Changing requires restart to take effect."}}},"commands":[{"command":"vscode-docker.compose.down","title":"Compose Down","category":"Docker"},{"command":"vscode-docker.compose.restart","title":"Compose Restart","category":"Docker"},{"command":"vscode-docker.compose.up","title":"Compose Up","category":"Docker"},{"command":"vscode-docker.compose.up.subset","title":"Compose Up - Select Services","category":"Docker"},{"command":"vscode-docker.configure","title":"Add Docker Files to Workspace...","category":"Docker"},{"command":"vscode-docker.configureCompose","title":"Add Docker Compose Files to Workspace...","category":"Docker"},{"command":"vscode-docker.openDockerDownloadPage","title":"Learn More About Installing Docker Desktop","category":"Docker"},{"command":"vscode-docker.containers.attachShell","title":"Attach Shell","category":"Docker Containers"},{"command":"vscode-docker.containers.browse","title":"Open in Browser","category":"Docker Containers"},{"command":"vscode-docker.containers.configureExplorer","title":"Configure Explorer...","category":"Docker Containers","icon":"$(settings-gear)"},{"command":"vscode-docker.containers.downloadFile","title":"Download...","category":"Docker Containers","icon":"$(desktop-download)"},{"command":"vscode-docker.containers.inspect","title":"Inspect","category":"Docker Containers"},{"command":"vscode-docker.containers.openFile","title":"Open","category":"Docker Containers","icon":"$(go-to-file)"},{"command":"vscode-docker.containers.prune","title":"Prune...","category":"Docker Containers","icon":"$(clear-all)"},{"command":"vscode-docker.containers.refresh","title":"Refresh","category":"Docker Containers","icon":"$(refresh)"},{"command":"vscode-docker.containers.remove","title":"Remove...","category":"Docker Containers"},{"command":"vscode-docker.containers.group.remove","title":"Remove...","category":"Docker Containers"},{"command":"vscode-docker.containers.restart","title":"Restart","category":"Docker Containers"},{"command":"vscode-docker.containers.select","title":"Select container","category":"Docker Containers"},{"command":"vscode-docker.containers.start","title":"Start","category":"Docker Containers"},{"command":"vscode-docker.containers.stop","title":"Stop","category":"Docker Containers"},{"command":"vscode-docker.containers.stats","title":"Stats","category":"Docker"},{"command":"vscode-docker.containers.viewLogs","title":"View Logs","category":"Docker Containers"},{"command":"vscode-docker.containers.composeGroup.logs","title":"Compose Logs","category":"Docker Containers"},{"command":"vscode-docker.containers.composeGroup.start","title":"Compose Start","category":"Docker Containers"},{"command":"vscode-docker.containers.composeGroup.stop","title":"Compose Stop","category":"Docker Containers"},{"command":"vscode-docker.containers.composeGroup.restart","title":"Compose Restart","category":"Docker Containers"},{"command":"vscode-docker.containers.composeGroup.down","title":"Compose Down","category":"Docker Containers"},{"command":"vscode-docker.debugging.initializeForDebugging","title":"Initialize for Docker debugging","category":"Docker"},{"command":"vscode-docker.images.build","title":"Build Image...","category":"Docker Images"},{"command":"vscode-docker.images.configureExplorer","title":"Configure Explorer...","category":"Docker Images","icon":"$(settings-gear)"},{"command":"vscode-docker.images.inspect","title":"Inspect","category":"Docker Images"},{"command":"vscode-docker.images.prune","title":"Prune...","category":"Docker Images","icon":"$(clear-all)"},{"command":"vscode-docker.images.showDangling","title":"Show dangling images","category":"Docker Images","icon":"$(eye)"},{"command":"vscode-docker.images.hideDangling","title":"Hide dangling images","category":"Docker Images","icon":"$(eye-closed)"},{"command":"vscode-docker.images.pull","title":"Pull","category":"Docker Images"},{"command":"vscode-docker.images.push","title":"Push...","category":"Docker Images"},{"command":"vscode-docker.images.refresh","title":"Refresh","category":"Docker Images","icon":"$(refresh)"},{"command":"vscode-docker.images.remove","title":"Remove...","category":"Docker Images"},{"command":"vscode-docker.images.group.remove","title":"Remove...","category":"Docker Images"},{"command":"vscode-docker.images.run","title":"Run","category":"Docker Images"},{"command":"vscode-docker.images.runAzureCli","title":"Run Azure CLI","category":"Docker Images"},{"command":"vscode-docker.images.runInteractive","title":"Run Interactive","category":"Docker Images"},{"command":"vscode-docker.images.tag","title":"Tag...","category":"Docker Images"},{"command":"vscode-docker.images.copyFullTag","title":"Copy Full Tag","category":"Docker Images"},{"command":"vscode-docker.networks.configureExplorer","title":"Configure Explorer...","category":"Docker Networks","icon":"$(settings-gear)"},{"command":"vscode-docker.networks.create","title":"Create...","category":"Docker Networks","icon":"$(add)"},{"command":"vscode-docker.networks.inspect","title":"Inspect","category":"Docker Networks"},{"command":"vscode-docker.networks.prune","title":"Prune...","category":"Docker Networks","icon":"$(clear-all)"},{"command":"vscode-docker.networks.refresh","title":"Refresh","category":"Docker Networks","icon":"$(refresh)"},{"command":"vscode-docker.networks.remove","title":"Remove...","category":"Docker Networks"},{"command":"vscode-docker.pruneSystem","title":"Prune System...","category":"Docker"},{"command":"vscode-docker.registries.azure.buildImage","title":"Build Image in Azure...","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.createRegistry","title":"Create Registry...","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.deleteRegistry","title":"Delete Registry...","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.deleteRepository","title":"Delete Repository...","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.openInPortal","title":"Open in Portal","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.untagImage","title":"Untag Image...","category":"Azure Container Registry"},{"command":"vscode-docker.registries.azure.viewProperties","title":"View Properties","category":"Azure Container Registry"},{"command":"vscode-docker.registries.connectRegistry","title":"Connect Registry...","category":"Docker Registries","icon":"$(plug)"},{"command":"vscode-docker.registries.copyImageDigest","title":"Copy Image Digest","category":"Docker Registries"},{"command":"vscode-docker.registries.inspectRemoteImageManifest","title":"Inspect Image Manifest","category":"Docker Registries"},{"command":"vscode-docker.registries.copyRemoteFullTag","title":"Copy Full Tag","category":"Docker Registries"},{"command":"vscode-docker.registries.deleteImage","title":"Delete Image...","category":"Docker Registries"},{"command":"vscode-docker.registries.deployImageToAzure","title":"Deploy Image to Azure App Service...","category":"Docker Registries"},{"command":"vscode-docker.registries.deployImageToAca","title":"Deploy Image to Azure Container Apps...","category":"Docker Registries"},{"command":"vscode-docker.registries.disconnectRegistry","title":"Disconnect","category":"Docker Registries"},{"command":"vscode-docker.registries.genericV2.removeTrackedRegistry","title":"Disconnect from Generic Docker Registry","category":"Docker Registries"},{"command":"vscode-docker.registries.genericV2.addTrackedRegistry","title":"Connect to Generic Docker Registry...","category":"Docker Registries"},{"command":"vscode-docker.registries.dockerHub.openInBrowser","title":"Open in Browser","category":"Docker Hub"},{"command":"vscode-docker.registries.help","title":"Registries Help","category":"Docker Registries","icon":"$(question)"},{"command":"vscode-docker.registries.logInToDockerCli","title":"Log In to Docker CLI","category":"Docker Registries"},{"command":"vscode-docker.registries.logOutOfDockerCli","title":"Log Out of Docker CLI","category":"Docker Registries"},{"command":"vscode-docker.registries.pullImage","title":"Pull Image","category":"Docker Registries"},{"command":"vscode-docker.registries.pullRepository","title":"Pull Repository","category":"Docker Registries"},{"command":"vscode-docker.registries.reconnectRegistry","title":"Re-enter credentials","category":"Docker Registries"},{"command":"vscode-docker.registries.refresh","title":"Refresh","category":"Docker Registries","icon":"$(refresh)"},{"command":"vscode-docker.volumes.configureExplorer","title":"Configure Explorer...","category":"Docker Volumes","icon":"$(settings-gear)"},{"command":"vscode-docker.volumes.inspect","title":"Inspect","category":"Docker Volumes"},{"command":"vscode-docker.volumes.prune","title":"Prune...","category":"Docker Volumes","icon":"$(clear-all)"},{"command":"vscode-docker.volumes.refresh","title":"Refresh","category":"Docker Volumes","icon":"$(refresh)"},{"command":"vscode-docker.volumes.remove","title":"Remove...","category":"Docker Volumes"},{"command":"vscode-docker.help","title":"Docker Help","category":"Docker","icon":"$(question)"},{"command":"vscode-docker.help.reportIssue","title":"Report Issue","category":"Docker"},{"command":"vscode-docker.help.openWalkthrough","title":"Open Docker Extension Walkthrough","category":"Docker"},{"command":"vscode-docker.contexts.use","title":"Use","category":"Docker Contexts","icon":"$(check)"},{"command":"vscode-docker.contexts.remove","title":"Remove...","category":"Docker Contexts"},{"command":"vscode-docker.contexts.inspect","title":"Inspect","category":"Docker Contexts"},{"command":"vscode-docker.contexts.configureExplorer","title":"Configure Explorer...","category":"Docker Contexts","icon":"$(settings-gear)"},{"command":"vscode-docker.contexts.refresh","title":"Refresh","category":"Docker Contexts","icon":"$(refresh)"},{"command":"vscode-docker.contexts.help","title":"Docker Context Help","category":"Docker Contexts","icon":"$(question)"},{"command":"vscode-docker.activateRegistryProviders","title":"Activate Registry Providers...","category":"Docker"}],"views":{"dockerView":[{"id":"dockerContainers","name":"Containers"},{"id":"dockerImages","name":"Images"},{"id":"dockerRegistries","name":"Registries"},{"id":"dockerNetworks","name":"Networks","visibility":"collapsed"},{"id":"dockerVolumes","name":"Volumes","visibility":"collapsed"},{"id":"vscode-docker.views.dockerContexts","name":"Contexts","visibility":"collapsed"},{"id":"vscode-docker.views.help","name":"Help and Feedback"}]},"viewsContainers":{"activitybar":[{"icon":"resources/docker.svg","id":"dockerView","title":"Docker"}]},"walkthroughs":[{"id":"dockerStart","title":"Getting Started with Docker","featuredFor":["Dockerfile","docker-compose.yml","docker-compose.yaml"],"description":"Learn about Docker and the Docker extension for Visual Studio Code","steps":[{"id":"openFolder","title":"Open a Workspace Folder","completionEvents":["onCommand:workbench.action.files.openFolder"],"when":"workspaceFolderCount == 0 && !isMac","description":"Open a workspace folder to get started with Docker extension features.\n[Open Folder](command:workbench.action.files.openFolder)","media":{"markdown":"resources/walkthroughs/empty.md"}},{"id":"openFolderMac","title":"Open a Workspace Folder","completionEvents":["onCommand:workbench.action.files.openFileFolder"],"when":"workspaceFolderCount == 0 && isMac","description":"Open a workspace folder to get started with Docker extension features.\n[Open Folder](command:workbench.action.files.openFileFolder)","media":{"markdown":"resources/walkthroughs/empty.md"}},{"id":"scaffold","title":"Add Docker Files to Workspace","completionEvents":["onCommand:vscode-docker.configure","onCommand:vscode-docker.configureCompose"],"when":"workspaceFolderCount > 0","description":"A Dockerfile contains the instructions to assemble an image containing your app and its dependencies. Using this image to run your app in a container creates a production-like, reproducible runtime environment.\n\nIntelliSense support for authoring your Dockerfile is provided.\n[Add Docker Files](command:vscode-docker.configure)","media":{"image":"https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/1g-addDockerFiles.gif","altText":"Modifying Dockerfiles"}},{"id":"buildImage","title":"Build an Image","completionEvents":["onCommand:vscode-docker.images.build"],"when":"workspaceFolderCount > 0","description":"The Docker extension makes it simple to build your image.\n[Build Image](command:vscode-docker.images.build)","media":{"image":"https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/2g-buildImage.gif","altText":"Building a Docker image"}},{"id":"runContainer","title":"Run a Container","completionEvents":["onCommand:vscode-docker.images.run","onCommand:vscode-docker.compose.up","onCommand:vscode-docker.compose.up.subset"],"description":"You can run any image on your system including those you've built with a Dockerfile.\n[Run Image](command:vscode-docker.images.run)","media":{"image":"https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/3g-runContainers.gif","altText":"Running a Docker container"}},{"id":"dockerExplorer","title":"Use the Docker Explorer","completionEvents":["onView:dockerContainers","onCommand:workbench.view.extension.dockerView"],"description":"The Docker Explorer makes it easy to manage, troubleshoot, and deploy containerized applications. The Docker Explorer shows a number of Docker resources such as containers, images, volumes, networks, and container registries.\n\nThe right-click menu provides access to commonly used commands for each resource type.\n[Open Docker Explorer](command:workbench.view.extension.dockerView)","media":{"image":"https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/4g-useExplorer.gif","altText":"Using the Docker explorer"}},{"id":"pushImage","title":"Push an Image to a Container Registry","completionEvents":["onCommand:vscode-docker.images.push"],"description":"The Docker Extension allows you to push your Docker image to Docker Hub, Azure Container Registries and other registry providers.\n[Push an Image](command:vscode-docker.images.push)","media":{"image":"https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/5g-pushImage.gif","altText":"Pushing an image to a container registry"}},{"id":"azDeploy","title":"Deploy to Azure App Service","completionEvents":["onCommand:vscode-docker.registries.deployImageToAzure","onCommand:vscode-docker.registries.deployImageToAca"],"description":"The Docker extension helps you deploy your containerized applications and take advantage of a fully-managed platform using Azure App Service. Prior to deployment, the image must be uploaded to either Azure Container Registry or Docker Hub.\n\nAfter a successful deployment, select **Open Site** in the notification. Your container is running in Azure!\n[Deploy](command:vscode-docker.registries.deployImageToAzure)","when":"isAzureAccountInstalled","media":{"image":"https://github.com/microsoft/vscode-docker/raw/main/resources/walkthroughs/6g-deployToAppSvc.gif","altText":"Deploying to Azure App Service"}},{"id":"learn","title":"Learn More","description":"Great job! You've now completed Getting Started with Docker. But don't stop here! There are plenty of ways to become more proficient building containerized applications using the Docker extension.\n\nFor example, you can [debug a container](https://code.visualstudio.com/docs/containers/debug-common), or [run multiple containers](https://code.visualstudio.com/docs/containers/docker-compose) at once using Docker Compose.\n\nCheck out our [documentation](https://code.visualstudio.com/docs/containers/overview) to make the most of the Docker extension for VS Code!","completionEvents":["onStepSelected"],"media":{"markdown":"resources/walkthroughs/empty.md"}}]}]},"engines":{"vscode":"^1.92.0"},"capabilities":{"virtualWorkspaces":false,"untrustedWorkspaces":{"supported":"limited","description":"Workspace must be trusted in order to perform relevant Docker actions.","restrictedConfigurations":["docker.commands.build","docker.commands.run","docker.commands.runInteractive","docker.commands.attach","docker.commands.logs","docker.commands.composeUp","docker.commands.composeDown","docker.environment","docker.scaffolding.templatePath","docker.dockerPath","docker.composeCommand"]}},"scripts":{"watch":"webpack --watch","build":"webpack --mode production --devtool hidden-source-map","ci-build":"npm test","package":"vsce package","ci-package":"npm test && vsce package","lint":"eslint --max-warnings 0 src --ext ts","test":"node ./out/test/runTest.js","pretest":"tsc -p ./","test-watch":"tsc -watch -p ./"},"extensionDependencies":["vscode.docker","vscode.yaml"],"devDependencies":{"@azure/arm-appservice":"^15.0.0","@types/fs-extra":"^11.0.1","@types/glob":"^7.2.0","@types/mocha":"^10.0.1","@types/node":"20.x","@types/semver":"^7.3.13","@types/vscode":"1.92.0","@types/xml2js":"^0.4.11","@typescript-eslint/eslint-plugin":"^5.59.0","@typescript-eslint/parser":"^5.59.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^3.1.0","chai":"^4.3.7","copy-webpack-plugin":"^11.0.0","eslint":"^8.38.0","glob":"^8.1.0","mocha":"^10.2.0","node-loader":"^2.0.0","ts-loader":"^9.4.2","typescript":"^5.0.4","umd-compat-loader":"^2.1.2","webpack":"^5.94.0","webpack-bundle-analyzer":"^4.8.0","webpack-cli":"^5.0.1"},"dependencies":{"@azure/arm-authorization":"^9.0.0","@azure/arm-containerregistry":"^10.1.0","@azure/storage-blob":"^12.14.0","@microsoft/compose-language-service":"^0.3.0","@microsoft/vscode-azext-azureappservice":"~3.3.0","@microsoft/vscode-azext-azureauth":"^2.4.1","@microsoft/vscode-azext-azureutils":"^3.0.1","@microsoft/vscode-azext-utils":"^2.5.1","@microsoft/vscode-container-client":"^0.1.2","@microsoft/vscode-docker-registries":"^0.2.0","dayjs":"^1.11.7","dockerfile-language-server-nodejs":"^0.13.0","fs-extra":"^11.1.1","gradle-to-js":"^2.0.1","handlebars":"^4.7.7","semver":"^7.5.2","tar":"^6.2.1","vscode-languageclient":"^8.1.0","vscode-tas-client":"^0.1.75","xml2js":"^0.5.0"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ms-azuretools.vscode-docker-1.29.4","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"0479fc1c-3d67-49f9-b087-fb9069afe48f","publisherId":"52b787f2-79a9-4f32-99b4-393afe3005d3","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":6936461},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-vscode-remote.remote-containers","uuid":"93ce222b-5f6f-49b7-9ab1-a0463c6238df"},"manifest":{"name":"remote-containers","displayName":"Dev Containers","description":"Open any folder or repository inside a Docker container and take advantage of Visual Studio Code's full feature set.","version":"0.401.0","publisher":"ms-vscode-remote","icon":"resources/dev-containers.png","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-remote-release.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-remote-release/issues"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.86.0"},"extensionKind":["ui"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Opening a folder in a container requires workspace trust."},"virtualWorkspaces":true},"categories":["Other"],"keywords":["remote","docker","containers","remote development","dev container","devcontainer","development container","continueOn"],"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","activationEvents":["onStartupFinished","workspaceContains:.devcontainer/devcontainer.json","workspaceContains:.devcontainer.json","onResolveRemoteAuthority:dev-container","onResolveRemoteAuthority:attached-container","onResolveRemoteAuthority:k8s-container","onDebugResolve:extensionHost"],"main":"./dist/extension/extension","l10n":"./l10n","enabledApiProposals":["resolvers","tunnels","workspaceTrust","terminalDimensions","contribEditSessions","contribViewsRemote","contribRemoteHelp"],"contributes":{"continueEditSession":[{"command":"remote-containers.openRepositoryFromRemoteHubWithEditSession","group":"0_local@2","when":"!isWeb && remoteHub:hasVirtualFolders","qualifiedName":"Continue Working in Container Volume","remoteGroup":"remote_30_dev-container_2_actions@8"},{"command":"remote-containers.openRepositoryFromGitWithEditSession","group":"0_local@2","when":"git.state == initialized && gitOpenRepositoryCount != 0 && remoteName =~ /(codespaces*.*|tunnel)/ && false","qualifiedName":"Continue Working in Container Volume","remoteGroup":"remote_30_dev-container_2_actions@8"}],"languages":[{"id":"jsonc","filenames":["devcontainer-feature.json",".devcontainer-internal.json"]}],"jsonValidation":[{"fileMatch":"devcontainer-feature.json","url":"https://raw.githubusercontent.com/devcontainers/spec/main/schemas/devContainerFeature.schema.json"}],"configuration":{"title":"Dev Containers","properties":{"remote.containers.defaultExtensions":{"scope":"application","deprecationMessage":"Use 'dev.containers.defaultExtensions' instead.","markdownDeprecationMessage":"Use `#dev.containers.defaultExtensions#` instead."},"dev.containers.defaultExtensions":{"scope":"application","type":"array","description":"Configures the list of extensions to always install while creating a container.","default":[],"items":{"type":"string","pattern":"([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)","errorMessage":"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'."}},"dev.containers.defaultExtensionsIfInstalledLocally":{"scope":"application","type":"array","description":"Configures the list of extensions to install while creating a container if they are already installed locally.","default":["GitHub.copilot","GitHub.copilot-chat","GitHub.vscode-pull-request-github"],"items":{"type":"string","pattern":"([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)","errorMessage":"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'."}},"dev.containers.defaultFeatures":{"scope":"application","type":"object","description":"Configures the list of features to always install while creating a container.","default":{}},"remote.containers.workspaceMountConsistency":{"scope":"application","deprecationMessage":"Use 'dev.containers.workspaceMountConsistency' instead.","markdownDeprecationMessage":"Use `#dev.containers.workspaceMountConsistency#` instead."},"dev.containers.workspaceMountConsistency":{"scope":"application","type":"string","enum":["consistent","cached","delegated"],"enumDescriptions":["Perfect consistency.","The host’s view is authoritative.","The container’s view is authoritative."],"description":"The consistency level used for the workspace mount (existing containers must be rebuilt to take effect).","default":"cached"},"dev.containers.gpuAvailability":{"scope":"machine","type":"string","enum":["all","detect","none"],"enumDescriptions":["All GPUs are available. This expects the host to have a GPU.","Availability should be detected automatically.","No GPUs are available."],"description":"Availability of GPUs when a dev container requires any.","default":"detect"},"remote.containers.cacheVolume":{"scope":"application","deprecationMessage":"Use 'dev.containers.cacheVolume' instead.","markdownDeprecationMessage":"Use `#dev.containers.cacheVolume#` instead."},"dev.containers.cacheVolume":{"scope":"application","type":"boolean","description":"Controls whether a Docker volume should be used to cache the VS Code server and extensions.","default":true},"remote.containers.copyGitConfig":{"scope":"machine","deprecationMessage":"Use 'dev.containers.copyGitConfig' instead.","markdownDeprecationMessage":"Use `#dev.containers.copyGitConfig#` instead."},"dev.containers.copyGitConfig":{"scope":"machine","type":"boolean","markdownDescription":"Controls whether the Git configuration (`~/.gitconfig`) should be copied into the container. This is done after installing any `#dotfiles.repository#` and will not overwrite an existing Git configuration file.","default":true},"remote.containers.gitCredentialHelperConfigLocation":{"scope":"machine","deprecationMessage":"Use 'dev.containers.gitCredentialHelperConfigLocation' instead.","markdownDeprecationMessage":"Use `#dev.containers.gitCredentialHelperConfigLocation#` instead."},"dev.containers.gitCredentialHelperConfigLocation":{"scope":"machine","type":"string","enum":["system","global","none"],"enumDescriptions":["Write to system config (`/etc/gitconfig`, requires root access).","Write to user config (`~/.gitconfig`).","Do not set a credential helper."],"description":"Where to write the configuration for the Git credential helper.","default":"global"},"dev.containers.dockerCredentialHelper":{"scope":"machine","type":"boolean","markdownDescription":"Controls whether a credential helper should be registered as the `credStore` in the Docker configuration (`~/.docker/config.json`) of dev containers. This will not overwrite an existing `credStore` entry in the configuration file.","default":true},"dev.containers.mountWaylandSocket":{"scope":"application","ignoreSync":true,"type":"boolean","markdownDescription":"Controls whether a Wayland socket, if one exists, should be mounted into the Dev Container.","default":true},"remote.containers.logLevel":{"scope":"application","deprecationMessage":"Use 'dev.containers.logLevel' instead.","markdownDeprecationMessage":"Use `#dev.containers.logLevel#` instead."},"dev.containers.logLevel":{"scope":"application","type":"string","description":"The log level for the extension.","default":"debug","enum":["info","debug","trace"]},"remote.containers.dockerPath":{"scope":"application","deprecationMessage":"Use 'dev.containers.dockerPath' instead.","markdownDeprecationMessage":"Use `#dev.containers.dockerPath#` instead."},"dev.containers.dockerPath":{"scope":"application","type":"string","description":"Docker (or Podman) executable name or path.","default":"docker"},"remote.containers.dockerComposePath":{"scope":"application","deprecationMessage":"Use 'dev.containers.dockerComposePath' instead.","markdownDeprecationMessage":"Use `#dev.containers.dockerComposePath#` instead."},"dev.containers.dockerComposePath":{"scope":"application","type":"string","description":"Docker Compose executable name or path.","default":"docker-compose"},"dev.containers.dockerSocketPath":{"scope":"application","type":"string","description":"Docker socket path. Used, e.g., when connecting to a Dev Container with the devcontainer.json in a Docker Volume.","default":"/var/run/docker.sock"},"remote.containers.executeInWSL":{"scope":"application","deprecationMessage":"Use 'dev.containers.executeInWSL' instead.","markdownDeprecationMessage":"Use `#dev.containers.executeInWSL#` instead."},"dev.containers.executeInWSL":{"scope":"application","type":"boolean","description":"Controls whether CLI commands should always be executed in WSL. The default is to only execute in WSL for workspace folders in WSL. This setting has no effect on other platforms than Windows.","default":false},"remote.containers.executeInWSLDistro":{"scope":"application","deprecationMessage":"Use 'dev.containers.executeInWSLDistro' instead.","markdownDeprecationMessage":"Use `#dev.containers.executeInWSLDistro#` instead."},"dev.containers.executeInWSLDistro":{"scope":"application","type":"string","markdownDescription":"WSL distro to use when not reopening a WSL folder. The default is to use the default WSL distro (see `wsl -l`). This setting has no effect when `#dev.containers.executeInWSL#` is not enabled or on other platforms than Windows."},"dev.containers.forwardWSLServices":{"scope":"application","type":"boolean","description":"Controls whether services in WSL (SSH agent, GPG agent, X display, Wayland display) are forwarded into the container. This setting has no effect on other platforms than Windows.","default":true},"dotfiles.repository":{"scope":"machine","type":"string","description":"URL of a dotfiles Git repository (e.g., https://github.com/owner/repository.git) or owner/repository of a GitHub repository."},"dotfiles.installCommand":{"scope":"machine","type":"string","description":"The command to run after cloning the dotfiles repository. Defaults to run the first file of `install.sh`, `install`, `bootstrap.sh`, `bootstrap`, `setup.sh` and `setup` found in the dotfiles repository's root folder."},"dotfiles.targetPath":{"scope":"machine","type":"string","description":"The path to clone the dotfiles repository to. Defaults to `~/dotfiles`.","default":"~/dotfiles"},"remote.containers.dotfiles.repository":{"scope":"machine","deprecationMessage":"Use 'dotfiles.repository' instead.","markdownDeprecationMessage":"Use `#dotfiles.repository#` instead."},"remote.containers.dotfiles.installCommand":{"scope":"machine","deprecationMessage":"Use 'dotfiles.installCommand' instead.","markdownDeprecationMessage":"Use `#dotfiles.installCommand#` instead."},"remote.containers.dotfiles.targetPath":{"scope":"machine","deprecationMessage":"Use 'dotfiles.targetPath' instead.","markdownDeprecationMessage":"Use `#dotfiles.targetPath#` instead."},"remote.containers.repositoryConfigurationPaths":{"scope":"application","deprecationMessage":"Use 'dev.containers.repositoryConfigurationPaths' instead.","markdownDeprecationMessage":"Use `#dev.containers.repositoryConfigurationPaths#` instead."},"dev.containers.repositoryConfigurationPaths":{"scope":"application","type":"array","markdownDescription":"List of additional paths to search for [repository configurations](https://code.visualstudio.com/docs/devcontainers/create-dev-container#_alternative-repository-configuration-folders).","default":[],"items":{"type":"string"}},"dev.containers.experimentalLockfile":{"scope":"application","type":"boolean","description":"Controls whether an experimental devcontainer-lock.json should be written. This functionality is experimental and may change in the future.","default":false},"dev.containers.optimisticallyLaunchDocker":{"scope":"application","type":"boolean","description":"Optimistically attempt to start docker if the daemon is not already running.","default":true}}},"commands":[{"command":"remote-containers.reopenInContainer","title":"Reopen in Container","category":"Dev Containers"},{"command":"remote-containers.rebuildAndReopenInContainer","title":"Rebuild and Reopen in Container","category":"Dev Containers"},{"command":"remote-containers.rebuildNoCacheAndReopenInContainer","title":"Rebuild Without Cache and Reopen in Container","category":"Dev Containers"},{"command":"remote-containers.reopenLocally","title":"Reopen Folder Locally","category":"Dev Containers"},{"command":"remote-containers.reopenInWSL","title":"Reopen Folder in WSL","category":"Dev Containers"},{"command":"remote-containers.reopenInSSH","title":"Reopen Folder in SSH","category":"Dev Containers"},{"command":"remote-containers.reopenInTunnel","title":"Reopen Folder in Tunnel","category":"Dev Containers"},{"command":"remote-containers.openFolder","title":"Open Folder in Container...","category":"Dev Containers","icon":{"light":"resources/light/reopen-folder.svg","dark":"resources/dark/reopen-folder.svg"}},{"command":"remote-containers.openFolderInContainerInCurrentWindow","title":"Open in Container in Current Window","category":"Dev Containers","icon":"$(arrow-right)"},{"command":"remote-containers.openFolderInContainerInNewWindow","title":"Open in Container in New Window","category":"Dev Containers","icon":"$(empty-window)"},{"command":"remote-containers.openInformationAboutMountPerformance","title":"Clone repository in Docker volume for better I/O performance.","category":"Dev Containers","icon":"$(info)"},{"command":"remote-containers.openRepositoryInVolume","title":"Clone Repository in Named Container Volume...","category":"Dev Containers"},{"command":"remote-containers.openRepositoryInUniqueVolume","title":"Clone Repository in Container Volume...","icon":"$(repo-clone)","category":"Dev Containers"},{"command":"remote-containers.openRepositoryFromRemoteHubWithEditSession","title":"Clone Repository in a Container Volume","icon":"$(repo-clone)","category":"Dev Containers"},{"command":"remote-containers.openRepositoryFromGitWithEditSession","title":"Clone Repository in a Container Volume","icon":"$(repo-clone)","category":"Dev Containers"},{"command":"remote-containers.openPullRequestInVolume","title":"Clone GitHub Pull Request in Container Volume...","category":"Dev Containers"},{"command":"remote-containers.inspectVolume","title":"Explore a Volume in a Dev Container...","category":"Dev Containers"},{"command":"remote-containers.openWorkspace","title":"Open Workspace in Container...","category":"Dev Containers"},{"command":"remote-containers.attachToRunningContainer","title":"Attach to Running Container...","category":"Dev Containers"},{"command":"remote-containers.attachToRunningContainerFromViewlet","title":"Attach Visual Studio Code","category":"Dev Containers"},{"command":"remote-containers.inspectVolumeFromViewlet","title":"Explore in a Dev Container","category":"Dev Containers"},{"command":"remote-containers.cloneInVolumeFromViewlet","title":"Clone into existing Volume","category":"Dev Containers"},{"command":"remote-containers.cleanUpDevContainers","title":"Clean Up Dev Containers...","category":"Dev Containers","icon":"$(clear-all)"},{"command":"remote-containers.pruneVolumes","title":"Clean Up Dev Volumes...","category":"Dev Containers","icon":"$(clear-all)"},{"command":"remote-containers.explorerVolumesRefresh","title":"Refresh","category":"Dev Containers","icon":"$(refresh)"},{"command":"remote-containers.attachToK8sContainer","title":"Attach to Running Kubernetes Container...","category":"Dev Containers"},{"command":"remote-containers.attachToK8sContainerFromViewlet","title":"Attach Visual Studio Code","category":"Dev Containers"},{"command":"remote-containers.switchContainer","title":"Switch Container","category":"Dev Containers"},{"command":"remote-containers.rebuildContainer","title":"Rebuild Container","category":"Dev Containers","icon":{"light":"resources/light/tools.svg","dark":"resources/dark/tools.svg"}},{"command":"remote-containers.rebuildContainerNoCache","title":"Rebuild Container Without Cache","category":"Dev Containers","icon":{"light":"resources/light/tools.svg","dark":"resources/dark/tools.svg"}},{"command":"remote-containers.createDevContainerFile","title":"Add Dev Container Configuration Files...","category":"Dev Containers"},{"command":"remote-containers.createDevContainerFileWithCopilot","title":"Add Dev Container Configuration Files using GitHub Copilot...","category":"Dev Containers"},{"command":"remote-containers.createDevContainer","title":"New Dev Container...","category":"Dev Containers"},{"command":"remote-containers.settings","title":"Settings","category":"Dev Containers"},{"command":"remote-containers.getHelp","title":"Help","category":"Dev Containers"},{"command":"remote-containers.getStarted","title":"Get Started with Dev Containers","category":"Dev Containers"},{"command":"remote-containers.trySample","title":"Try a Dev Container Sample...","category":"Dev Containers"},{"command":"remote-containers.reportIssue","title":"Report Issue...","category":"Dev Containers"},{"command":"remote-containers.provideFeedback","title":"Provide Feedback","category":"Dev Containers"},{"command":"remote-containers.openDevContainerFile","title":"Open Container Configuration File","category":"Dev Containers","icon":{"light":"resources/light/gear.svg","dark":"resources/dark/gear.svg"}},{"command":"remote-containers.openAttachConfigByNameFile","title":"Open Named Container Configuration File","category":"Dev Containers"},{"command":"remote-containers.openAttachDevContainerFile","title":"Open Attached Container Configuration File...","category":"Dev Containers"},{"command":"remote-containers.revealLogTerminal","title":"Show Container Log","category":"Dev Containers"},{"command":"remote-containers.openLogFile","title":"Show All Logs...","category":"Dev Containers Developer"},{"command":"remote-containers.openLastLogFile","title":"Show Previous Log","category":"Dev Containers"},{"command":"remote-containers.testConnection","title":"Test Connection","category":"Dev Containers Developer"},{"command":"remote-containers.attachToContainerInCurrentWindow","title":"Attach in Current Window","category":"Dev Containers","icon":"$(arrow-right)"},{"command":"remote-containers.attachToContainerInNewWindow","title":"Attach in New Window","category":"Dev Containers","icon":"$(empty-window)"},{"command":"remote-containers.stopContainer","title":"Stop Container","category":"Dev Containers"},{"command":"remote-containers.startContainer","title":"Start Container","category":"Dev Containers","icon":{"light":"resources/light/vm-start.svg","dark":"resources/dark/vm-start.svg"}},{"command":"remote-containers.removeContainer","title":"Remove Container","category":"Dev Containers","icon":{"light":"resources/light/remove.svg","dark":"resources/dark/remove.svg"}},{"command":"remote-containers.removeRecentFolder","title":"Remove Recent Folder","category":"Dev Containers","icon":{"light":"resources/light/remove.svg","dark":"resources/dark/remove.svg"}},{"command":"remote-containers.showDetails","title":"Show Details","category":"Dev Containers"},{"command":"remote-containers.explorerTargetsRefresh","title":"Refresh","category":"Dev Containers","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"remote-containers.explorerDetailsRefresh","title":"Refresh","category":"Dev Containers","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"remote-containers.inspectDockerResource","title":"Inspect","category":"Dev Containers"},{"command":"remote-containers.inspectInBasicDevContainer","title":"Explore in Dev Container","category":"Dev Containers"},{"command":"remote-containers.cloneInVolume","title":"Clone Repository in Volume","category":"Dev Containers"},{"command":"remote-containers.removeVolume","title":"Remove","category":"Dev Containers"},{"command":"remote-containers.newContainer","title":"New Dev Container","category":"Dev Containers","icon":{"light":"resources/light/plus.svg","dark":"resources/dark/plus.svg"}},{"command":"remote-containers.showContainerLog","title":"Show Container Log","category":"Dev Containers"},{"command":"remote-containers.addExtensionToConfig","title":"Add to devcontainer.json","category":"Dev Containers"},{"command":"remote-containers.checkoutPRInVolume","title":"Checkout Pull Request in Dev Container","category":"Dev Containers"},{"command":"remote-containers.showReopenInContainerNotificationReset","title":"Reset Don't Show Reopen Notification","category":"Dev Containers"},{"command":"remote-containers.showRecoveryContainerNotificationReset","title":"Reset Don't Show Recovery Container Notification","category":"Dev Containers"},{"command":"remote-containers.labelPortAndUpdateConfig","title":"Set Label and Update devcontainer.json","category":"Dev Containers","icon":"$(tag)"},{"command":"remote-containers.installDocker","title":"Install Docker","category":"Dev Containers"},{"command":"remote-containers.installDockerInWSL","title":"Install Docker in WSL","category":"Dev Containers"},{"command":"remote-containers.installUserCLI","title":"Install devcontainer CLI","category":"Dev Containers"},{"command":"remote-containers.configureContainerFeatures","title":"Configure Container Features...","category":"Dev Containers"}],"menus":{"commandPalette":[{"command":"remote-containers.reopenInContainer","when":"!hideConnectCommands && workspaceFolderCount != 0 && !remoteName && !virtualWorkspace"},{"command":"remote-containers.reopenInContainer","when":"!hideConnectCommands && workspaceFolderCount != 0 && remoteName =~ /^(wsl|ssh-remote|tunnel)$/"},{"command":"remote-containers.reopenInContainer","when":"!hideConnectCommands && workspaceFolderCount != 0 && remoteName == dev-container && isRecoveryContainer"},{"command":"remote-containers.rebuildAndReopenInContainer","when":"!hideRebuildCommands && workspaceFolderCount != 0 && !remoteName && !virtualWorkspace"},{"command":"remote-containers.rebuildAndReopenInContainer","when":"!hideRebuildCommands && workspaceFolderCount != 0 && remoteName =~ /^(wsl|ssh-remote|tunnel)$/"},{"command":"remote-containers.rebuildNoCacheAndReopenInContainer","when":"!hideRebuildCommands && workspaceFolderCount != 0 && !remoteName && !virtualWorkspace"},{"command":"remote-containers.rebuildNoCacheAndReopenInContainer","when":"!hideRebuildCommands && workspaceFolderCount != 0 && remoteName =~ /^(wsl|ssh-remote|tunnel)$/"},{"command":"remote-containers.reopenLocally","when":"!hideConnectCommands && canReopenLocally"},{"command":"remote-containers.reopenInWSL","when":"!hideConnectCommands && canReopenInWSL"},{"command":"remote-containers.reopenInSSH","when":"!hideConnectCommands && canReopenInSSH"},{"command":"remote-containers.reopenInTunnel","when":"!hideConnectCommands && canReopenInTunnel"},{"command":"remote-containers.openFolder","when":"!hideConnectCommands && remoteName =~ /^(dev-container|attached-container|exec|k8s-container|wsl|ssh-remote|tunnel)?$/"},{"command":"remote-containers.openRepositoryInVolume","when":"!hideConnectCommands && remoteName =~ /^(dev-container|attached-container|exec|k8s-container|wsl|ssh-remote|tunnel)?$/"},{"command":"remote-containers.openRepositoryInUniqueVolume","when":"!hideConnectCommands && remoteName =~ /^(dev-container|attached-container|exec|k8s-container|wsl|ssh-remote|tunnel)?$/"},{"command":"remote-containers.openPullRequestInVolume","when":"!hideConnectCommands && remoteName =~ /^(dev-container|attached-container|exec|k8s-container|wsl|ssh-remote|tunnel)?$/"},{"command":"remote-containers.createDevContainer","when":"!hideConnectCommands && remoteName =~ /^(dev-container|attached-container|exec|k8s-container|wsl|ssh-remote|tunnel)?$/"},{"command":"remote-containers.openWorkspace","when":"!hideConnectCommands && remoteName =~ /^(dev-container|attached-container|exec|k8s-container|wsl|ssh-remote|tunnel)?$/"},{"command":"remote-containers.attachToRunningContainer","when":"!hideConnectCommands && remoteName =~ /^(dev-container|attached-container|exec|k8s-container|wsl|ssh-remote|tunnel)?$/"},{"command":"remote-containers.attachToRunningContainerFromViewlet","when":"false"},{"command":"remote-containers.inspectVolumeFromViewlet","when":"false"},{"command":"remote-containers.openRepositoryFromRemoteHubWithEditSession","when":"false"},{"command":"remote-containers.openRepositoryFromGitWithEditSession","when":"false"},{"command":"remote-containers.cloneInVolumeFromViewlet","when":"false"},{"command":"remote-containers.inspectInBasicDevContainer","when":"false"},{"command":"remote-containers.cloneInVolume","when":"false"},{"command":"remote-containers.removeVolume","when":"false"},{"command":"remote-containers.attachToK8sContainer","when":"!hideConnectCommands && remoteName =~ /^(dev-container|attached-container|exec|k8s-container|wsl|ssh-remote|tunnel)?$/"},{"command":"remote-containers.attachToK8sContainerFromViewlet","when":"false"},{"command":"remote-containers.checkoutPRInVolume","when":"false"},{"command":"remote-containers.switchContainer","when":"remoteName =~ /^dev-container$/"},{"command":"remote-containers.rebuildContainer","when":"!hideRebuildCommands && remoteName =~ /^dev-container$/"},{"command":"remote-containers.rebuildContainerNoCache","when":"!hideRebuildCommands && remoteName =~ /^dev-container$/"},{"command":"remote-containers.testConnection","when":"remoteName =~ /^(dev|attached)-container$/"},{"command":"remote-containers.createDevContainerFile","when":"!remoteName && !virtualWorkspace"},{"command":"remote-containers.createDevContainerFile","when":"remoteName =~ /^(dev-container|wsl|ssh-remote|tunnel)$/"},{"command":"remote-containers.createDevContainerFileWithCopilot","when":"false && github.copilot.activated && !remoteName && !virtualWorkspace"},{"command":"remote-containers.createDevContainerFileWithCopilot","when":"false && github.copilot.activated && remoteName =~ /^(dev-container|wsl|ssh-remote|tunnel)$/"},{"command":"remote-containers.openDevContainerFile","when":"workspaceFolderCount != 0 && !remoteName && !virtualWorkspace"},{"command":"remote-containers.openDevContainerFile","when":"workspaceFolderCount != 0 && remoteName =~ /^(wsl|ssh-remote|tunnel)$/"},{"command":"remote-containers.openDevContainerFile","when":"remoteName =~ /^(dev|attached)-container$/"},{"command":"remote-containers.openAttachConfigByNameFile","when":"remoteName == attached-container"},{"command":"remote-containers.openAttachDevContainerFile","when":"remoteName =~ /^(dev-container|attached-container|exec|k8s-container|wsl|ssh-remote|tunnel)?$/"},{"command":"remote-containers.getStarted","when":"!remoteName && !virtualWorkspace || remoteName =~ /^(wsl|ssh-remote|tunnel)$/"},{"command":"remote-containers.trySample","when":"!hideConnectCommands && !remoteName && !virtualWorkspace"},{"command":"remote-containers.trySample","when":"!hideConnectCommands && remoteName =~ /^(wsl|ssh-remote|tunnel)$/"},{"command":"remote-containers.provideFeedback","when":"remoteName =~ /^(dev-container|attached-container|exec|k8s-container)$/"},{"command":"remote-containers.attachToContainerInCurrentWindow","when":"false"},{"command":"remote-containers.attachToContainerInNewWindow","when":"false"},{"command":"remote-containers.stopContainer","when":"false"},{"command":"remote-containers.removeContainer","when":"false"},{"command":"remote-containers.startContainer","when":"false"},{"command":"remote-containers.removeRecentFolder","when":"false"},{"command":"remote-containers.showDetails","when":"false"},{"command":"remote-containers.explorerTargetsRefresh","when":"false"},{"command":"remote-containers.explorerVolumesRefresh","when":"false"},{"command":"remote-containers.explorerDetailsRefresh","when":"false"},{"command":"remote-containers.inspectDockerResource","when":"false"},{"command":"remote-containers.openFolderInContainerInCurrentWindow","when":"false"},{"command":"remote-containers.openFolderInContainerInNewWindow","when":"false"},{"command":"remote-containers.openInformationAboutMountPerformance","when":"false"},{"command":"remote-containers.newContainer","when":"false"},{"command":"remote-containers.showContainerLog","when":"false"},{"command":"remote-containers.labelPortAndUpdateConfig","when":"false"},{"command":"remote-containers.addExtensionToConfig","when":"false"},{"command":"remote-containers.installDockerInWSL","when":"!hideConnectCommands && isWindows && !remoteName && !virtualWorkspace"},{"command":"remote-containers.configureContainerFeatures","when":"!remoteName && !virtualWorkspace"},{"command":"remote-containers.configureContainerFeatures","when":"remoteName =~ /^(dev-container|wsl|ssh-remote|tunnel)$/"}],"statusBar/remoteIndicator":[{"command":"remote-containers.openDevContainerFile","group":"remote_30_dev-container_2_actions@0","when":"true"},{"command":"remote-containers.createDevContainer","group":"remote_30_dev-container_2_actions@1","when":"!hideConnectCommands"},{"command":"remote-containers.attachToRunningContainer","group":"remote_30_dev-container_2_actions@2","when":"!hideConnectCommands"},{"command":"remote-containers.configureContainerFeatures","group":"remote_30_dev-container_2_actions@3","when":"remoteName =~ /^(dev-container)$/"},{"command":"remote-containers.createDevContainerFile","group":"remote_30_dev-container_2_actions@4","when":"workspaceFolderCount != 0 && !remoteName && !virtualWorkspace"},{"command":"remote-containers.createDevContainerFile","group":"remote_30_dev-container_2_actions@4","when":"workspaceFolderCount != 0 && remoteName =~ /^(wsl|ssh-remote|tunnel)$/"},{"command":"remote-containers.openRepositoryInUniqueVolume","group":"remote_30_dev-container_2_actions@5","when":"!hideConnectCommands && workspaceFolderCount == 0 && remoteName =~ /^(wsl|ssh-remote|tunnel)$/"},{"command":"remote-containers.openRepositoryInUniqueVolume","group":"remote_30_dev-container_2_actions@5","when":"!hideConnectCommands && remoteName =~ /tunnel*.*/ && gitOpenRepositoryCount == 0"},{"command":"remote-containers.openRepositoryInUniqueVolume","group":"remote_30_dev-container_2_actions@5","when":"!hideConnectCommands && workspaceFolderCount == 0 && !remoteName && !virtualWorkspace"},{"command":"remote-containers.rebuildContainer","group":"remote_30_dev-container_2_actions@6","when":"!hideRebuildCommands && remoteName =~ /^dev-container$/"},{"command":"remote-containers.reopenLocally","group":"remote_30_dev-container_2_actions@7","when":"!hideConnectCommands && canReopenLocally"},{"command":"remote-containers.reopenInWSL","group":"remote_30_dev-container_2_actions@7","when":"!hideConnectCommands && canReopenInWSL"},{"command":"remote-containers.reopenInSSH","group":"remote_30_dev-container_2_actions@7","when":"!hideConnectCommands && canReopenInSSH"},{"command":"remote-containers.reopenInTunnel","group":"remote_30_dev-container_2_actions@7","when":"!hideConnectCommands && canReopenInTunnel"},{"command":"remote-containers.reopenInContainer","group":"remote_30_dev-container_2_actions@8","when":"!hideConnectCommands && workspaceFolderCount != 0 && remoteName =~ /^(wsl|ssh-remote|tunnel)$/"},{"command":"remote-containers.reopenInContainer","group":"remote_30_dev-container_2_actions@8","when":"!hideConnectCommands && workspaceFolderCount != 0 && !remoteName && !virtualWorkspace"},{"command":"remote-containers.openFolder","group":"remote_30_dev-container_2_actions@8","when":"!hideConnectCommands && workspaceFolderCount == 0 && !remoteName && !virtualWorkspace"}],"view/title":[{"command":"remote-containers.explorerTargetsRefresh","when":"view == targetsContainers && !remote-containers:needsDockerStartOrInstall && !remote-containers:noContainersWithFolder && !remote-containers:noContainersWithoutFolder","group":"navigation@3"},{"command":"remote-containers.newContainer","when":"view == targetsContainers && !remote-containers:needsDockerStartOrInstall && !remote-containers:noContainersWithFolder && !remote-containers:noContainersWithoutFolder","group":"navigation@1"},{"command":"remote-containers.cleanUpDevContainers","when":"view == targetsContainers && !remote-containers:needsDockerStartOrInstall && !remote-containers:noContainersWithFolder && !remote-containers:noContainersWithoutFolder","group":"navigation@2"},{"command":"remote-containers.newContainer","when":"!hideConnectCommands && view == dockerContainers","group":"navigation"},{"command":"remote-containers.explorerDetailsRefresh","when":"view == detailsContainers","group":"navigation"},{"command":"remote-containers.attachToContainerInNewWindow","when":"view == detailsContainers","group":"navigation"},{"command":"remote-containers.rebuildContainer","when":"!hideRebuildCommands && view == detailsContainers && remoteName == dev-container","group":"navigation"},{"command":"remote-containers.openDevContainerFile","when":"view == detailsContainers && remoteName =~ /^(dev|attached)-container$/","group":"navigation"},{"command":"remote-containers.pruneVolumes","when":"view == devVolumes","group":"navigation@2"},{"command":"remote-containers.explorerVolumesRefresh","when":"view == devVolumes","group":"navigation@3"},{"command":"remote-containers.openRepositoryInUniqueVolume","when":"view == devVolumes","group":"navigation@1"}],"view/item/context":[{"command":"remote-containers.attachToRunningContainerFromViewlet","when":"!hideConnectCommands && view == dockerContainers && viewItem =~ /^runningContainer$/i && vscode-docker:aciContext != true","group":"containers_1_general@2"},{"command":"remote-containers.inspectVolumeFromViewlet","when":"!hideConnectCommands && view == dockerVolumes && viewItem == volume && vscode-docker:aciContext != true","group":"volumes_1_general@2"},{"command":"remote-containers.checkoutPRInVolume","when":"!hideConnectCommands && view =~ /pr:/ && viewItem =~ /pullrequest(:local)?:nonactive|description/","group":"1_pullrequest@3"},{"command":"remote-containers.attachToK8sContainerFromViewlet","group":"2@4","when":"!hideConnectCommands && view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.resource\\.pod/i"},{"command":"remote-containers.openFolderInContainerInCurrentWindow","when":"view == targetsContainers && viewItem =~ /^(dev|attached|exited|running).*Folder$/","group":"1_folder@1"},{"command":"remote-containers.openFolderInContainerInCurrentWindow","when":"view == targetsContainers && viewItem =~ /^(dev|attached|exited|running).*Folder$/","group":"inline@1"},{"command":"remote-containers.openFolderInContainerInNewWindow","when":"view == targetsContainers && viewItem =~ /^(dev|attached|exited|running).*Folder$/","group":"1_folder@2"},{"command":"remote-containers.openFolderInContainerInNewWindow","when":"view == targetsContainers && viewItem =~ /^(dev|attached|exited|running).*Folder$/","group":"inline@2"},{"command":"remote-containers.removeRecentFolder","when":"view == targetsContainers && viewItem == attachedFolder","group":"2_folder@1"},{"command":"remote-containers.removeRecentFolder","when":"view == targetsContainers && viewItem == attachedFolder","group":"inline@3"},{"command":"workbench.action.closeFolder","when":"view == targetsContainers && viewItem =~ /active.*Folder/","group":"1_folder@1"},{"command":"remote-containers.reopenLocally","when":"!hideConnectCommands && canReopenLocally && view == targetsContainers && viewItem =~ /active(d|D)ev/","group":"1_folder@1"},{"command":"remote-containers.reopenInWSL","when":"!hideConnectCommands && canReopenInWSL && view == targetsContainers && viewItem =~ /active(d|D)ev/","group":"1_folder@1"},{"command":"remote-containers.reopenInSSH","when":"!hideConnectCommands && canReopenInSSH && view == targetsContainers && viewItem =~ /active(d|D)ev/","group":"1_folder@1"},{"command":"remote-containers.reopenInTunnel","when":"!hideConnectCommands && canReopenInTunnel && view == targetsContainers && viewItem =~ /active(d|D)ev/","group":"1_folder@1"},{"command":"remote-containers.attachToContainerInCurrentWindow","when":"view == targetsContainers && viewItem =~ /^(active|running|exited)Container$/","group":"1_container@1"},{"command":"remote-containers.attachToContainerInCurrentWindow","when":"view == targetsContainers && viewItem =~ /^(active|running|exited)Container$/","group":"inline@1"},{"command":"remote-containers.attachToContainerInNewWindow","when":"view == targetsContainers && viewItem =~ /^(active|running|exited)Container$/","group":"1_container@2"},{"command":"remote-containers.attachToContainerInNewWindow","when":"view == targetsContainers && viewItem =~ /^(active|running|exited)Container$/","group":"inline@2"},{"command":"remote-containers.stopContainer","when":"view == targetsContainers && viewItem =~ /^running(Dev|)Container/","group":"2_container@2"},{"command":"remote-containers.removeContainer","when":"view == targetsContainers && viewItem =~ /^(running|exited)(Dev|)Container/","group":"2_container@3"},{"command":"remote-containers.rebuildContainer","when":"!hideRebuildCommands && view == targetsContainers && viewItem =~ /activeDevContainer/","group":"2_container@1"},{"command":"remote-containers.removeContainer","when":"view == targetsContainers && viewItem =~ /^(running|exited)(Dev|)Container/","group":"inline@3"},{"command":"remote-containers.startContainer","when":"view == targetsContainers && viewItem =~ /^exited(Dev|)Container/","group":"1_container@3"},{"command":"remote-containers.showDetails","when":"view == targetsContainers && viewItem =~ /^(active|running|exited)(Dev|)Container/","group":"1_container@4"},{"command":"remote-containers.inspectDockerResource","when":"view == targetsContainers && viewItem =~ /^(active|running|exited)(Dev|)Container/","group":"1_container@5"},{"command":"remote-containers.showContainerLog","when":"view == targetsContainers && viewItem =~ /^(active|running|exited)(Dev|)Container/","group":"1_container@6"},{"command":"remote-containers.openDevContainerFile","when":"view == detailsContainers && viewItem == devContainer"},{"command":"remote-containers.inspectDockerResource","when":"view == detailsContainers && viewItem =~ /^(image|volume)$/"},{"command":"remote-containers.openInformationAboutMountPerformance","when":"view == detailsContainers && viewItem == mountPerformanceInfo","group":"inline@1"},{"command":"remote-containers.cloneInVolume","when":"view == devVolumes && viewItem =~ /^(devVolume)$/","group":"1_volumes@1"},{"command":"remote-containers.inspectInBasicDevContainer","when":"view == devVolumes && viewItem =~ /^(devVolume|uniqueDevVolume)$/","group":"2_volumes@1"},{"command":"remote-containers.inspectDockerResource","when":"view == devVolumes && viewItem =~ /^(devVolume|uniqueDevVolume)$/","group":"2_volumes@2"},{"command":"remote-containers.removeVolume","when":"view == devVolumes && viewItem =~ /^(devVolume|uniqueDevVolume)$/","group":"3_volumes-destructive@1"}],"ports/item/port/inline":[{"command":"remote-containers.labelPortAndUpdateConfig","group":"0_manage@4","when":"remoteName =~ /^(dev|attached)-container$/ && tunnelType == Forwarded"}],"extension/context":[{"command":"remote-containers.addExtensionToConfig","group":"2_configure","when":"!isBuiltinExtension && !isWorkspaceScopedExtension && remoteName =~ /^(dev-container|attached-container|wsl|ssh-remote|tunnel)?$/"}]},"resourceLabelFormatters":[{"scheme":"vscode-remote","authority":"dev-container+*","formatting":{"label":"${path}","separator":"/","tildify":true,"workspaceSuffix":"Dev Container"}},{"scheme":"vscode-remote","authority":"attached-container+*","formatting":{"label":"${path}","separator":"/","tildify":true,"workspaceSuffix":"Container"}},{"scheme":"vscode-remote","authority":"exec+*","formatting":{"label":"${path}","separator":"/","tildify":true,"workspaceSuffix":"Exec"}},{"scheme":"vscode-remote","authority":"k8s-container+*","formatting":{"label":"${path}","separator":"/","tildify":true,"workspaceSuffix":"Kubernetes"}}],"views":{"remote":[{"id":"targetsContainers","name":"Dev Containers","when":"!hideConnectCommands","group":"targets@2","remoteName":["dev-container","attached-container","exec","k8s-container"]},{"id":"detailsContainers","name":"Details (Containers)","when":"!hideConnectCommands && remote-containers:showDetails","group":"details@1","remoteName":["dev-container","attached-container"]},{"id":"devVolumes","name":"Dev Volumes","when":"!hideConnectCommands","group":"details@2","remoteName":["dev-container","attached-container"]}]},"viewsWelcome":[{"view":"targetsContainers","when":"remote-containers:needsDockerStartOrInstall","contents":"Get started with containers by [installing Docker](command:remote-containers.installDocker) or by visiting the [help view](command:~remote.helpPanel.focus). [Refresh](command:remote-containers.explorerTargetsRefresh) after installation and startup."},{"view":"targetsContainers","when":"remote-containers:needsSSHCredentials","contents":"[Refresh](command:remote-containers.explorerTargetsRefresh) to provide SSH credentials."},{"view":"targetsContainers","when":"remote-containers:noContainersWithFolder","contents":"Get started with containers by running one of the [Dev Containers](command:remote-containers.newContainer) commands.\nYou can [reopen the current folder in a container](command:remote-containers.reopenInContainer), or open another folder in a container.\n[Open Folder in Container](command:remote-containers.openFolder)\nIf you're new to containers and want to [try a sample](command:remote-containers.trySample), there are several to choose from."},{"view":"targetsContainers","when":"remote-containers:noContainersWithoutFolder","contents":"Get started with containers by running one of the [Dev Containers](command:remote-containers.newContainer) commands.\nYou can open an existing folder in a container.\n[Open Folder in Container](command:remote-containers.openFolder)\nIf you're new to containers and want to [try a sample](command:remote-containers.trySample), there are several to choose from."},{"view":"devVolumes","when":"remote-containers:noDevVolumes","contents":"If there's a repository you want to work with you can clone that directly in a container volume.\n[Clone Repository in Container Volume](command:remote-containers.openRepositoryInUniqueVolume)\n"}],"remoteHelp":{"getStarted":"https://aka.ms/vscode-remote/containers/tutorial-sandbox","documentation":"https://aka.ms/vscode-remote/containers","issues":"https://aka.ms/vscode-remote/containers/issues","remoteName":["dev-container","attached-container","exec","k8s-container"]}},"scripts":{"vscode:prepublish":"npx npm-run-all --npm-path npm clean compile-prod dev-containers-user-cli-prepare","compile":"npx npm-run-all --npm-path npm clean-dist compile-dev","watch":"npx npm-run-all --npm-path npm clean-dist compile-watch","postinstall":"yarn --cwd node_modules/@devcontainers/cli","precommit":"node build/hygiene.js","package":"vsce package --yarn","lint":"eslint -c .eslintrc.js --rulesdir ./build/eslint --max-warnings 0 --ext .ts ./src ./test","compile-prod":"npx npm-run-all --npm-path npm compile-cli-prod copy-cli esbuild-prod","compile-dev":"npx npm-run-all --npm-path npm compile-cli-dev copy-cli esbuild-dev","compile-watch":"npx npm-run-all --npm-path npm --parallel compile-cli-watch watch-cli esbuild-watch","esbuild-prod":"node esbuild.js --production","esbuild-dev":"node esbuild.js","esbuild-watch":"node esbuild.js --watch","compile-cli-prod":"yarn --cwd node_modules/@devcontainers/cli compile-prod","compile-cli-dev":"yarn --cwd node_modules/@devcontainers/cli compile-dev","compile-cli-watch":"yarn --cwd node_modules/@devcontainers/cli compile-watch","copy-cli":"copyfiles --up 4 --all \"node_modules/@devcontainers/cli/dist/spec-node/devContainersSpecCLI.js\" dist","watch-cli":"npm-watch","type-check":"npx npm-run-all --npm-path npm clean-built tsc-b","tsc-b":"tsc -b","type-check-watch":"npx npm-run-all --npm-path npm clean-built tsc-b-w","tsc-b-w":"tsc -b -w","dev-containers-cli-publish":"npx npm-run-all --npm-path npm dev-containers-cli-prepare dev-containers-cli-npm-publish","dev-containers-cli-package":"npx npm-run-all --npm-path npm dev-containers-cli-prepare dev-containers-cli-npm-pack","dev-containers-cli-prepare":"npx npm-run-all --npm-path npm clean dev-containers-cli-compile dev-containers-cli-copy-module","dev-containers-cli-compile":"npx npm-run-all --npm-path npm compile-prod","dev-containers-cli-copy-module":"copyfiles ThirdPartyNotices.txt dist/node/devContainersCLI.js dev-containers-cli","dev-containers-cli-npm-publish":"cd dev-containers-cli && npm publish","dev-containers-cli-npm-pack":"cd dev-containers-cli && npm pack","dev-containers-user-cli-package":"npx npm-run-all --npm-path npm dev-containers-user-cli-prepare dev-containers-user-cli-npm-pack","dev-containers-user-cli-prepare":"npx npm-run-all --npm-path npm dev-containers-user-cli-copy-module","dev-containers-user-cli-clean-prepare":"npx npm-run-all --npm-path npm clean dev-containers-user-prepare","dev-containers-user-cli-copy-module":"copyfiles ThirdPartyNotices.txt dist/node/devContainersUserCLI.js dist/spec-node/devContainersSpecCLI.js \"scripts/**/*\" dev-containers-user-cli","dev-containers-user-cli-npm-pack":"cd dev-containers-user-cli && npm pack","clean":"npx npm-run-all --npm-path npm clean-dist clean-built","clean-dist":"rimraf dist dev-containers-cli/dist dev-containers-cli/scripts dev-containers-user-cli/dist dev-containers-user-cli/scripts","clean-built":"rimraf built","test":"env TS_NODE_PROJECT=test/core/tsconfig.json mocha -r ts-node/register --exit test/core/**/*.test.ts","test-matrix":"env TS_NODE_PROJECT=test/core/tsconfig.json mocha -r ts-node/register --exit","test-no-env":"mocha -r ts-node/register --exit test/core/**/*.test.ts","test-dev-containers":"env TS_NODE_PROJECT=test/dev-containers/tsconfig.json mocha -r ts-node/register --exit test/dev-containers/**/*.test.ts","copytestconfigsforalpine":"/bin/bash -c 'cd test/configs && for f in *; do if [[ -d $f ]] && [[ $f != *alpine* ]]; then cp -r -T $f $f-alpine ; fi ; done'"},"watch":{"copy-cli":"node_modules/@devcontainers/cli/dist/spec-node/devContainersSpecCLI.js"},"devDependencies":{"@types/adm-zip":"^0.5.4","@types/chai":"^4.3.10","@types/eslint":"^8.56.10","@types/follow-redirects":"^1.14.4","@types/js-yaml":"^4.0.9","@types/markdown-it":"^13.0.6","@types/minimist":"^1.2.5","@types/mocha":"^10.0.4","@types/ncp":"^2.0.8","@types/node":"^18.15.3","@types/pull-stream":"^3.6.5","@types/recursive-readdir":"^2.2.4","@types/semver":"^7.5.5","@types/stats-lite":"^2.2.2","@types/tar":"^6.1.9","@types/tar-stream":"^3.1.3","@types/vscode":"~1.75.0","@types/yargs":"^17.0.31","@typescript-eslint/eslint-plugin":"^6.11.0","@typescript-eslint/experimental-utils":"^5.62.0","@typescript-eslint/parser":"^6.11.0","@vscode/l10n-dev":"^0.0.30","@vscode/vsce":"^2.22.0","ajv":"^8.12.0","chai":"^4.3.10","copyfiles":"^2.4.1","esbuild":"^0.19.5","eslint":"^8.53.0","eslint-plugin-local":"^4.2.2","event-stream":"^4.0.1","gulp-eslint":"^6.0.0","gulp-filter":"^9.0.1","husky":"^8.0.3","jsonc":"^2.0.0","minimist":"^1.2.8","mocha":"^10.2.0","npm-run-all":"^4.1.5","npm-watch":"^0.13.0","p-all":"^5.0.0","rimraf":"^5.0.5","stats-lite":"^2.2.0","ts-node":"^10.9.1","typescript":"^5.2.2","typescript-formatter":"^7.2.2","vinyl":"^3.0.0","vinyl-fs":"^4.0.0"},"dependencies":{"@devcontainers/cli":"https://github.com/devcontainers/cli.git#c8efeb6a239394bcc90907fdc302ff044341af62","@vscode/extension-telemetry":"^0.9.0","@vscode/l10n":"^0.0.16","adm-zip":"^0.5.10","applicationinsights":"^2.9.1","find-process":"^1.4.7","follow-redirects":"^1.15.6","js-yaml":"^4.1.0","jsonc-parser":"^3.2.0","muxrpc":"^6.7.3","node-pty":"^1.0.0","pull-pushable":"^2.2.0","pull-stream":"^3.7.0","pull-stream-to-stream":"^2.0.0","semver":"^7.6.2","stream-to-pull-stream":"^1.7.3","tar":"^6.2.1","tar-stream":"^3.1.6","vscode-tas-client":"^0.1.75","vscode-uri":"^3.0.8","yargs":"~17.7.2"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ms-vscode-remote.remote-containers-0.401.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"93ce222b-5f6f-49b7-9ab1-a0463c6238df","publisherId":"ac9410a2-0d75-40ec-90de-b59bb705801d","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":7765042},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-vscode.cmake-tools","uuid":"7c889349-8749-43d4-8b5e-08939936d7f4"},"manifest":{"name":"cmake-tools","displayName":"CMake Tools","description":"Extended CMake support in Visual Studio Code","version":"1.20.53","publisher":"ms-vscode","repository":{"type":"git","url":"https://github.com/microsoft/vscode-cmake-tools"},"license":"MIT","bugs":{"url":"https://github.com/microsoft/vscode-cmake-tools/issues"},"homepage":"https://github.com/microsoft/vscode-cmake-tools","keywords":["cmake","tools","build","c++","native","syntaxes"],"engines":{"vscode":"^1.88.0"},"categories":["Other","Debuggers","Programming Languages"],"galleryBanner":{"color":"#13578c","theme":"dark"},"icon":"res/logo.png","activationEvents":["onCommand:cmake.activeFolderName","onCommand:cmake.activeFolderPath","onCommand:cmake.activeConfigurePresetName","onCommand:cmake.activeBuildPresetName","onCommand:cmake.activeTestPresetName","onCommand:cmake.activePackagePresetName","onCommand:cmake.activeWorkflowPresetName","onCommand:cmake.buildTargetName","onCommand:cmake.launchTargetPath","onCommand:cmake.launchTargetDirectory","onCommand:cmake.launchTargetFilename","onCommand:cmake.launchTargetName","onCommand:cmake.getLaunchTargetPath","onCommand:cmake.getLaunchTargetDirectory","onCommand:cmake.getLaunchTargetFilename","onCommand:cmake.getlaunchTargetName","onCommand:cmake.buildType","onCommand:cmake.buildDirectory","onCommand:cmake.executableTargets","onCommand:cmake.buildKit","onCommand:cmake.tasksBuildCommand","onDebugResolve:cmake","onDebugInitialConfigurations","onDebugDynamicConfigurations:cmake","workspaceContains:CMakeLists.txt","workspaceContains:*/CMakeLists.txt","workspaceContains:*/*/CMakeLists.txt","workspaceContains:*/*/*/CMakeLists.txt","workspaceContains:.vscode/cmake-kits.json","onFileSystem:cmake-tools-schema","onLanguage:cmake","onLanguage:cmake-cache"],"main":"./dist/main","contributes":{"icons":{"cmake-tools-build":{"description":"CMake build icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E001"}},"cmake-tools-clean-configure":{"description":"CMake clean configure icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E002"}},"cmake-tools-clean":{"description":"CMake clean icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E003"}},"cmake-tools-cmake-view-1":{"description":"CMake view icon 1","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E004"}},"cmake-tools-cmake-view-2":{"description":"CMake view icon 2","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E005"}},"cmake-tools-configure":{"description":"CMake configure icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E006"}}},"languages":[{"id":"cmake","extensions":[".cmake"],"filenames":["CMakelists.txt"],"aliases":["CMake"]},{"id":"cmake-cache","filenames":["CMakeCache.txt"],"aliases":["CMake Cache"]}],"grammars":[{"language":"cmake","scopeName":"source.cmake","path":"./syntaxes/CMake.tmLanguage"},{"language":"cmake-cache","scopeName":"source.cmakecache","path":"./syntaxes/CMakeCache.tmLanguage"}],"commands":[{"command":"cmake.openCMakePresets","title":"Open CMakePresets.json","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addConfigurePreset","title":"Add Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addBuildPreset","title":"Add Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addTestPreset","title":"Add Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addPackagePreset","title":"Add Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addWorkflowPreset","title":"Add Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectConfigurePreset","title":"Select Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.viewConfigureSettings","title":"View the settings overriding your Configure Preset","when":"cmake:enabelFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.selectConfigurePreset","title":"Select Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectBuildPreset","title":"Select Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.viewBuildSettings","title":"View the settings overriding your Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.selectBuildPreset","title":"Select Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.projectStatus.viewTestSettings","title":"View the settings overriding your Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.viewPackageSettings","title":"View the settings overriding your Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.selectTestPreset","title":"Select Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectTestPreset","title":"Select Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.projectStatus.setTestTarget","title":"Set Test Target","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectPackagePreset","title":"Select Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectPackagePreset","title":"Select Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectWorkflowPreset","title":"Select Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectWorkflowPreset","title":"Select Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.viewLog","title":"Open the CMake Tools Log File","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.logDiagnostics","title":"Log Diagnostics","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectActiveFolder","title":"Select Active Folder","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.selectActiveProject","title":"Select Active Folder","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet","title":"Select Active Folder","icon":"$(gear)"},{"command":"cmake.editKits","title":"Edit User-Local CMake Kits","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.scanForKits","title":"Scan for Kits","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.scanForCompilers","title":"Scan for Compilers","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectKit","title":"Select a Kit","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectKit","title":"Select a Kit","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.setVariant","title":"Select Variant","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.setVariant","title":"Select Variant","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.setVariantAll","title":"Select Variant for All Projects","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.configure","title":"Configure","category":"CMake"},{"command":"cmake.configureWithDebugger","title":"Configure with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.configure","title":"Configure","icon":"$(cmake-tools-configure)"},{"command":"cmake.projectStatus.configure","title":"Configure","icon":"$(cmake-tools-configure)","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.configureWithDebugger","title":"Configure with CMake Debugger","icon":"$(debug)","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.showConfigureCommand","title":"Show Configure Command","category":"CMake"},{"command":"cmake.configureAll","title":"Configure All Projects","category":"CMake"},{"command":"cmake.configureAllWithDebugger","title":"Configure All Projects with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.configureAll","title":"Configure All Projects","icon":"$(cmake-tools-configure)"},{"command":"cmake.outline.configureAllWithDebugger","title":"Configure All Projects with CMake Debugger","icon":"$(debug)","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.build","title":"Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.build","title":"Build","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.projectStatus.build","title":"Build","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.outline.buildTarget","title":"Build","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.showBuildCommand","title":"Show Build Command","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.compileFile","title":"Compile Active File","category":"CMake","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.outline.compileFile","title":"Compile File","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.install","title":"Install","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.installAll","title":"Install All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildWithTarget","title":"Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.setDefaultTarget","title":"Set Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.setDefaultTarget","when":"cmake:enableFullFeatureSet","title":"Set as Build Target"},{"command":"cmake.projectStatus.setDefaultTarget","title":"Set Build Target","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.cleanConfigure","title":"Delete Cache and Reconfigure","category":"CMake"},{"command":"cmake.outline.cleanConfigure","title":"Clean Reconfigure"},{"command":"cmake.projectStatus.cleanConfigure","title":"Delete Cache and Reconfigure","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(cmake-tools-clean-configure)"},{"command":"cmake.projectStatus.openSettings","title":"Open CMake Tools Extension Settings","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.openVisibilitySettings","title":"Open Visibility Settings","when":"cmake:enabelFullFeatureSet","category":"CMake","icon":"$(json)"},{"command":"cmake.cleanConfigureWithDebugger","title":"Delete Cache and Reconfigure with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanConfigureWithDebugger","title":"Clean Reconfigure with CMake Debugger","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.cleanConfigureAll","title":"Delete Cache and Reconfigure All Projects","category":"CMake"},{"command":"cmake.outline.cleanConfigureAll","title":"Clean Reconfigure All Projects"},{"command":"cmake.cleanConfigureAllWithDebugger","title":"Delete Cache and Reconfigure All Projects with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","title":"Clean Reconfigure All Projects with CMake Debugger","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.clean","title":"Clean","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.clean","when":"cmake:enableFullFeatureSet","title":"Clean","icon":"$(cmake-tools-clean)"},{"command":"cmake.cleanAll","title":"Clean All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet","title":"Clean All Projects"},{"command":"cmake.cleanRebuild","title":"Clean Rebuild","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanRebuild","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild"},{"command":"cmake.cleanRebuildAll","title":"Clean Rebuild All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild All Projects"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)","category":"CMake"},{"command":"cmake.outline.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)"},{"command":"cmake.ctest","title":"Run Tests","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.ctest","title":"Run Tests","when":"cmake:enableFullFeatureSet","icon":"$(beaker)","category":"CMake"},{"command":"cmake.ctestAll","title":"Run Tests for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.revealTestExplorer","title":"Reveal Test Explorer","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.refreshTests","title":"Refresh Tests","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.refreshTestsAll","title":"Refresh Tests for All Projects","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.cpack","title":"Run CPack","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.cpack","title":"Run CPack","when":"cmake:enableFullFeatureSet && useCMakePresets","icon":"$(package)","category":"CMake"},{"command":"cmake.workflow","title":"Run Workflow","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.workflow","title":"Run Workflow","when":"cmake:enableFullFeatureSet && useCMakePresets","icon":"$(run)","category":"CMake"},{"command":"cmake.cpackAll","title":"Run CPack for All Projects","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.workflowAll","title":"Run Workflow for All Projects","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.editCache","title":"Edit CMake Cache","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.quickStart","title":"Quick Start","category":"CMake"},{"command":"cmake.debugTarget","title":"Debug","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.debugTarget","when":"cmake:enableFullFeatureSet","title":"Debug"},{"command":"cmake.projectStatus.debugTarget","when":"cmake:enableFullFeatureSet","title":"Debug","category":"CMake","icon":"$(debug-alt)"},{"command":"cmake.debugTargetAll","title":"Debug All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.setDebugTarget","when":"cmake:enableFullFeatureSet","title":"Set Launch/Debug Target","icon":"$(edit)"},{"command":"cmake.launchTarget","title":"Run Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.launchTarget","when":"cmake:enableFullFeatureSet","title":"Run in Terminal"},{"command":"cmake.projectStatus.launchTarget","when":"cmake:enableFullFeatureSet","title":"Run in Terminal","category":"CMake","icon":"$(run)"},{"command":"cmake.launchTargetAll","title":"Run All Projects Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectLaunchTarget","title":"Set Launch/Debug Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.setLaunchTarget","when":"cmake:enableFullFeatureSet","title":"Set as Launch/Debug Target"},{"command":"cmake.projectStatus.setLaunchTarget","when":"cmake:enableFullFeatureSet","title":"Set as Launch/Debug Target","icon":"$(edit)"},{"command":"cmake.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(x)"},{"command":"cmake.outline.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","icon":"$(x)"},{"command":"cmake.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","icon":"$(x)"},{"command":"cmake.resetState","title":"Reset CMake Tools Extension State (For troubleshooting)","category":"CMake"},{"command":"cmake.openSettings","title":"Open CMake Tools Extension Settings","category":"CMake"},{"command":"cmake.outline.runUtilityTarget","when":"cmake:enableFullFeatureSet","title":"Run Utility"},{"command":"cmake.outline.revealInCMakeLists","when":"cmake:enableFullFeatureSet","title":"Open CMakeLists.txt"},{"command":"cmake.projectStatus.update","when":"cmake:enableFullFeatureSet","title":"Refresh the project status","category":"CMake","icon":"$(refresh)"},{"command":"cmake.pinnedCommands.add","when":"cmake:enableFullFeatureSet","title":"Add a CMake command to pin","category":"CMake","icon":"$(add)"},{"command":"cmake.pinnedCommands.remove","when":"cmake:enableFullFeatureSet","title":"Unpin Command","category":"CMake","icon":"$(remove)"},{"command":"cmake.pinnedCommands.run","when":"cmake:enableFullFeatureSet","title":"Run Command","category":"CMake","icon":"$(play-circle)"},{"command":"cmake.appendBuildDirectoryToWorkspace","when":"cmake:enableFullFeatureSet","title":"Append Build Directory to Current Workspace","category":"CMake"}],"taskDefinitions":[{"type":"cmake","required":["command"],"properties":{"label":{"type":"string","description":"The name of the task"},"command":{"type":"string","enum":["build","configure","install","test","clean","cleanRebuild"],"description":"CMake command"},"targets":{"type":"array","items":{"type":"string"},"description":"CMake build targets"},"preset":{"type":"string","description":"CMake preset name. This is a configuration, build or test preset, based on the CMake command"},"options":{"type":"object","description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."},"environment":{"type":"object","markdownDescription":"Environment variables in the format of \"name\": \"value\"."}}},"detail":{"type":"string","description":"Additional details of the task"}}}],"breakpoints":[{"language":"cmake"}],"debuggers":[{"type":"cmake","label":"CMake Debugger","languages":["cmake"],"configurationAttributes":{"launch":{"properties":{"scriptPath":{"type":"string","descripttion":"The path to the script to debug.","default":"script.cmake"},"scriptArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments for the script to debug."},"scriptEnv":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name"},"value":{"type":"string","description":"Value"}}},"default":[],"description":"Environment for the script to use."},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""},"pipeName":{"type":"string","description":"Name of the pipe (on Windows) or domain socket (on Unix) to use for debugger communication.","default":""},"clean":{"type":"boolean","description":"Clean prior to configuring.","default":false},"configureAll":{"type":"boolean","description":"Configure for all projects.","default":false},"cmakeDebugType":{"type":"string","enum":["configure","external","script"],"description":"The type of the CMake debug session. Available options are: \"configure\", \"external\", \"script\"."}},"required":["cmakeDebugType"],"oneOf":[{"properties":{"cmakeDebugType":{"enum":["script"]},"scriptPath":{"type":"string","description":"The path to the script to debug.","default":""},"scriptArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments for the script to debug."},"scriptEnv":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name"},"value":{"type":"string","description":"Value"}}},"default":[],"description":"Environment for the script to use."},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""}},"required":["scriptPath"]},{"properties":{"cmakeDebugType":{"enum":["configure"]},"clean":{"type":"boolean","description":"Clean prior to configuring.","default":false},"configureAll":{"type":"boolean","description":"Configure for all projects.","default":false},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""}}},{"properties":{"cmakeDebugType":{"enum":["external"]}},"required":["pipeName"]}]}},"initialConfigurations":[],"configurationSnippets":[{"label":"CMake: Configure","description":"Debug a CMake project configuration","body":{"type":"cmake","request":"launch","name":"CMake: Configure project","cmakeDebugType":"configure","clean":false,"configureAll":false}},{"label":"CMake: Script","description":"Debug a CMake script","body":{"type":"cmake","request":"launch","name":"CMake: Script debugging","cmakeDebugType":"script","scriptPath":"^\"\\${workspaceFolder}/<...>.cmake\""}},{"label":"CMake: External","description":"Connect to an externally launched CMake invocation","body":{"type":"cmake","request":"launch","name":"CMake: Externally launched","cmakeDebugType":"external","pipeName":"<...>"}}]}],"menus":{"commandPalette":[{"command":"cmake.openCMakePresets","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addPackagePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addWorkflowPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectPackagePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectWorkflowPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.viewLog","when":"cmake:enableFullFeatureSet"},{"command":"cmake.configure"},{"command":"cmake.configureWithDebugger","when":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.showConfigureCommand"},{"command":"cmake.scanForKits","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.scanForCompilers","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectKit","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.editKits","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.quickStart"},{"command":"cmake.selectActiveFolder","when":"cmake:enableFullFeatureSet"},{"command":"cmake.resetState"},{"command":"cmake.openSettings"},{"command":"cmake.configureAll","when":"cmake:multiProject"},{"command":"cmake.configureAllWithDebugger","when":"cmake:multiProject && cmake:cmakeDebuggerAvailable"},{"command":"cmake.build","when":"cmake:enableFullFeatureSet"},{"command":"cmake.showBuildCommand","when":"cmake:enableFullFeatureSet"},{"command":"cmake.buildAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.install","when":"cmake:enableFullFeatureSet"},{"command":"cmake.installAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.buildWithTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"cmake:enableFullFeatureSet"},{"command":"cmake.setVariant","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.setVariantAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.setDefaultTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanConfigure"},{"command":"cmake.cleanConfigureAll","when":"cmake:multiProject"},{"command":"cmake.cleanConfigureWithDebugger","when":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.cleanConfigureAllWithDebugger","when":"cmake:multiProject && cmake:cmakeDebuggerAvailable"},{"command":"cmake.clean","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.cleanRebuild","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanRebuildAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet"},{"command":"cmake.ctest","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cpack","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.workflow","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.ctestAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.cpackAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.workflowAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.revealTestExplorer","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.refreshTests","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.refreshTestsAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.editCache","when":"cmake:enableFullFeatureSet"},{"command":"cmake.debugTarget","when":"!cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.debugTargetAll","when":"cmake:multiProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTarget","when":"!cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTargetAll","when":"cmake:multiProject && !cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"command":"cmake.selectLaunchTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.stop","when":"cmake:enableFullFeatureSet"},{"command":"cmake.stopAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.logDiagnostics","when":"cmake:enableFullFeatureSet"},{"command":"cmake.outline.configure","when":"never"},{"command":"cmake.outline.configureAll","when":"never"},{"command":"cmake.outline.configureWithDebugger","when":"never"},{"command":"cmake.outline.configureAllWithDebugger","when":"never"},{"command":"cmake.outline.build","when":"never"},{"command":"cmake.outline.buildAll","when":"never"},{"command":"cmake.outline.compileFile","when":"never"},{"command":"cmake.outline.selectWorkspace","when":"never"},{"command":"cmake.outline.cleanConfigure","when":"never"},{"command":"cmake.outline.cleanConfigureAll","when":"never"},{"command":"cmake.outline.cleanConfigureWithDebugger","when":"never"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"never"},{"command":"cmake.outline.clean","when":"never"},{"command":"cmake.outline.cleanAll","when":"never"},{"command":"cmake.outline.cleanRebuild","when":"never"},{"command":"cmake.outline.cleanRebuildAll","when":"never"},{"command":"cmake.outline.editCacheUI","when":"never"},{"command":"cmake.outline.stop","when":"never"},{"command":"cmake.outline.stopAll","when":"never"},{"command":"cmake.outline.buildTarget","when":"never"},{"command":"cmake.outline.runUtilityTarget","when":"never"},{"command":"cmake.outline.debugTarget","when":"never"},{"command":"cmake.outline.launchTarget","when":"never"},{"command":"cmake.outline.setDefaultTarget","when":"never"},{"command":"cmake.outline.setLaunchTarget","when":"never"},{"command":"cmake.outline.revealInCMakeLists","when":"never"},{"command":"cmake.projectStatus.update","when":"never"},{"command":"cmake.pinnedCommands.add","when":"never"},{"command":"cmake.pinnedCommands.remove","when":"never"},{"command":"cmake.pinnedCommands.run","when":"never"},{"command":"cmake.projectStatus.stop","when":"never"},{"command":"cmake.projectStatus.selectKit","when":"never"},{"command":"cmake.projectStatus.configure","when":"never"},{"command":"cmake.projectStatus.cleanConfigure","when":"never"},{"command":"cmake.projectStatus.openSettings","when":"never"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"never"},{"command":"cmake.projectStatus.setVariant","when":"never"},{"command":"cmake.projectStatus.selectConfigurePreset","when":"never"},{"command":"cmake.projectStatus.viewConfigureSettings","when":"never"},{"command":"cmake.projectStatus.build","when":"never"},{"command":"cmake.projectStatus.viewBuildSettings","when":"never"},{"command":"cmake.projectStatus.setDefaultTarget","when":"never"},{"command":"cmake.projectStatus.selectBuildPreset","when":"never"},{"command":"cmake.projectStatus.viewTestSettings","when":"never"},{"command":"cmake.projectStatus.viewPackageSettings","when":"never"},{"command":"cmake.projectStatus.selectPackagePreset","when":"never"},{"command":"cmake.projectStatus.selectWorkflowPreset","when":"never"},{"command":"cmake.projectStatus.ctest","when":"never"},{"command":"cmake.projectStatus.cpack","when":"never"},{"command":"cmake.projectStatus.workflow","when":"never"},{"command":"cmake.projectStatus.debugTarget","when":"never"},{"command":"cmake.projectStatus.launchTarget","when":"never"},{"command":"cmake.projectStatus.setDebugTarget","when":"never"},{"command":"cmake.projectStatus.setLaunchTarget","when":"never"},{"command":"cmake.projectStatus.selectActiveProject","when":"never"},{"command":"cmake.projectStatus.selectTestPreset","when":"never"},{"command":"cmake.projectStatus.setTestTarget","when":"never"}],"view/title":[{"command":"cmake.projectStatus.update","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@1"},{"command":"cmake.projectStatus.cleanConfigure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@2"},{"command":"cmake.projectStatus.stop","when":"view == cmake.projectStatus && cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@3"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.projectStatus.openSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && !cmake:isBuilding","group":"navigation@1"},{"command":"cmake.outline.configureAllWithDebugger","when":"view == cmake.outline && !cmake:isBuilding && cmake:cmakeDebuggerAvailable","group":"navigation@2"},{"command":"cmake.outline.buildAll","when":"view == cmake.outline && !cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@3"},{"command":"cmake.outline.stopAll","when":"view == cmake.outline && cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.outline.cleanAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"view == cmake.outline && cmake:cmakeDebuggerAvailable","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanRebuildAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.editCacheUI","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.pinnedCommands.add","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"navigation@1"}],"view/item/context":[{"command":"cmake.projectStatus.stop","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'stop'","group":"inline"},{"command":"cmake.projectStatus.selectKit","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'kit'","group":"inline"},{"command":"cmake.projectStatus.configure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'configure'","group":"inline"},{"command":"cmake.projectStatus.cleanConfigure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'cleanConfigure'","group":"inline"},{"command":"cmake.projectStatus.openSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'openSettings'","group":"inline"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'openVisibilitySettings'","group":"inline"},{"command":"cmake.projectStatus.setVariant","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'variant'","group":"inline"},{"command":"cmake.projectStatus.selectConfigurePreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /configPreset/","group":"inline"},{"command":"cmake.projectStatus.viewConfigureSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'configPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.build","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'build'","group":"inline"},{"command":"cmake.projectStatus.setDefaultTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'buildTarget'","group":"inline"},{"command":"cmake.projectStatus.selectBuildPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /buildPreset/","group":"inline"},{"command":"cmake.projectStatus.viewBuildSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'buildPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.ctest","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'test'","group":"inline"},{"command":"cmake.projectStatus.cpack","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'package' && useCMakePresets","group":"inline"},{"command":"cmake.projectStatus.workflow","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'workflow' && useCMakePresets","group":"inline"},{"command":"cmake.projectStatus.setTestTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'testTarget'","group":"inline"},{"command":"cmake.projectStatus.selectTestPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /testPreset/","group":"inline"},{"command":"cmake.projectStatus.viewTestSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'testPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.viewPackageSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'packagePreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.selectPackagePreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /packagePreset/","group":"inline"},{"command":"cmake.projectStatus.selectWorkflowPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'workflowPreset'","group":"inline"},{"command":"cmake.projectStatus.debugTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'debug'","group":"inline"},{"command":"cmake.projectStatus.setDebugTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'debugTarget'","group":"inline"},{"command":"cmake.projectStatus.launchTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'launch'","group":"inline"},{"command":"cmake.projectStatus.setLaunchTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'launchTarget'","group":"inline"},{"command":"cmake.projectStatus.selectActiveProject","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'activeProject'","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true|canRun=true/","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true/","group":"1_targetActions@1"},{"command":"cmake.outline.runUtilityTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true/","group":"1_targetActions@2"},{"command":"cmake.outline.debugTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@3"},{"command":"cmake.outline.launchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@4"},{"command":"cmake.outline.revealInCMakeLists","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /nodeType=target/","group":"1_targetActions@5"},{"command":"cmake.outline.setDefaultTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true|canBuild=true/ && viewItem =~ /isDefault=false/","group":"2_targetState@1"},{"command":"cmake.outline.setLaunchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/ && viewItem =~ /isLaunch=false/","group":"2_targetState@2"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@1"},{"command":"cmake.outline.configureAllWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"1_fileActions@2"},{"command":"cmake.outline.buildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@3"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@4"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@5"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"1_fileActions@5"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@6"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"1_fileActions@7"},{"command":"cmake.outline.configure","when":"view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@1"},{"command":"cmake.outline.build","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@2"},{"command":"cmake.outline.clean","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@3"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"inline"},{"command":"cmake.outline.configure","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"inline"},{"command":"cmake.outline.configureWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"inline"},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=workspace/ && viewItem =~ /selected=false/","group":"inline"},{"command":"cmake.pinnedCommands.remove","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"pinnedCommands@1"},{"command":"cmake.pinnedCommands.run","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"inline"}],"editor/title/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"}],"editor/title":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet","group":"navigation"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet","group":"navigation"}],"explorer/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"},{"command":"cmake.outline.configureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.configureAllWithDebugger","when":"resourceFilename == CMakeLists.txt && cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.buildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanConfigureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"resourceFilename == CMakeLists.txt && cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanRebuildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"}],"touchBar":[{"command":"cmake.quickStart","when":"cmake:enableTouchBar && !cmake:enableFullFeatureSet","group":"CMake:start"},{"command":"cmake.configure","when":"cmake:enableTouchBar.configure && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.build","alt":"cmake.configure","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.stop","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && cmake:isBuilding","group":"CMake:build"},{"command":"cmake.debugTarget","alt":"cmake.selectLaunchTarget","when":"cmake:enableTouchBar.debug && cmake:enableFullFeatureSet && !cmake:hideDebugCommand","group":"CMake:run"},{"command":"cmake.launchTarget","when":"cmake:enableTouchBar.launch && cmake:enableFullFeatureSet && !cmake:hideLaunchCommand","group":"CMake:run"}]},"configuration":{"type":"object","title":"CMake Tools","properties":{"cmake.autoSelectActiveFolder":{"type":"boolean","default":true,"description":"Select active folder automatically.","scope":"window"},"cmake.defaultActiveFolder":{"type":"string","default":"","description":"Set the default active folder (only works when cmake.autoSelectActiveFolder is disable).","scope":"window"},"cmake.cmakePath":{"type":"string","default":"cmake","description":"Name/path of the CMake executable to use.","scope":"resource"},"cmake.buildDirectory":{"type":"string","default":"${workspaceFolder}/build","description":"The directory where CMake build files will go.","scope":"resource"},"cmake.installPrefix":{"type":"string","default":null,"description":"The directory where CMake installed files will go.","scope":"resource"},"cmake.sourceDirectory":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Path or array of paths to the CMakeLists.txt root directory/directories.","default":"${workspaceFolder}","scope":"resource"},"cmake.saveBeforeBuild":{"type":"boolean","default":true,"description":"Save open files before building.","scope":"resource"},"cmake.buildBeforeRun":{"type":"boolean","default":true,"description":"Build the target before running it.","scope":"resource"},"cmake.clearOutputBeforeBuild":{"type":"boolean","default":true,"description":"Clear build output before each build.","scope":"resource"},"cmake.configureSettings":{"type":"object","default":{},"additionalProperties":{"oneOf":[{"type":"string"},{"type":"boolean"},{"type":"number"},{"type":"array","items":{"type":"string"}},{"type":"object","properties":{"type":{"type":"string","enum":["","BOOL","STRING","FILEPATH","PATH"]},"value":{}},"additionalProperties":false,"required":["type","value"]}]},"description":"CMake variables to set on the command line. This setting is specific to kits and will not be used for CMake Presets.","scope":"resource"},"cmake.cacheInit":{"oneOf":[{"type":"string","description":"Path to a cache-initializing CMake file."},{"type":"array","description":"List of cache initializer files.","items":{"type":"string","description":"A cache initializing CMake file."}}],"description":"Provide cache-initializing CMake file(s).","scope":"resource"},"cmake.preferredGenerators":{"type":"array","default":[],"description":"The preferred CMake generator(s) to use when configuring (tried in order of listing).","scope":"resource"},"cmake.generator":{"type":"string","default":null,"description":"The CMake generator to use.","scope":"resource"},"cmake.toolset":{"type":"string","default":null,"description":"The CMake toolset to use when configuring.","scope":"resource"},"cmake.platform":{"type":"string","default":null,"description":"The CMake platform to use when configuring.","scope":"resource"},"cmake.configureArgs":{"type":"array","description":"Additional arguments to pass to CMake when configuring. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active configure preset.","items":{"type":"string","title":"CMake Arguments"},"default":[],"scope":"resource"},"cmake.buildArgs":{"type":"array","description":"Additional arguments to pass to CMake when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.buildToolArgs":{"type":"array","description":"Additional arguments to pass to the underlying build tool when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset to invoke the build tool.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.parallelJobs":{"type":"number","default":0,"description":"The number of parallel build jobs. Use zero to automatically detect the number of CPUs. Setting this to 1 will omit the parallelism flag (-j) from the underlying build command, which has a generator-dependent effect on build parallelism.","scope":"resource"},"cmake.ctestPath":{"type":"string","default":null,"description":"Path to CTest executable. If null, will be inferred from cmake.cmakePath (recommended to leave null).","scope":"resource"},"cmake.cpackPath":{"type":"string","default":null,"when":"useCMakePresets == true","description":"Path to CPack executable. If null, will be inferred from cmake.cmakePath (recommended to leave null). Will be ignored when kits are used instead of presets.","scope":"resource"},"cmake.ctest.parallelJobs":{"type":"number","default":0,"markdownDescription":"The number of parallel test jobs. Use zero to use the value of `#cmake.parallelJobs#`. This only applies when `#cmake.ctest.allowParallelJobs#` is set to `true`.","scope":"resource"},"cmake.ctest.allowParallelJobs":{"type":"boolean","default":false,"description":"Allows ctests to be run in parallel, however the result output may be garbled as a result and the Test Explorer may not accurately reflect test progress.","scope":"resource"},"cmake.ctest.testExplorerIntegrationEnabled":{"type":"boolean","default":true,"description":"Whether or not the integration with the test explorer is enabled. This is helpful to disable if you prefer using a different extension for test integration.","scope":"machine-overridable"},"cmake.ctest.testSuiteDelimiter":{"type":"string","default":null,"markdownDescription":"Optional delimiter used to separate test suite names and group tests hierarchically in the Test Explorer. This string is used in a Regular Expression, so some delimiters may need escaping. Examples: `-` ( One delimiter: `-`), `\\.|::` (Two delimiters: `.` or `::`. Note that `.` needs to be escaped.)","scope":"machine-overridable"},"cmake.parseBuildDiagnostics":{"type":"boolean","default":true,"description":"Parse compiler output for warnings and errors.","scope":"resource"},"cmake.enabledOutputParsers":{"type":"array","markdownDescription":"Output parsers to use. Supported parsers `cmake`, `gcc`, `gnuld` for GNULD-style linker output, `msvc` for Microsoft Visual C++, `ghs` for the Green Hills compiler with --no_wrap_diagnostics --brief_diagnostics, and `diab` for the Wind River Diab compiler.","items":{"type":"string","enum":["cmake","gcc","gnuld","msvc","ghs","diab","iar"]},"default":["cmake","gcc","gnuld","msvc","ghs","diab"],"scope":"resource"},"cmake.debugConfig":{"type":"object","description":"The debug configuration to use when debugging a target.","properties":{"symbolSearchPath":{"type":"string","description":"Visual Studio debugger symbol search paths."},"additionalSOLibSearchPath":{"type":"string","description":"Paths for GDB or LLDB to search for .so files."},"externalConsole":{"type":"boolean","description":"Launch an external console for the program."},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:`std::cin` or `scanf`).","VS Code's integrated terminal.","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"markdownDescription":"Where to launch the debug target. Defaults to `internalConsole` if not defined."},"logging":{"type":"object","description":"Tell what types of messages should be logged to the console.","properties":{"exceptions":{"type":"boolean","default":true},"moduleLoad":{"type":"boolean","default":true},"programOutput":{"type":"boolean","default":true},"engineLogging":{"type":"boolean","default":false},"trace":{"type":"boolean","default":false},"traceResponse":{"type":"boolean","default":false}}},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging."},"args":{"type":"array","description":"Arguments to pass to program command line.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Set the working directory for the program."},"environment":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of environment variable."},"value":{"type":"string","description":"Value for the environment variable."}}}},"MIMode":{"type":"string","enum":["gdb","lldb"]},"miDebuggerPath":{"type":"string","description":"Path to gdb or lldb debugger."},"stopAtEntry":{"type":"boolean","description":"Stop at the entry point of the target.","default":false},"setupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"customLaunchSetupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"launchCompleteCommand":{"type":"string"},"dumpPath":{"type":"string"},"coreDumpPath":{"type":"string"}},"scope":"resource"},"cmake.defaultVariants":{"type":"object","$schema":"cmake-tools-schema://schemas/variants-schema.json","description":"Configure the default variant settings.","default":{"buildType":{"default":"debug","description":"The build type.","choices":{"debug":{"short":"Debug","long":"Disable optimizations - include debug information.","buildType":"Debug"},"release":{"short":"Release","long":"Optimize for speed - exclude debug information.","buildType":"Release"},"minsize":{"short":"MinSizeRel","long":"Optimize for smallest binary size - exclude debug information.","buildType":"MinSizeRel"},"reldeb":{"short":"RelWithDebInfo","long":"Optimize for speed - include debug information.","buildType":"RelWithDebInfo"},"unspecified":{"short":"Unspecified","long":"Let CMake pick the default build type.","buildType":"Unspecified"}}}},"scope":"resource"},"cmake.ctestArgs":{"type":"array","items":{"type":"string"},"description":"Additional arguments to pass to CTest. When using CMake Presets, these arguments are temporarily added to the arguments provided by the active test preset.","default":[],"scope":"resource"},"cmake.ctestDefaultArgs":{"type":"array","items":{"type":"string"},"description":"Arguments passed by default to CTest.","default":["-T","test","--output-on-failure"],"scope":"machine-overridable"},"cmake.cpackArgs":{"type":"array","when":"useCMakePresets == true","items":{"type":"string"},"description":"Additional arguments to pass to CPack (only when using presets, not supported for kits). These arguments are temporarily added to the arguments provided by the active package preset.","default":[],"scope":"resource"},"cmake.environment":{"type":"object","default":{},"description":"Environment variables to set when running CMake commands. When using CMake Presets, these are temporarily added to the environment used for CMake commands.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.configureEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during configure. When using CMake Presets, these are temporarily added to the environment provided by the active configure preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.buildEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during build. When using CMake Presets, these are temporarily added to the environment provided by the active build preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.testEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CTest. When using CMake Presets, these are temporarily added to the environment provided by the active test preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.cpackEnvironment":{"type":"object","default":{},"when":"useCMakePresets == true","description":"Environment variables to set when packaging with CPack (only when using presets, not supported for kits). These are temporarily added to the environment used for CPack runs.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.mingwSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Directories where MinGW may be installed.","scope":"window","markdownDeprecationMessage":"**Deprecated**: Please use `#cmake.additionalCompilerSearchDirs#` instead."},"cmake.additionalCompilerSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Additional directories to search for compilers.","scope":"window"},"cmake.emscriptenSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Directories where Emscripten may be installed.","scope":"window"},"cmake.mergedCompileCommands":{"type":"string","default":null,"description":"Recursively collect and merge all compile_commands.json found in the cmake.buildDirectory.","scope":"resource"},"cmake.copyCompileCommands":{"type":"string","default":null,"description":"Copy compile_commands.json to this location after a successful configure.","scope":"resource"},"cmake.configureOnOpen":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when they are opened.","scope":"resource"},"cmake.configureOnEdit":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when cmake.sourceDirectory or CMakeLists.txt content are saved.","scope":"resource"},"cmake.deleteBuildDirOnCleanConfigure":{"type":"boolean","default":false,"description":"Delete the entire build directory when a clean configure is invoked.","scope":"resource"},"cmake.setBuildTypeOnMultiConfig":{"type":"boolean","default":false,"description":"Set CMAKE_BUILD_TYPE also on multi config generators.","scope":"resource"},"cmake.skipConfigureIfCachePresent":{"type":"boolean","default":null,"description":"Skip over the configure process if cache is present.","scope":"resource"},"cmake.cmakeCommunicationMode":{"type":"string","default":"automatic","enum":["legacy","serverApi","fileApi","automatic"],"description":"The protocol used to communicate between the extension and CMake.","scope":"resource"},"cmake.showSystemKits":{"type":"boolean","default":true,"description":"Include system kits in kit selection.","scope":"resource"},"cmake.ignoreKitEnv":{"type":"boolean","default":false,"description":"Do not use the kit environment variables when running CMake commands.","scope":"resource"},"cmake.buildTask":{"type":"boolean","default":false,"description":"Build using tasks.json instead of internal process.","scope":"resource"},"cmake.outputLogEncoding":{"type":"string","default":"auto","description":"Encoding of the output from external commands (eg.cmake -- build).","scope":"window"},"cmake.enableTraceLogging":{"type":"boolean","default":false,"description":"Enable trace logging to file and console (very noisy).","scope":"window"},"cmake.loggingLevel":{"type":"string","default":"info","description":"Tell what types of messages should be logged to the console.","enum":["trace","debug","info","note","warning","error","fatal"],"scope":"window"},"cmake.touchbar.visibility":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."],"scope":"window"},"cmake.touchbar.advanced":{"type":"object","scope":"window","description":"Configures advanced settings for how the extension displays buttons on a MacBook Touch Bar.","properties":{"build":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"configure":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"debug":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"launch":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]}}},"cmake.showConfigureWithDebuggerNotification":{"type":"boolean","default":true,"description":"Enables the pop-up that asks the user if, upon a failed configure, they want to configure with the CMake Debugger.","scope":"application"},"cmake.showNotAllDocumentsSavedQuestion":{"type":"boolean","default":true,"description":"Enables the pop-up that asks the user if they want to continue the build despite some files possibly not being saved. If not enabled, the build will be continued.","scope":"application"},"cmake.options.statusBarVisibility":{"type":"string","default":"hidden","markdownDescription":"Configures how the extension displays the options in the Status Bar. These settings may be overwritten by the more specific `#cmake.options.advanced.statusBarVisibility#` setting. [More info](https://aka.ms/cmaketoolsoptionsconfiguration).","enum":["visible","compact","icon","hidden"],"scope":"window"},"cmake.options.advanced":{"type":"object","default":{"build":{"statusBarVisibility":"inherit","inheritDefault":"visible"},"launch":{"statusBarVisibility":"inherit","inheritDefault":"visible"},"debug":{"statusBarVisibility":"inherit","inheritDefault":"visible"}},"markdownDescription":"Configures the settings for individual Project Status View and status bar options. These settings may overwrite the more general `#cmake.options.statusBarVisibility#` setting. [More info](https://aka.ms/cmaketoolsoptionsconfiguration).","properties":{"configure":{"type":"object","properties":{"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"configurePreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"buildPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"testPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"packagePreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"workflowPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"kit":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"variant":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the status message removed.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]}}},"folder":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"buildTarget":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"build":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"launchTarget":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"debug":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"launch":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"ctest":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on test results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"cpack":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"default":"hidden","markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on cpack results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"workflow":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"default":"hidden","markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on workflow run results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}}}},"cmake.additionalKits":{"type":"array","default":[],"description":"Array of paths to custom kit files.","items":{"type":"string"},"scope":"resource"},"cmake.revealLog":{"type":"string","default":"always","enum":["focus","always","never","error"],"enumDescriptions":["The log appears and the output channel takes the cursor focus.","The log appears but the output channel doesn't take the cursor focus.","The log neither appears nor takes the focus.","The log appears only when the build or the configuration fails."],"description":"Configures the settings for showing the log and focusing on the output channel."},"cmake.exportCompileCommandsFile":{"type":"boolean","default":true,"description":"Enables exporting compile_commands.json. This only is used in Kits scenarios. In Presets scenarios, please set this by using CMakePresets.json","scope":"resource"},"cmake.useCMakePresets":{"type":"string","enum":["always","never","auto"],"default":"auto","description":"Use CMakePresets.json to configure drive CMake configure, build, and test. When using CMakePresets.json, kits, variants, and some settings in settings.json will be ignored.","scope":"resource"},"cmake.useVsDeveloperEnvironment":{"type":"string","enum":["always","never","auto"],"default":"auto","description":"When using CMake Presets on Windows, use the Visual Studio environment as the parent environment. Selecting auto will only apply the Visual Studio environment when we detect a supported compiler (cl, clang, clang-cl, clang-cpp, clang++), or the Ninja generator is being used.","scope":"resource"},"cmake.allowCommentsInPresetsFile":{"type":"boolean","default":false,"description":"Allow the use of JSON extensions such as comments in CMakePresets.json. Please note that your CMakePresets.json file may be considered invalid by other IDEs or on the command line if you use non-standard JSON.","scope":"resource"},"cmake.allowUnsupportedPresetsVersions":{"type":"boolean","default":false,"description":"Enables the use of presets files that are using features from the versions that CMake Tools extension doesn't currently support. Unknown properties and macros will be ignored.","scope":"resource"},"cmake.launchBehavior":{"type":"string","enum":["reuseTerminal","breakAndReuseTerminal","newTerminal"],"markdownEnumDescriptions":["The launch terminal instance is reused and the target will launch as soon as the terminal is idle.","The launch terminal instance is reused and a `break` command is sent to terminate any active foreground process before launching the target.","A new terminal instance is created and the target is launched in it. Existing terminals are not automatically cleaned up."],"description":"Controls what happens with the launch terminal when you launch a target.","default":"reuseTerminal"},"cmake.ignoreCMakeListsMissing":{"type":"boolean","default":false,"markdownDescription":"If `true`, the extension will not ask the user to select a CMakeLists.txt file for configuration when one is found in the workspace but not in the root folder.","scope":"resource"},"cmake.loadCompileCommands":{"type":"boolean","default":true,"description":"Controls whether the extension reads compile_commands.json to enable single file compilation.","scope":"resource"},"cmake.automaticReconfigure":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when the kit or the configuration preset is changed.","scope":"resource"},"cmake.pinnedCommands":{"type":"array","items":{"type":"string"},"description":"List of CMake commands to always pin by default. These will appear in the CMake Tools sidebar 'Pinned Commands' section.","default":["workbench.action.tasks.configureTaskRunner","workbench.action.tasks.runTask"],"scope":"resource"},"cmake.enableAutomaticKitScan":{"type":"boolean","default":true,"description":"Enable automatic scanning for kits when a kit isn't selected. This will only take affect when CMake Presets aren't being used.","scope":"resource"},"cmake.preRunCoverageTarget":{"type":"string","default":null,"description":"Target to build before running tests with coverage using the test explorer","scope":"resource"},"cmake.postRunCoverageTarget":{"type":"string","default":null,"description":"Target to build after running tests with coverage using the test explorer","scope":"resource"},"cmake.coverageInfoFiles":{"type":"array","items":{"type":"string"},"default":[],"description":"LCOV coverage info files to be processed after running tests with coverage using the test explorer.","scope":"resource"}}},"keybindings":[{"key":"f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.build"},{"key":"shift+f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.buildWithTarget"},{"key":"shift+f5","command":"cmake.debugTarget","when":"!inDebugMode && inCMakeProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"key":"shift+ctrl+f5","command":"cmake.launchTarget","when":"!inDebugMode && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"}],"viewsContainers":{"activitybar":[{"id":"cmake-view","title":"CMake","icon":"$(cmake-tools-cmake-view-2)","when":"cmake:enableFullFeatureSet"}]},"views":{"cmake-view":[{"id":"cmake.projectStatus","name":"Project Status","when":"cmake:enableFullFeatureSet"},{"id":"cmake.outline","name":"Project Outline","when":"cmake:enableFullFeatureSet"},{"id":"cmake.pinnedCommands","name":"Pinned Commands","when":"cmake:enableFullFeatureSet"}]},"viewsWelcome":[{"view":"cmake.pinnedCommands","contents":"No CMake commands have been pinned yet.\n[Add Command](command:cmake.pinnedCommands.add)","when":"cmake:enableFullFeatureSet"}],"yamlValidation":[{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema://schemas/variants-schema.json"}],"jsonValidation":[{"fileMatch":"cmake-variants.json","url":"cmake-tools-schema://schemas/variants-schema.json"},{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema://schemas/variants-schema.json"},{"fileMatch":"cmake-kits.json","url":"cmake-tools-schema://schemas/kits-schema.json"},{"fileMatch":"CMakePresets.json","url":"cmake-tools-schema://schemas/CMakePresets-v8-schema.json"},{"fileMatch":"CMakeUserPresets.json","url":"cmake-tools-schema://schemas/CMakePresets-v8-schema.json"}]},"_moduleAliases":{"@cmt":"out/src/","@test":"out/test/"},"scripts":{"compile":"yarn install && webpack --mode development","compile-watch":"yarn install && webpack --mode development --watch --progress","compile-production":"yarn install && yarn run translations-generate && webpack --env BUILD_VSCODE_NLS=true --mode production","translations-export":"gulp translations-export","translations-generate":"gulp translations-generate","translations-import":"gulp translations-import","package":"vsce package --yarn -o cmake-tools.vsix","pretest":"tsc -p test.tsconfig.json","lint":"gulp lint","smokeTests":"yarn run pretest && node ./out/test/smoke/badProject/runTest.js && node ./out/test/smoke/goodProject/runTest.js && node ./out/test/smoke/noCtest/runTest.js","unitTests":"yarn run pretest && node ./out/test/unit-tests/runTest.js","integrationTests":"yarn run pretest && node ./out/test/integration-tests/runTest.js","endToEndTestsSuccessfulBuild":"yarn run pretest && node ./out/test/end-to-end-tests/successful-build/runTest.js","endToEndTestsSingleRoot":"yarn run pretest && node ./out/test/end-to-end-tests/single-root-UI/runTest.js","endToEndTestsMultiRoot":"yarn run pretest && node ./out/test/end-to-end-tests/multi-root-UI/runTest.js","backendTests":"node ./node_modules/mocha/bin/_mocha -u tdd --timeout 999999 --colors -r ts-node/register -r tsconfig-paths/register ./test/unit-tests/backend/**/*.test.ts","build-product-icon-font":"yarn --cwd ./tools/product-icon-font-generator/ install && yarn --cwd ./tools/product-icon-font-generator/ build && node ./tools/product-icon-font-generator/dist/index.js --source-directory ./res/product-icons/ --output-directory ./res/ --woff2"},"devDependencies":{"@octokit/rest":"^18.1.1","@types/ajv":"^0.0.5","@types/chai":"^4.2.15","@types/chai-as-promised":"^7.1.3","@types/chai-string":"^1.4.2","@types/js-yaml":"^4.0.0","@types/json5":"~0.0.30","@types/lodash":"4.14.202","@types/mocha":"^8.2.2","@types/node":"^20.14.2","@types/rimraf":"^3.0.0","@types/sinon":"~9.0.10","@types/tmp":"^0.2.0","@types/vscode":"1.88.0","@types/which":"~2.0.0","@types/xml2js":"^0.4.8","@types/uuid":"~8.3.3","@typescript-eslint/eslint-plugin":"^5.25.0","@typescript-eslint/eslint-plugin-tslint":"^5.25.0","@typescript-eslint/parser":"^5.25.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^3.1.0","chai":"^4.3.0","chai-as-promised":"^7.1.1","chai-string":"^1.5.0","eslint":"^8.15.0","eslint-plugin-import":"^2.29.1","eslint-plugin-jsdoc":"^48.2.8","event-stream":"^4.0.1","fs-extra":"^9.1.0","glob":"^7.1.6","gulp":"^4.0.2","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^8.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^5.0.1","husky":"^4.3.8","jsonc-parser":"^3.0.0","mocha":"^8.3.2","module-alias":"^2.2.2","node-loader":"^1.0.2","parse-git-config":"^3.0.0","sinon":"~9.2.4","ts-loader":"^8.0.17","ts-node":"^9.1.1","tsconfig-paths":"^3.11.0","tslint":"^6.1.3","typescript":"^4.1.5","vscode-cmake-tools":"^1.2.0","vscode-nls-dev":"^3.3.2","webpack":"^5.94.0","webpack-cli":"^4.5.0"},"dependencies":{"@friedemannsommer/lcov-parser":"^4.0.1","@types/string.prototype.matchall":"^4.0.4","ajv":"^7.1.0","chokidar":"^3.5.1","handlebars":"^4.7.7","iconv-lite":"^0.6.2","js-yaml":"^4.0.0","json5":"^2.2.2","minimist":"^1.2.6","open":"^7.4.1","p-limit":"^3.1.0","rimraf":"^3.0.2","string.prototype.matchall":"^4.0.10","tmp":"^0.2.1","vscode-cpptools":"^6.1.0","@vscode/extension-telemetry":"^0.9.6","vscode-nls":"^5.0.0","vscode-tas-client":"^0.1.45","which":"~2.0.2","xml2js":"^0.5.0","uuid":"~8.3.2","lodash":"^4.17.21"},"resolutions":{"ansi-regex":"^5.0.1","chokidar":"^3.5.1","glob-parent":"^5.1.2","hosted-git-info":"^3.0.8","https-proxy-agent":"^5.0.0","**/minimist":"^1.2.5","nanoid":"^3.1.31","postcss":"^8.2.10","yargs-parser":"^20.2.4","xml2js":"^0.5.0","tsconfig-paths*/json5":"^1.0.2","minimatch":"^3.0.5","**/braces":"^3.0.3"},"packageManager":"yarn@1.22.19"},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ms-vscode.cmake-tools-1.20.53","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"7c889349-8749-43d4-8b5e-08939936d7f4","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":22366049},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-vsliveshare.vsliveshare","uuid":"5a6dc0d5-dc02-4121-8e24-cad33a2ff0af"},"manifest":{"name":"vsliveshare","displayName":"Live Share","description":"Real-time collaborative development from the comfort of your favorite tools.","version":"1.0.5948","publisher":"ms-vsliveshare","license":"SEE LICENSE IN LICENSE.txt","homepage":"https://aka.ms/vsls","bugs":{"url":"https://aka.ms/vsls-issues","email":"vsls-feedback@microsoft.com"},"author":{"name":"Microsoft"},"enabledApiProposals":["contribMenuBarHome","contribStatusBarItems","diffCommand","documentFiltersExclusive","fileSearchProvider","findTextInFiles","notebookCellExecutionState","notebookLiveShare","terminalDimensions","terminalDataWriteEvent","textSearchProvider"],"engines":{"vscode":"^1.72.0"},"keywords":["Collaboration","Co-Edit","Co-Debug","Sharing","Remote","liveshare"],"aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","categories":["Other"],"repository":{"url":"https://github.com/MicrosoftDocs/live-share"},"icon":"images/icon.png","activationEvents":["onFileSystemAccess:vsls","onFileSystem:vsls","onUri"],"browser":"./browser/extension","main":"./extension","capabilities":{"untrustedWorkspaces":{"supported":"limited","restrictedConfigurations":["liveshare.allowGuestDebugControl","liveshare.allowGuestTaskControl","liveshare.anonymousGuestApproval","liveshare.autoShareServers","liveshare.autoShareTerminals","liveshare.guestApprovalRequired","liveshare.joinDebugSessionOption","liveshare.languages.allowGuestCommandControl","liveshare.openSharedServers","liveshare.publishWorkspaceInfo","liveshare.shareExternalFiles","liveshare.showReadOnlyUsersInEditor"]}},"contributes":{"resourceLabelFormatters":[{"scheme":"vsls","formatting":{"label":"${path}","separator":"/","workspaceSuffix":"Live Share"}}],"viewsWelcome":[{"view":"liveshare.session","contents":"Start collaboratively editing and debugging with others in real-time.\n\n[Share (Read/Write)](command:liveshare.startFromWelcomeContent)\n\n[Share (Read-Only)](command:liveshare.startReadOnlyFromWelcomeContent)\n\n[Join](command:liveshare.joinFromWelcomeContent)","when":"!liveshare:isEnding && liveshare:state != SharingInProgress && liveshare:state != JoiningInProgress"}],"viewsContainers":{"activitybar":[{"id":"liveshare","title":"Live Share","icon":"images/dark/liveshare.svg"}]},"views":{"liveshare":[{"id":"liveshare.session","name":"Session Details"},{"id":"liveshare.help","name":"Help","when":"liveshare:showExplorer && liveshare:showHelpViewlet && liveshare:isCollaborating","visibility":"collapsed"},{"id":"liveshare.devtools","name":"Dev Tools","when":"config.liveshare.teamStatus || liveshare:isTeamMember"}],"explorer":[{"id":"liveshare.session.explorer","name":"Live Share","when":"liveshare:showExplorer && liveshare:isCollaborating"}]},"commands":[{"command":"liveshare.signin","title":"Sign in","category":"Live Share"},{"command":"liveshare.signin.token","title":"Sign In With User Code","category":"Live Share","when":"liveshare:isWeb"},{"command":"liveshare.signout","title":"Sign Out","category":"Live Share"},{"command":"liveshare.copyToken","title":"Copy Cascade Token","category":"Live Share","icon":"$(clippy)"},{"command":"liveshare.start","title":"Start Collaboration Session (Share)","category":"Live Share"},{"command":"liveshare.startFromFileTreeExplorer","title":"Start Collaboration Session (Share)","category":"Live Share","icon":{"dark":"images/dark/share.svg","light":"images/light/share.svg"}},{"command":"liveshare.joinFromActivityBar","title":"Join Collaboration Session","category":"Live Share","icon":{"dark":"images/dark/join.svg","light":"images/light/join.svg"}},{"command":"liveshare.startFromActivityBar","title":"Start Collaboration Session (Share)","category":"Live Share","icon":{"dark":"images/dark/share.svg","light":"images/light/share.svg"}},{"command":"liveshare.startFromWelcomeContent","title":"Start Collaboration Session (Share)","category":"Live Share"},{"command":"liveshare.startFromWelcomePage","title":"Start Collaboration Session (Share)","category":"Live Share"},{"command":"liveshare.end","title":"Stop Collaboration Session","category":"Live Share"},{"command":"liveshare.endFromFileTreeExplorer","title":"Stop Collaboration Session","category":"Live Share","icon":"$(circle-slash)"},{"command":"liveshare.endFromActivityBar","title":"Stop Collaboration Session","category":"Live Share","icon":"$(circle-slash)"},{"command":"liveshare.join","title":"Join Collaboration Session","category":"Live Share"},{"command":"liveshare.joinFromWelcomeContent","title":"Join Collaboration Session","category":"Live Share"},{"command":"liveshare.leave","title":"Leave Collaboration Session","category":"Live Share"},{"command":"liveshare.leaveFromFileTreeExplorer","title":"Leave Collaboration Session","category":"Live Share","icon":"$(circle-slash)"},{"command":"liveshare.leaveFromActivityBar","title":"Leave Collaboration Session","category":"Live Share","icon":"$(circle-slash)"},{"command":"liveshare.collaboration.link.copy","title":"Copy Collaboration Link","category":"Live Share","icon":"$(clippy)"},{"command":"liveshare.collaboration.link.copyFromFileTreeExplorer","title":"Copy Collaboration Link","category":"Live Share","icon":"$(clippy)"},{"command":"liveshare.collaboration.link.copyFromActivityBar","title":"Copy Collaboration Link","category":"Live Share","icon":"$(clippy)"},{"command":"liveshare.debug","title":"Join Debug Session","category":"Live Share"},{"command":"liveshare.listServers","title":"Show Shared Servers","category":"Live Share"},{"command":"liveshare.shareServer","title":"Share Server","category":"Live Share","when":"!liveshare:isWeb"},{"command":"liveshare.fileTreeExplorer.shareServer","title":"Share Server","category":"Live Share","icon":{"dark":"images/dark/addServer.svg","light":"images/light/addServer.svg"},"when":"!liveshare:isWeb"},{"command":"liveshare.activityBar.shareServer","title":"Share Server","category":"Live Share","icon":{"dark":"images/dark/addServer.svg","light":"images/light/addServer.svg"},"when":"!liveshare:isWeb"},{"command":"liveshare.fileTreeExplorer.openServerInBrowser","title":"Open Server in Browser","category":"Live Share","icon":{"dark":"images/dark/globe.svg","light":"images/light/globe.svg"}},{"command":"liveshare.activityBar.openServerInBrowser","title":"Open Server in Browser","category":"Live Share","icon":{"dark":"images/dark/globe.svg","light":"images/light/globe.svg"}},{"command":"liveshare.unshareServer","title":"Unshare Server","category":"Live Share","when":"!liveshare:isWeb"},{"command":"liveshare.fileTreeExplorer.unshareServer","title":"Unshare Server","category":"Live Share","icon":"$(circle-slash)","when":"!liveshare:isWeb"},{"command":"liveshare.activityBar.unshareServer","title":"Unshare Server","category":"Live Share","icon":"$(circle-slash)","when":"!liveshare:isWeb"},{"command":"liveshare.fileTreeExplorer.copyServerURL","title":"Copy Server URL","category":"Live Share","icon":"$(clippy)"},{"command":"liveshare.activityBar.copyServerURL","title":"Copy Server URL","category":"Live Share","icon":"$(clippy)"},{"command":"liveshare.focusParticipants","title":"Focus Participants","category":"Live Share","icon":{"dark":"images/dark/focus.svg","light":"images/light/focus.svg"}},{"command":"liveshare.focusParticipantsFromFileTreeExplorer","title":"Focus Participants","category":"Live Share","icon":{"dark":"images/dark/focus.svg","light":"images/light/focus.svg"}},{"command":"liveshare.focusParticipantsFromActivityBar","title":"Focus Participants","category":"Live Share","icon":{"dark":"images/dark/focus.svg","light":"images/light/focus.svg"}},{"command":"liveshare.listParticipants","title":"List Participants","category":"Live Share"},{"command":"liveshare.follow","title":"Follow Participant","category":"Live Share","icon":{"dark":"images/dark/pin.svg","light":"images/light/pin.svg"}},{"command":"liveshare.followToTheSide","title":"Follow Participant to the Side","category":"Live Share","icon":{"dark":"images/dark/pin.svg","light":"images/light/pin.svg"}},{"command":"liveshare.followToTheSideFromActivityBar","title":"Follow to the Side","category":"Live Share","icon":{"dark":"images/dark/pin.svg","light":"images/light/pin.svg"}},{"command":"liveshare.followToTheSideFromTreeExplorer","title":"Follow to the Side","category":"Live Share","icon":{"dark":"images/dark/pin.svg","light":"images/light/pin.svg"}},{"command":"liveshare.followFromFileTreeExplorer","title":"Follow Participant","category":"Live Share","icon":{"dark":"images/dark/pin-small.svg","light":"images/light/pin-small.svg"}},{"command":"liveshare.followFromActivityBar","title":"Follow Participant","category":"Live Share","icon":{"dark":"images/dark/pin-small.svg","light":"images/light/pin-small.svg"}},{"command":"liveshare.unfollow","title":"Unfollow Participant","category":"Live Share","icon":{"dark":"images/pin-green.svg","light":"images/pin-green.svg"}},{"command":"liveshare.unfollowFromFileTreeExplorer","title":"Unfollow Participant","category":"Live Share","icon":{"dark":"images/pin-green-small.svg","light":"images/pin-green-small.svg"}},{"command":"liveshare.unfollowFromActivityBar","title":"Unfollow Participant","category":"Live Share","icon":{"dark":"images/pin-green-small.svg","light":"images/pin-green-small.svg"}},{"command":"liveshare.focusParticipantFromActivityBar","title":"Focus Participant","category":"Live Share"},{"command":"liveshare.focusParticipantFromFileTreeExplorer","title":"Focus Participant","category":"Live Share"},{"command":"liveshare.removeParticipant","title":"Remove Participant","category":"Live Share"},{"command":"liveshare.removeParticipantFromFileTreeExplorer","title":"Remove Participant","category":"Live Share","icon":"$(remove-close)"},{"command":"liveshare.removeParticipantFromActivityBar","title":"Remove Participant","category":"Live Share","icon":"$(remove-close)"},{"command":"liveshare.blockParticipant","title":"Block Participant","category":"Live Share"},{"command":"liveshare.blockParticipantFromFileTreeExplorer","title":"Block Participant","category":"Live Share"},{"command":"liveshare.blockParticipantFromActivityBar","title":"Block Participant","category":"Live Share"},{"command":"liveshare.fileTreeExplorer.removeTerminal","title":"Remove Terminal","category":"Live Share","icon":{"dark":"images/cross.svg","light":"images/cross.svg"},"when":"!liveshare:isWeb"},{"command":"liveshare.activityBar.removeTerminal","title":"Remove Terminal","category":"Live Share","icon":{"dark":"images/cross.svg","light":"images/cross.svg"},"when":"!liveshare:isWeb"},{"command":"liveshare.exportLogs","title":"Export Logs","category":"Live Share","when":"liveshare:isNode"},{"command":"liveshare.getCoeditingInformation","title":"Get co-editing information","category":"Live Share"},{"command":"liveshare.shareTerminal","title":"Share Terminal","category":"Live Share","when":"!liveshare:isWeb"},{"command":"liveshare.fileTreeExplorer.shareTerminal","title":"Share Terminal","category":"Live Share","icon":{"dark":"images/dark/addTerminal.svg","light":"images/light/addTerminal.svg"},"when":"!liveshare:isWeb"},{"command":"liveshare.activityBar.shareTerminal","title":"Share Terminal","category":"Live Share","icon":{"dark":"images/dark/addTerminal.svg","light":"images/light/addTerminal.svg"},"when":"!liveshare:isWeb"},{"command":"liveshare.listTerminals","title":"Show Shared Terminals","category":"Live Share"},{"command":"liveshare.help","title":"Help","category":"Live Share"},{"command":"liveshare.fileTreeExplorer.openTerminal","title":"Focus Terminal","category":"Live Share","icon":{"dark":"images/dark/focusTerminal.svg","light":"images/light/focusTerminal.svg"}},{"command":"liveshare.activityBar.openTerminal","title":"Focus Terminal","category":"Live Share","icon":{"dark":"images/dark/focusTerminal.svg","light":"images/light/focusTerminal.svg"}},{"command":"liveshare.fileTreeExplorer.makeTerminalReadWrite","title":"Make Read/Write","category":"Live Share","when":"!liveshare:isWeb"},{"command":"liveshare.activityBar.makeTerminalReadWrite","title":"Make Read/Write","category":"Live Share","when":"!liveshare:isWeb"},{"command":"liveshare.fileTreeExplorer.makeTerminalReadOnly","title":"Make Read-Only","category":"Live Share","when":"!liveshare:isWeb"},{"command":"liveshare.activityBar.makeTerminalReadOnly","title":"Make Read-Only","category":"Live Share","when":"!liveshare:isWeb"},{"command":"liveshare.startReadOnly","title":"Start Read-Only Collaboration Session","category":"Live Share","icon":{"dark":"images/dark/share.svg","light":"images/light/share.svg"}},{"command":"liveshare.startReadOnlyFromFileTreeExplorer","title":"Start Read-Only Collaboration Session","category":"Live Share","icon":{"dark":"images/dark/share.svg","light":"images/light/share.svg"}},{"command":"liveshare.startReadOnlyFromActivityBar","title":"Start Read-Only Collaboration Session","category":"Live Share","icon":{"dark":"images/dark/share.svg","light":"images/light/share.svg"}},{"command":"liveshare.startReadOnlyFromWelcomeContent","title":"Start Read-Only Collaboration Session","category":"Live Share"},{"command":"liveshare.signInAndReload","title":"Sign in","category":"Live Share"},{"command":"liveshare.openSessionChat","title":"Open session chat","category":"Live Share","icon":{"light":"images/light/chat.svg","dark":"images/dark/chat.svg"}},{"command":"liveshare.openActivityLog","title":"Open activity log","category":"Live Share"},{"command":"liveshare.scc.openChange","title":"Open Changes","category":"Live Share Source Control","icon":{"light":"images/light/open-change.svg","dark":"images/dark/open-change.svg"}},{"command":"liveshare.scc.openFile","title":"Open File","category":"Live Share Source Control","icon":"$(go-to-file)"},{"command":"liveshare.scc.openFile2","title":"Open File","category":"Live Share Source Control","icon":"$(go-to-file)"},{"command":"liveshare.scc.clean","title":"Discard Changes","category":"Live Share Source Control","icon":"$(discard)"},{"command":"liveshare.scc.cleanAll","title":"Discard All Changes","category":"Live Share Source Control","icon":"$(discard)"},{"command":"liveshare.scc.revertChange","title":"Revert Change","category":"Live Share Source Control","icon":"$(discard)"},{"command":"liveshare.activityBar.user.elevate","title":"Make Read/Write","category":"Live Share"},{"command":"liveshare.activityBar.user.decrease","title":"Make Read-Only","category":"Live Share"},{"command":"liveshare.fileTreeExplorer.user.elevate","title":"Make Read/Write","category":"Live Share"},{"command":"liveshare.fileTreeExplorer.user.decrease","title":"Make Read-Only","category":"Live Share"},{"command":"liveshare.comments.createThread","title":"Create a comment thread","category":"Live Share"},{"command":"liveshare.comments.reply","title":"Reply","category":"Live Share"},{"command":"liveshare.comments.editComment","title":"Edit","category":"Live Share","icon":{"dark":"images/edit_inverse.svg","light":"images/edit.svg"}},{"command":"liveshare.comments.deleteComment","title":"Delete comment","category":"Live Share","icon":{"dark":"images/close_inverse.svg","light":"images/close.svg"}},{"command":"liveshare.comments.deleteThread","title":"Delete comment thread","category":"Live Share","icon":"$(close)"},{"command":"liveshare.comments.saveComment","title":"Save","category":"Live Share"},{"command":"liveshare.comments.cancelEditComment","title":"Cancel","category":"Live Share"},{"command":"liveshare.openInVSCode","title":"Open in VS Code","category":"Live Share"},{"command":"liveshare.openInVS","title":"Open in Visual Studio","category":"Live Share"},{"command":"liveshare.accessibility.setOutputDevice","title":"Accessibility: Set Output Device"},{"command":"liveshare.accessibility.toggleVoiceEnabled","title":"Accessibility: Toggle Voice Enabled"},{"command":"liveshare.accessibility.toggleSoundsEnabled","title":"Accessibility: Toggle Sounds Enabled"},{"command":"liveshare.accessibility.announceCoeditorLocation","title":"Accessibility: Announce Co-editor Location"}],"menus":{"view/title":[{"command":"liveshare.startFromFileTreeExplorer","when":"view == liveshare.session.explorer && liveshare:state != Shared && liveshare:state != SharingInProgress && liveshare:state != JoiningInProgress && liveshare:state != Joined","group":"navigation"},{"command":"liveshare.endFromFileTreeExplorer","when":"view == liveshare.session.explorer && liveshare:state == Shared","group":"navigation"},{"command":"liveshare.leaveFromFileTreeExplorer","when":"view == liveshare.session.explorer && liveshare:state == Joined","group":"navigation"},{"command":"liveshare.focusParticipantsFromFileTreeExplorer","when":"view == liveshare.session.explorer && liveshare:hasCollaborators","group":"navigation"},{"command":"liveshare.collaboration.link.copyFromFileTreeExplorer","when":"view == liveshare.session.explorer && liveshare:state == Shared","group":"navigation"},{"command":"liveshare.startFromActivityBar","when":"view == liveshare.session && liveshare:state != Shared && liveshare:state != SharingInProgress && liveshare:state != JoiningInProgress && liveshare:state != Joined","group":"navigation"},{"command":"liveshare.joinFromActivityBar","when":"view == liveshare.session && liveshare:state != Shared && liveshare:state != SharingInProgress && liveshare:state != JoiningInProgress && liveshare:state != Joined","group":"navigation"},{"command":"liveshare.endFromActivityBar","when":"view == liveshare.session && liveshare:state == Shared","group":"navigation"},{"command":"liveshare.leaveFromActivityBar","when":"view == liveshare.session && liveshare:state == Joined","group":"navigation"},{"command":"liveshare.focusParticipantsFromActivityBar","when":"view == liveshare.session && liveshare:hasCollaborators","group":"navigation"},{"command":"liveshare.collaboration.link.copyFromActivityBar","when":"view == liveshare.session && liveshare:state == Shared","group":"navigation"},{"command":"liveshare.copyToken","when":"view == liveshare.devtools","group":"navigation"}],"view/item/context":[{"command":"liveshare.followFromFileTreeExplorer","when":"view == liveshare.session.explorer && viewItem =~ /(participants.participant|participants.guest)(?!.followed)/","group":"participantContextMenu@1"},{"command":"liveshare.followToTheSideFromTreeExplorer","when":"view == liveshare.session.explorer && viewItem =~ /participants.participant|participants.guest/","group":"participantContextMenu@2"},{"command":"liveshare.unfollowFromFileTreeExplorer","when":"view == liveshare.session.explorer && viewItem =~ /participants.participant.followed|participants.guest.followed/","group":"participantContextMenu@1"},{"command":"liveshare.focusParticipantFromFileTreeExplorer","when":"view == liveshare.session.explorer && viewItem =~ /participants.participant|participants.guest/","group":"participantContextMenu@2"},{"command":"liveshare.focusParticipantFromActivityBar","when":"view == liveshare.session && viewItem =~ /participants.participant|participants.guest/","group":"participantContextMenu@1"},{"command":"liveshare.blockParticipantFromFileTreeExplorer","when":"view == liveshare.session.explorer && viewItem =~ /^participants.guest$|^participants.guest.followed$|participants.guest.elevated$|^participants.guest.followed.elevated/","group":"participantContextMenu@3"},{"command":"liveshare.removeParticipantFromFileTreeExplorer","when":"view == liveshare.session.explorer && viewItem =~ /participants.guest/","group":"inline"},{"command":"liveshare.fileTreeExplorer.shareServer","when":"view == liveshare.session.explorer && liveshare:state == Shared && viewItem == servers","group":"inline"},{"command":"liveshare.fileTreeExplorer.shareServer","when":"view == liveshare.session.explorer && liveshare:state == Shared && viewItem == servers"},{"command":"liveshare.fileTreeExplorer.shareTerminal","when":"view == liveshare.session.explorer && liveshare:state == Shared && viewItem == terminals","group":"inline"},{"command":"liveshare.fileTreeExplorer.shareTerminal","when":"view == liveshare.session.explorer && liveshare:state == Shared && viewItem == terminals"},{"command":"liveshare.fileTreeExplorer.unshareServer","when":"view == liveshare.session.explorer && viewItem == servers.local","group":"inline"},{"command":"liveshare.fileTreeExplorer.unshareServer","when":"view == liveshare.session.explorer && viewItem == servers.local"},{"command":"liveshare.fileTreeExplorer.openServerInBrowser","when":"view == liveshare.session.explorer && viewItem == servers.local"},{"command":"liveshare.fileTreeExplorer.openServerInBrowser","when":"view == liveshare.session.explorer && viewItem == servers.remote"},{"command":"liveshare.fileTreeExplorer.copyServerURL","when":"view == liveshare.session.explorer && viewItem == servers.local","group":"inline"},{"command":"liveshare.fileTreeExplorer.copyServerURL","when":"view == liveshare.session.explorer && viewItem == servers.local"},{"command":"liveshare.fileTreeExplorer.copyServerURL","when":"view == liveshare.session.explorer && viewItem == servers.remote","group":"inline"},{"command":"liveshare.fileTreeExplorer.copyServerURL","when":"view == liveshare.session.explorer && viewItem == servers.remote"},{"command":"liveshare.fileTreeExplorer.openTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readonly"},{"command":"liveshare.fileTreeExplorer.openTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readwrite"},{"command":"liveshare.fileTreeExplorer.openTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.remote"},{"command":"liveshare.fileTreeExplorer.removeTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readonly","group":"inline"},{"command":"liveshare.fileTreeExplorer.removeTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readwrite","group":"inline"},{"command":"liveshare.activityBar.removeTerminal","when":"view == liveshare.session && viewItem == terminals.local.readonly","group":"inline"},{"command":"liveshare.activityBar.removeTerminal","when":"view == liveshare.session && viewItem == terminals.local.readwrite","group":"inline"},{"command":"liveshare.fileTreeExplorer.removeTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readonly"},{"command":"liveshare.fileTreeExplorer.removeTerminal","when":"view == liveshare.session.explorer && viewItem == terminals.local.readwrite"},{"command":"liveshare.activityBar.removeTerminal","when":"view == liveshare.session && viewItem == terminals.local.readonly"},{"command":"liveshare.activityBar.removeTerminal","when":"view == liveshare.session && viewItem == terminals.local.readwrite"},{"command":"liveshare.fileTreeExplorer.makeTerminalReadWrite","when":"view == liveshare.session.explorer && viewItem == terminals.local.readonly && !liveshare:isReadOnlySession && !liveshare:readOnlyTerminalsEnforced"},{"command":"liveshare.activityBar.makeTerminalReadWrite","when":"view == liveshare.session && viewItem == terminals.local.readonly && !liveshare:isReadOnlySession && !liveshare:readOnlyTerminalsEnforced"},{"command":"liveshare.fileTreeExplorer.makeTerminalReadOnly","when":"view == liveshare.session.explorer && viewItem == terminals.local.readwrite && !liveshare:isReadOnlySession"},{"command":"liveshare.activityBar.makeTerminalReadOnly","when":"view == liveshare.session && viewItem == terminals.local.readwrite && !liveshare:isReadOnlySession"},{"command":"liveshare.followFromActivityBar","when":"view == liveshare.session && viewItem =~ /(participants.participant|participants.guest)(?!.followed)/","group":"participantContextMenu@1"},{"command":"liveshare.followToTheSideFromActivityBar","when":"view == liveshare.session && viewItem =~ /participants.participant|participants.guest/","group":"participantContextMenu@2"},{"command":"liveshare.unfollowFromActivityBar","when":"view == liveshare.session && viewItem =~ /participants.participant.followed|participants.guest.followed/","group":"participantContextMenu@1"},{"command":"liveshare.blockParticipantFromActivityBar","when":"view == liveshare.session  && viewItem =~ /^participants.guest$|^participants.guest.followed$|participants.guest.elevated$|^participants.guest.followed.elevated/","group":"participantContextMenu@3"},{"command":"liveshare.removeParticipantFromActivityBar","when":"view == liveshare.session && viewItem =~ /participants.guest/","group":"inline"},{"command":"liveshare.activityBar.user.elevate","when":"view == liveshare.session && liveshare:isReadOnlySession && viewItem =~ /^participants.guest$|^participants.guest.followed$|^participants.guest.anonymous$|^participants.guest.followed.anonymous$/"},{"command":"liveshare.activityBar.user.elevate","when":"view == liveshare.session && !liveshare:isReadOnlySession && viewItem =~ /^participants.guest.anonymous$|^participants.guest.followed.anonymous$/"},{"command":"liveshare.activityBar.user.decrease","when":"view == liveshare.session && liveshare:isReadOnlySession && viewItem =~ /^participants.guest.elevated$|^participants.guest.followed.elevated$|^participants.guest.elevated.anonymous$|^participants.guest.followed.elevated.anonymous$/"},{"command":"liveshare.activityBar.user.decrease","when":"view == liveshare.session && !liveshare:isReadOnlySession && viewItem =~ /^participants.guest.elevated.anonymous$|^participants.guest.followed.elevated.anonymous$/"},{"command":"liveshare.fileTreeExplorer.user.elevate","when":"view == liveshare.session.explorer && liveshare:isReadOnlySession && viewItem =~ /^participants.guest$|^participants.guest.followed$|^participants.guest.anonymous$|^participants.guest.followed.anonymous$/"},{"command":"liveshare.fileTreeExplorer.user.elevate","when":"view == liveshare.session.explorer && !liveshare:isReadOnlySession && viewItem =~ /^participants.guest.anonymous$|^participants.guest.followed.anonymous$/"},{"command":"liveshare.fileTreeExplorer.user.decrease","when":"view == liveshare.session.explorer && liveshare:isReadOnlySession && viewItem =~ /^participants.guest.elevated$|^participants.guest.followed.elevated$|^participants.guest.elevated.anonymous$|^participants.guest.followed.elevated.anonymous$/"},{"command":"liveshare.fileTreeExplorer.user.decrease","when":"view == liveshare.session.explorer && !liveshare:isReadOnlySession && viewItem =~ /^participants.guest.elevated.anonymous$|^participants.guest.followed.elevated.anonymous$/"},{"command":"liveshare.activityBar.shareServer","when":"view == liveshare.session && liveshare:state == Shared && viewItem == servers","group":"inline"},{"command":"liveshare.activityBar.shareServer","when":"view == liveshare.session && liveshare:state == Shared && viewItem == servers"},{"command":"liveshare.activityBar.shareTerminal","when":"view == liveshare.session && liveshare:state == Shared && viewItem == terminals","group":"inline"},{"command":"liveshare.activityBar.shareTerminal","when":"view == liveshare.session && liveshare:state == Shared && viewItem == terminals"},{"command":"liveshare.activityBar.unshareServer","when":"view == liveshare.session && viewItem == servers.local","group":"inline"},{"command":"liveshare.activityBar.unshareServer","when":"view == liveshare.session && viewItem == servers.local"},{"command":"liveshare.activityBar.openServerInBrowser","when":"view == liveshare.session && viewItem == servers.local"},{"command":"liveshare.activityBar.openServerInBrowser","when":"view == liveshare.session && viewItem == servers.remote"},{"command":"liveshare.activityBar.copyServerURL","when":"view == liveshare.session && viewItem == servers.local","group":"inline"},{"command":"liveshare.activityBar.copyServerURL","when":"view == liveshare.session && viewItem == servers.local"},{"command":"liveshare.activityBar.copyServerURL","when":"view == liveshare.session && viewItem == servers.remote","group":"inline"},{"command":"liveshare.activityBar.copyServerURL","when":"view == liveshare.session && viewItem == servers.remote"},{"command":"liveshare.activityBar.openTerminal","when":"view == liveshare.session && viewItem == terminals.local.readonly"},{"command":"liveshare.activityBar.openTerminal","when":"view == liveshare.session && viewItem == terminals.local.readwrite"},{"command":"liveshare.activityBar.openTerminal","when":"view == liveshare.session && viewItem == terminals.remote"}],"editor/title":[{"command":"liveshare.follow","when":"liveshare:isFollowable && liveshare:hasCollaborators && !liveshare:isFollowing","group":"navigation@-1000"},{"command":"liveshare.unfollow","when":"liveshare:isFollowable && liveshare:hasCollaborators && liveshare:isFollowing","group":"navigation@-1000"},{"command":"liveshare.focusParticipants","when":"liveshare:hasCollaborators","group":"navigation@-999"},{"command":"liveshare.scc.openFile","group":"navigation","when":"vslsSccOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme =~ /^vsls$|^vsls-scc$|^vslsexternal$/"},{"command":"liveshare.scc.openChange","group":"navigation","when":"vslsSccOpenRepositoryCount != 0 && !isInDiffEditor && resourceScheme == vsls"}],"scm/resourceGroup/context":[{"command":"liveshare.scc.cleanAll","when":"scmProvider == vsls-scc && scmResourceGroup =~ /clean_/ && !liveshare:isReadOnlySession","group":"inline"},{"command":"liveshare.scc.cleanAll","when":"scmProvider == vsls-scc && scmResourceGroup =~ /clean_/ && !liveshare:isReadOnlySession","group":"1_modification"}],"scm/resourceState/context":[{"command":"liveshare.scc.openFile","when":"scmProvider == vsls-scc && scmResourceGroup =~ /openFile_/","group":"navigation"},{"command":"liveshare.scc.openChange","when":"scmProvider == vsls-scc && scmResourceGroup =~ /openChanges_/","group":"navigation"},{"command":"liveshare.scc.clean","when":"scmProvider == vsls-scc && scmResourceGroup =~ /clean_/ && !liveshare:isReadOnlySession","group":"1_modification"},{"command":"liveshare.scc.openFile","when":"scmProvider == vsls-scc && scmResourceGroup =~ /openFile_/","group":"inline@0"},{"command":"liveshare.scc.clean","when":"scmProvider == vsls-scc && scmResourceGroup =~ /clean_/ && !liveshare:isReadOnlySession","group":"inline@1"}],"scm/change/title":[{"command":"liveshare.scc.revertChange","when":"originalResourceScheme == vsls-scc && !liveshare:isReadOnlySession"}],"comments/commentThread/title":[{"command":"liveshare.comments.deleteThread","group":"navigation","when":"commentThread =~ /deletable/ && !commentThreadIsEmpty && commentController == vsls-comments"}],"comments/commentThread/context":[{"command":"liveshare.comments.createThread","group":"inline","precondition":"!commentIsEmpty && commentController == vsls-comments","when":"commentThreadIsEmpty && commentController == vsls-comments"},{"command":"liveshare.comments.reply","group":"inline","precondition":"!commentIsEmpty && commentController == vsls-comments","when":"!commentThreadIsEmpty && commentController == vsls-comments"}],"comments/comment/title":[{"command":"liveshare.comments.editComment","group":"group@1","when":"comment =~ /editable/ && commentController == vsls-comments "},{"command":"liveshare.comments.deleteComment","group":"group@2","when":"comment =~ /deletable/ && commentController == vsls-comments"}],"comments/comment/context":[{"command":"liveshare.comments.cancelEditComment","group":"inline@1","when":"commentController == vsls-comments"},{"command":"liveshare.comments.saveComment","group":"inline@2","when":"commentController == vsls-comments"}],"statusBar/remoteIndicator":[{"command":"liveshare.startFromActivityBar","group":"virtualfs_00_vsls_vslsfs","when":"!liveshare:state || liveshare:state ==  SignedOut || liveshare:state ==  SignedIn"},{"command":"liveshare.joinFromActivityBar","group":"virtualfs_01_vsls_vslsfs","when":"!liveshare:state || liveshare:state ==  SignedOut || liveshare:state ==  SignedIn"},{"command":"liveshare.follow","group":"virtualfs_00_vsls_vslsfs","when":"liveshare:state == Joined"},{"command":"liveshare.focusParticipants","group":"virtualfs_01_vsls_vslsfs","when":"liveshare:state == Joined"},{"command":"liveshare.openSessionChat","group":"virtualfs_02_vsls_vslsfs","when":"liveshare:state == Joined"},{"command":"liveshare.leave","group":"virtualfs_03_vsls_vslsfs","when":"liveshare:state == Joined"},{"command":"liveshare.openInVSCode","group":"virtualfs_04_vsls_vslsfs","when":"liveshare:isWeb && liveshare:state == Joined"},{"command":"liveshare.openInVS","group":"virtualfs_05_vsls_vslsfs","when":"liveshare:isWeb && liveshare:state == Joined"}],"menuBar/home":[{"command":"liveshare.openInVSCode","group":"openin_actions@1","when":"liveshare:isWeb && liveshare:state == Joined"},{"command":"liveshare.openInVS","group":"openin_actions@2","when":"liveshare:isWeb && liveshare:state == Joined"}],"commandPalette":[{"command":"liveshare.exportLogs","when":"liveshare:isNode"},{"command":"liveshare.signin","when":"liveshare:state == SignedOut"},{"command":"liveshare.signin","when":"liveshare:state == SigningIn"},{"command":"liveshare.signin","when":"liveshare:state == ExternallySigningIn"},{"command":"liveshare.signin.token","when":"liveshare:isWeb && liveshare:state == SignedOut && !liveshare:isNativeAuthEnabled"},{"command":"liveshare.signin.token","when":"liveshare:isWeb && liveshare:state == SigningIn && !liveshare:isNativeAuthEnabled"},{"command":"liveshare.signin.token","when":"liveshare:isWeb && liveshare:state == ExternallySigningIn && !liveshare:isNativeAuthEnabled"},{"command":"liveshare.signin.token","when":"liveshare:isWeb && liveshare:isAnonymousUser && !liveshare:isNativeAuthEnabled"},{"command":"liveshare.signout","when":"liveshare:state != SignedOut && !liveshare:isAnonymousUser && !liveshare:isCollaborating && !liveshare:isNativeAuthEnabled"},{"command":"liveshare.copyToken","when":"config.liveshare.teamStatus || liveshare:isTeamMember"},{"command":"liveshare.start","when":"(liveshare:state != Shared && liveshare:state != Joined) || (liveshare:state == SignedOut)"},{"command":"liveshare.startReadOnly","when":"(liveshare:state != Shared && liveshare:state != Joined) || (liveshare:state == SignedOut)"},{"command":"liveshare.startReadOnlyFromFileTreeExplorer","when":"false"},{"command":"liveshare.startReadOnlyFromActivityBar","when":"false"},{"command":"liveshare.startReadOnlyFromWelcomeContent","when":"false"},{"command":"liveshare.startFromWelcomeContent","when":"false"},{"command":"liveshare.joinFromWelcomeContent","when":"false"},{"command":"liveshare.end","when":"liveshare:state == Shared"},{"command":"liveshare.join","when":"liveshare:state != Shared && liveshare:state != Joined"},{"command":"liveshare.leave","when":"liveshare:state == Joined"},{"command":"liveshare.debug","when":"liveshare:state == Joined"},{"command":"liveshare.listServers","when":"liveshare:isCollaborating"},{"command":"liveshare.signInAndReload","when":"liveshare:isAnonymousUser"},{"command":"liveshare.focusParticipants","when":"liveshare:hasCollaborators"},{"command":"liveshare.shareServer","when":"!liveshare:isWeb && liveshare:state == Shared"},{"command":"liveshare.unshareServer","when":"!liveshare:isWeb && liveshare:isServerShared && liveshare:state == Shared"},{"command":"liveshare.follow","when":"liveshare:isFollowable && liveshare:hasCollaborators && !liveshare:isFollowing"},{"command":"liveshare.unfollow","when":"liveshare:isFollowable && liveshare:hasCollaborators && liveshare:isFollowing"},{"command":"liveshare.listParticipants","when":"liveshare:hasCollaborators"},{"command":"liveshare.shareTerminal","when":"!liveshare:isWeb && liveshare:state == Shared"},{"command":"liveshare.listTerminals","when":"liveshare:hasSharedTerminals && liveshare:state == Joined"},{"command":"liveshare.help"},{"command":"liveshare.collaboration.link.copy","when":"liveshare:isCollaborating"},{"command":"liveshare.followFromFileTreeExplorer","when":"false"},{"command":"liveshare.followToTheSide","when":"liveshare:hasCollaborators"},{"command":"liveshare.followToTheSideFromTreeExplorer","when":"false"},{"command":"liveshare.openSessionChat","when":"false"},{"command":"liveshare.openActivityLog","when":"false"},{"command":"liveshare.unfollowFromFileTreeExplorer","when":"false"},{"command":"liveshare.followFromActivityBar","when":"false"},{"command":"liveshare.followToTheSideFromActivityBar","when":"false"},{"command":"liveshare.unfollowFromActivityBar","when":"false"},{"command":"liveshare.focusParticipantFromActivityBar","when":"false"},{"command":"liveshare.focusParticipantFromFileTreeExplorer","when":"false"},{"command":"liveshare.removeParticipant","when":"false"},{"command":"liveshare.removeParticipantFromFileTreeExplorer","when":"false"},{"command":"liveshare.removeParticipantFromActivityBar","when":"false"},{"command":"liveshare.blockParticipant","when":"false"},{"command":"liveshare.blockParticipantFromFileTreeExplorer","when":"false"},{"command":"liveshare.blockParticipantFromActivityBar","when":"false"},{"command":"liveshare.fileTreeExplorer.unshareServer","when":"false"},{"command":"liveshare.activityBar.unshareServer","when":"false"},{"command":"liveshare.collaboration.link.copyFromFileTreeExplorer","when":"false"},{"command":"liveshare.collaboration.link.copyFromActivityBar","when":"false"},{"command":"liveshare.startFromFileTreeExplorer","when":"false"},{"command":"liveshare.startFromActivityBar","when":"false"},{"command":"liveshare.startFromWelcomePage","when":"false"},{"command":"liveshare.joinFromActivityBar","when":"false"},{"command":"liveshare.endFromFileTreeExplorer","when":"false"},{"command":"liveshare.endFromActivityBar","when":"false"},{"command":"liveshare.focusParticipantsFromFileTreeExplorer","when":"false"},{"command":"liveshare.focusParticipantsFromActivityBar","when":"false"},{"command":"liveshare.leaveFromFileTreeExplorer","when":"false"},{"command":"liveshare.leaveFromActivityBar","when":"false"},{"command":"liveshare.fileTreeExplorer.shareServer","when":"false"},{"command":"liveshare.activityBar.shareServer","when":"false"},{"command":"liveshare.fileTreeExplorer.unshareServer","when":"false"},{"command":"liveshare.activityBar.unshareServer","when":"false"},{"command":"liveshare.fileTreeExplorer.openServerInBrowser","when":"false"},{"command":"liveshare.activityBar.openServerInBrowser","when":"false"},{"command":"liveshare.fileTreeExplorer.copyServerURL","when":"false"},{"command":"liveshare.activityBar.copyServerURL","when":"false"},{"command":"liveshare.fileTreeExplorer.shareTerminal","when":"false"},{"command":"liveshare.activityBar.shareTerminal","when":"false"},{"command":"liveshare.fileTreeExplorer.openTerminal","when":"false"},{"command":"liveshare.activityBar.openTerminal","when":"false"},{"command":"liveshare.fileTreeExplorer.makeTerminalReadWrite","when":"false"},{"command":"liveshare.activityBar.makeTerminalReadWrite","when":"false"},{"command":"liveshare.fileTreeExplorer.makeTerminalReadOnly","when":"false"},{"command":"liveshare.activityBar.makeTerminalReadOnly","when":"false"},{"command":"liveshare.fileTreeExplorer.removeTerminal","when":"false"},{"command":"liveshare.activityBar.removeTerminal","when":"false"},{"command":"liveshare.scc.openFile","when":"false"},{"command":"liveshare.scc.openFile2","when":"false"},{"command":"liveshare.scc.openChange","when":"false"},{"command":"liveshare.scc.clean","when":"false"},{"command":"liveshare.scc.cleanAll","when":"false"},{"command":"liveshare.scc.revertChange","when":"false"},{"command":"liveshare.activityBar.user.elevate","when":"false"},{"command":"liveshare.activityBar.user.decrease","when":"false"},{"command":"liveshare.fileTreeExplorer.user.elevate","when":"false"},{"command":"liveshare.fileTreeExplorer.user.decrease","when":"false"},{"command":"liveshare.comments.createThread","when":"false"},{"command":"liveshare.comments.reply","when":"false"},{"command":"liveshare.comments.editComment","when":"false"},{"command":"liveshare.comments.deleteComment","when":"false"},{"command":"liveshare.comments.deleteThread","when":"false"},{"command":"liveshare.comments.saveComment","when":"false"},{"command":"liveshare.comments.cancelEditComment","when":"false"},{"command":"liveshare.getCoeditingInformation","when":"liveshare:diagnosticModeEnabled"},{"command":"liveshare.openInVSCode","when":"liveshare:isWeb && liveshare:state == Joined"},{"command":"liveshare.openInVS","when":"liveshare:isWeb && liveshare:state == Joined"},{"command":"liveshare.accessibility.setOutputDevice","when":"!liveshare:isWeb && isWindows && config.liveshare.accessibility.accessibilityFeaturesEnabled != off"},{"command":"liveshare.accessibility.toggleVoiceEnabled","when":"!liveshare:isWeb && config.liveshare.accessibility.accessibilityFeaturesEnabled != off"},{"command":"liveshare.accessibility.toggleSoundsEnabled","when":"!liveshare:isWeb && config.liveshare.accessibility.accessibilityFeaturesEnabled != off"},{"command":"liveshare.accessibility.announceCoeditorLocation","when":"!liveshare:isWeb && config.liveshare.accessibility.accessibilityFeaturesEnabled != off"}]},"keybindings":[{"command":"liveshare.follow","key":"ctrl+alt+f","mac":"cmd+alt+f","when":"liveshare:hasCollaborators && !liveshare:isFollowing"},{"command":"liveshare.followToTheSide","key":"ctrl+alt+/","mac":"cmd+alt+/","when":"liveshare:hasCollaborators"},{"command":"liveshare.unfollow","key":"ctrl+alt+f","mac":"cmd+alt+f","when":"liveshare:hasCollaborators && liveshare:isFollowing"},{"command":"liveshare.join","key":"ctrl+alt+j","mac":"cmd+alt+j","when":"liveshare:state != Shared && liveshare:state != Joined"}],"configuration":{"type":"object","title":"Visual Studio Live Share","properties":{"liveshare.anonymousGuestApproval":{"default":"prompt","enum":["prompt","accept","reject"],"description":"Controls how to handle join requests from anonymous guests."},"liveshare.launcherClient":{"type":"string","default":"web","enum":["web","visualStudioCode","visualStudio"],"description":"Specifies the client to launch when clicking on a Live Share URL."},"liveshare.diagnosticLoggingLevel":{"default":"Warning","enum":["Trace","Debug","Info","Warning","Error","Critical","Off"],"description":"Specifies the level of logging output from Visual Studio Live Share Extension"},"liveshare.diagnosticLogging":{"type":"boolean","default":false,"description":"Enables the Visual Studio Live Share output channel."},"liveshare.diagnosticMode":{"type":"boolean","default":false,"description":"Enables diagnostic notifications and logs."},"liveshare.connectionMode":{"type":"string","default":"auto","enum":["auto","direct","relay"],"description":"Type of connection used for collaboration; the default (auto) mode prefers a direct connection, but may fallback to a cloud relay if the direct connection failed."},"liveshare.nameTagVisibility":{"type":"string","default":"Activity","enum":["Always","Activity","Never"],"description":"Controls when to display a participant's name tag instead of just their cursor."},"liveshare.guestApprovalRequired":{"type":"boolean","default":false,"description":"Controls whether the host needs to explicitly approve guest requests to join collaboration sessions."},"liveshare.shareExternalFiles":{"type":"boolean","default":true,"description":"Automatically share external files opened by the host during a collaboration session."},"liveshare.joinDebugSessionOption":{"type":"string","default":"Automatic","enum":["Automatic","Manual","Prompt"],"description":"Controls how the participant will join incoming shared debug sessions."},"liveshare.showInStatusBar":{"type":"string","default":"always","enum":["always","whileCollaborating","never"],"description":"Show or hide the Live Share status bar items."},"liveshare.sharedTerminalWidth":{"type":"number","default":120,"description":"Width of shared terminal window, characters."},"liveshare.sharedTerminalHeight":{"type":"number","default":50,"description":"Height of shared terminal window, characters."},"liveshare.featureSet":{"type":"string","default":"stable","enum":["stable","insiders"],"markdownDescription":"Controls set of active features. By selecting `insiders`, you agree to the [Pre-Release Software License Terms](https://aka.ms/vsls-license-preview) and [Privacy Statement](https://aka.ms/vsls-privacy)."},"liveshare.keepAliveInterval":{"type":"number","default":20,"description":"Sets the number of seconds to wait before sending keep-alive messages in an idle session, used to detect abnormal network disconnection. Set to -1 to disable sending keep-alive messages."},"liveshare.allowGuestTaskControl":{"type":"boolean","default":false,"description":"Allow guests to run and terminate workspace tasks."},"liveshare.allowGuestDebugControl":{"type":"boolean","default":false,"description":"Allow guests to start and stop debugging sessions."},"liveshare.languages.allowGuestCommandControl":{"type":"boolean","default":false,"description":"Allow guests to run arbitrary commands via Code Actions (“Quick Fixes”) and CodeLens"},"liveshare.notebooks.allowGuestExecuteCells":{"type":"boolean","default":false,"description":"Allow guests to run notebook cells"},"liveshare.focusBehavior":{"type":"string","default":"accept","description":"Specifies how to respond to focus requests from other participants.","enum":["accept","prompt"]},"liveshare.alwaysFollowHost":{"type":"boolean","default":false,"description":"Ensures that the session's host is always followed."},"liveshare.showReadOnlyUsersInEditor":{"type":"string","default":"whileFollowing","description":"Controls visibility of the cursor and highlights for read-only users.","enum":["whileFollowing","always"]},"liveshare.increasedGuestLimit":{"type":"boolean","default":true,"description":"Increases the guest limit from 5 to 30."},"liveshare.autoShareTerminals":{"type":"boolean","default":true,"description":"Controls whether terminals are automatically shared with guests (read-only)."},"liveshare.codeLens":{"type":"boolean","default":true,"description":"Controls whether to show the CodeLens for starting a collaboration session."},"liveshare.showVerboseNotifications":{"type":"boolean","default":true,"description":"Controls whether to show verbose notifications, such as when a guest joins and leaves a session."},"liveshare.populateGitCoAuthors":{"type":"string","default":"always","description":"Specifies when to automatically populate your Git commit message with guest attribution (using the Git-co-author trailer).","enum":["always","never"]},"liveshare.autoShareServers":{"type":"boolean","default":true,"description":"Controls whether web servers are automatically shared, when started from the integrated terminal or well-known extensions."},"liveshare.openSharedServers":{"type":"boolean","default":true,"description":"Controls whether to automatically open shared servers in your default browser."},"liveshare.publishWorkspaceInfo":{"type":"boolean","default":false,"description":"Controls whether to publish your current workspace folder to other users"},"liveshare.comments":{"type":"boolean","default":true,"description":"Controls whether to allow comments in collaboration sessions"},"liveshare.accessibility.accessibilityFeaturesEnabled":{"type":"string","default":"off","enum":["off"],"description":"Enables various accessibility features, such as audio cues about what is happening in the session."},"liveshare.accessibility.outputDevice":{"type":"string","default":"Default","description":"Output device to play audio in accessibility mode."},"liveshare.accessibility.voiceVolume":{"type":"number","minimum":0,"maxiumum":100,"default":100,"description":"Controls the volume of voice audio in accessibility mode (between 0 and 100)."},"liveshare.accessibility.soundVolume":{"type":"number","minimum":0,"maxiumum":100,"default":100,"description":"Controls the volume of sound audio in accessibility mode (between 0 and 100)."},"liveshare.accessibility.speechRate":{"type":"number","minimum":1,"maxiumum":10,"default":2,"description":"Controls the rate of speech in accessibility mode."},"liveshare.accessibility.voice":{"type":"string","default":"en-US-Jenny","enum":["en-AU-Natasha","en-AU-William","en-CA-Clara","en-CA-Liam","en-HK-Yan","en-HK-Sam","en-IN-Neerja","en-IN-Prabhat","en-IE-Emily","en-IE-Connor","en-NZ-Molly","en-NZ-Mitchell","en-PH-Rosa","en-PH-James","en-SG-Luna","en-SG-Wayne","en-ZA-Leah","en-ZA-Luke","en-GB-Libby","en-GB-Sonia","en-GB-Mia","en-GB-Ryan","en-US-Aria","en-US-Jenny","en-US-Guy","en-US-Sara","en-US-Amber","en-US-Ashley","en-US-Cora","en-US-Elizabeth","en-US-Michelle","en-US-Monica","en-US-Ana","en-US-Brandon","en-US-Christopher","en-US-Jacob","en-US-Eric","zh-HK-HiuGaai","zh-HK-WanLung","zh-CN-Xiaohan","zh-CN-Yunxi","zh-TW-HsiaoChen","zh-TW-YunJhe","fr-FR-Denise","fr-FR-Henri","de-DE-Katja","de-DE-Conrad","it-IT-Elsa","it-IT-Diego","es-ES-Elvira","es-ES-Alvaro","ja-JP-Nanami","ja-JP-Keita","ko-KR-SunHi","ko-KR-InJoon","ru-RU-Dariya","ru-RU-Dmitry","bg-BG-Kalina","bg-BG-Borislav","hu-HU-Noemi","hu-HU-Tamas","pt-BR-Francisca","pt-BR-Antonio","tr-TR-Emel","tr-TR-Ahmet","pl-PL-Agnieszka","pl-PL-Marek","cs-CZ-Vlasta","cs-CZ-Antonin"],"description":"The voice used for speech in accessibility mode."},"liveshare.accessibility.voiceEnabled":{"type":"boolean","default":true,"description":"Enables spoken announcements about activity."},"liveshare.accessibility.soundsEnabled":{"type":"boolean","default":true,"description":"Enables sound effects about activity."}}},"debuggers":[{"type":"vslsJoin","when":"virtualWorkspace == vsls","label":"Visual Studio Live Share Participant Debugging","args":[],"configurationAttributes":{"launch":{"required":["agentUri","joinedInfo","localPath","pipeName"],"properties":{"agentUri":{"type":"string","description":"Agent Uri to connect to Live Share services"},"joinedInfo":{"type":"object","description":"Join Info"},"localPath":{"type":"string","description":"Local path of workspace"},"pipeName":{"type":"string","description":"Pipe name to request host services"}}}}},{"type":"vslsShare","when":"!virtualWorkspace && !liveshare:isWeb","label":"Visual Studio Live Share Debugging","args":[],"configurationAttributes":{"launch":{"required":["agentUri","joinedInfo","pipeName","adapterProxy"],"properties":{"agentUri":{"type":"string","description":"Agent Uri to connect to Live Share services"},"joinedInfo":{"type":"object","description":"Join Info"},"pipeName":{"type":"string","description":"Pipe name to request host services"},"adapterProxy":{"type":"object","description":"The adapter proxy"}}}}}],"taskDefinitions":[{"type":"vsls","required":["taskUid"],"properties":{"taskUid":{"type":"string","description":"The unique ID of the remote task."},"executionId":{"type":"string","description":"The execution ID indicates the task is associated with a monitor process. If no execution ID specified, this is a user triggered task."}}}],"problemMatchers":[{"name":"vsls","owner":"vsls","fileLocation":["relative","${workspaceFolder}"],"pattern":[{"regexp":"^([^\\s].*)$","file":1},{"regexp":"^\\s+(\\d+):(\\d+)\\s+(error|warning|info)\\s+(.*)\\s\\s+(.*)$","line":1,"column":2,"severity":3,"message":4,"code":5}]}],"statusBarItems":[{"id":"liveshare.userStatusBarItem","alignment":"left","priority":3,"name":"Live Share Collaboration","text":"$(live-share) Live Share","command":"liveshare.start"}]},"scripts":{"test":"yarn webpack-node && yarn run-vscode-test && yarn run-unit-test","pr-test":"yarn run-vscode-test && yarn run-unit-test","run-vscode-test":"node ./out/test/runTest.js","run-unit-test":"jest -c jest.config.js","run-legacy-vscode-test":"node ./out/test/legacy/runTest.js","vscode-test":"yarn webpack-node && yarn run-vscode-test","unit-test":"yarn webpack-node && yarn run-unit-test","legacy-vscode-test":"yarn webpack-node && yarn run-legacy-vscode-test","vscode:prepublish":"echo \"nothing\"","webview:build":"cd ../communications/webview && yarn build","activitiesWebview:build":"cd ../activities/activitiesWebview && yarn build","compile":"../../common/node_modules/.bin/tsc -b ./","webpack:build":"yarn compile && yarn webview:build","watch":"../../common/node_modules/.bin/tsc -b -watch ./","build:webpack":"node ../../node_modules/webpack-cli/bin/cli.js --config webpack.browser.config","prewebpack":"cd ../../vsls-contracts && yarn generate-contracts","webpack-dev":"yarn webpack:build && yarn build:webpack --mode=development","webpack-dev-deploy":"yarn webpack-dev && gulp deploy-web && gulp fixOutWebPackageContents","webpack":"yarn webpack:build && yarn build:webpack && gulp deploy-web","build:webpack-node":"node ../../common/node_modules/webpack-cli/bin/cli.js --config webpack.node.config","deploy-node":"yarn compile-port-forwarder && yarn compile-liveshare-hub && yarn compile-speaker && gulp deploy-node","webpack-node-browser":"yarn webpack:build && yarn build:webpack-node && yarn build:webpack && yarn deploy-node && gulp deploy-node-browser","webpack-node":"yarn webpack:build && yarn build:webpack-node && yarn deploy-node","webpack-node-dev":"yarn webpack:build && yarn build:webpack-node --mode=development && yarn deploy-node","package-dev":"yarn webpack-node-dev && gulp package","package-node":"yarn webpack-node && gulp package","package":"yarn webpack-node-browser && gulp package","compile-dev":"yarn compile && gulp deploy-package-out","compile-port-forwarder":"cd ../../port-forwarder/hub && yarn webpack-node","compile-liveshare-hub":"cd ../hub && yarn webpack-node","compile-speaker":"cd ../../speaker && ../common/node_modules/.bin/tsc -b","build:lint":"../../node_modules/.bin/eslint src --ext ts","build:lint-fix":"../../node_modules/.bin/eslint src --ext ts --fix","update-proposed":"yarn vscode-dts dev && move vscode.proposed.*.d.ts ../../typings/"},"dependencies":{"@vs/liveshare-core":"link:../core","@vs/liveshare-debug":"link:../debugging","@vs/liveshare-lsp":"link:../languageService","@vs/liveshare-reviews":"link:../reviews","@vs/liveshare-notebooks":"link:../notebooks","@vs/liveshare-servers":"link:../servers","@vs/liveshare-communications":"link:../communications","@vs/liveshare-terminals":"link:../terminals","@vs/liveshare-tasks":"link:../tasks","@vs/liveshare-api":"link:../api","@vs/liveshare-accessibility":"link:../accessibility","@vs/liveshare-activities":"link:../activities","@vs/vscode-command-framework":"link:../../vscode-command-framework","@vs/vso-workspace-client":"link:../../workspace/client","@vs/vso-workspace-client-hub":"link:../../workspace/client-hub","@vs/vso-node-utils":"link:../../node/utils","module-alias":"^2.2.2","vscode-jsonrpc":"^4.0.0","vscode-nls":"^4.1.2","speaker":"^0.5.4"},"devDependencies":{"@jest/reporters":"^27.4.6","@types/jest-cli":"^24.3.0","@types/node":"^10.14.8","@types/vscode":"^1.72.0","@types/wav":"^1.0.1","@types/concat-stream":"^1.6.1","@vscode/test-electron":"^2.0.3","copyfiles":"^2.1.1","gulp":"^4.0.2","gulp-typescript":"^5.0.1","jest":"^27.0.3","jest-mock-extended":"^1.0.15","nerdbank-gitversioning":"^3.4.220","terser-webpack-plugin":"^5.3.3","ts-jest":"^27.0.2","vscode-dts":"^0.3.3","webpack":"^5.76.0","webpack-cli":"^4.10.0","source-map-loader":"^4.0.0","node-polyfill-webpack-plugin":"^2.0.0","@types/jest":"^25.2.3","vscode-nls-dev":"^4.0.4","@types/rewire":"^2.5.30","rewire":"^7.0.0","moq.ts":"^6.4.0","gulp-clean":"^0.4.0","gulp-filter":"^6.0.0","gulp-sourcemaps":"^2.6.5","@types/lockfile":"^1.0.0","vsce":"^1.95.0","rimraf":"^3.0.2","json-stable-stringify":"^1.0.1","javascript-obfuscator":"4.1.0","webpack-obfuscator":"^3.5.1"},"_moduleAliases":{"@extension-abstractions":"./src/node","@workspace-abstractions":"../../../node_modules/@vs/liveshare-workspace/dist/src/abstractions/node","@core-abstractions":"../../../node_modules/@vs/liveshare-core/dist/src/abstractions/node","@server-abstractions":"../../../node_modules/@vs/liveshare-servers/dist/src/abstractions/node","@vscode-abstractions":"../../../node_modules/@vs/vscode-command-framework/dist/src/abstractions/node","@api-abstractions":"../../../node_modules/@vs/liveshare-api/dist/src/abstractions/node"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ms-vsliveshare.vsliveshare-1.0.5948","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"5a6dc0d5-dc02-4121-8e24-cad33a2ff0af","publisherId":"74365139-d24d-4d0a-8377-c28643f7a216","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":26496529},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"github.copilot-chat","uuid":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f"},"manifest":{"name":"copilot-chat","displayName":"GitHub Copilot Chat","description":"AI chat features powered by Copilot","version":"0.25.1","build":"1","internalAIKey":"1058ec22-3c95-4951-8443-f26c1f325911","ariaKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","buildType":"prod","publisher":"GitHub","homepage":"https://github.com/features/copilot?editor=vscode","license":"SEE LICENSE IN LICENSE.txt","repository":{"type":"git","url":"https://github.com/microsoft/vscode-copilot-release"},"bugs":{"url":"https://aka.ms/microsoft/vscode-copilot-release"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","engines":{"vscode":"^1.98.0-20240218","npm":">=9.0.0","node":">=20.18.1"},"categories":["AI","Chat","Programming Languages","Machine Learning"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished","onLanguageModelChat:copilot","onUri","onFileSystem:ccreq","onFileSystem:ccsettings"],"main":"./dist/extension","l10n":"./l10n","enabledApiProposals":["extensionsAny","newSymbolNamesProvider","interactive","codeActionAI","activeComment","commentReveal","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","documentFiltersExclusive","embeddings","findTextInFiles","findFiles2","textSearchProvider","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","mappedEditsProvider","aiRelatedInformation","chatParticipantAdditions","chatEditing","defaultChatParticipant","contribSourceControlInputBoxMenu","authLearnMore","testObserver","aiTextSearchProvider","chatParticipantPrivate","chatProvider","contribDebugCreateConfiguration","chatReferenceDiagnostic","chatReadonlyPromptReference","textSearchProvider2","chatReferenceBinaryData","languageModelSystem","languageModelCapabilities","inlineCompletionsAdditions"],"contributes":{"languageModelTools":[{"name":"copilot_searchCodebase","toolReferenceName":"codebase","displayName":"Codebase","icon":"$(folder)","canBeReferencedInPrompt":true,"userDescription":"Reference relevant file chunks, symbols, and other information in your codebase.","modelDescription":"Run a natural language search for relevant code or documentation comments from the user's current workspace. Returns relevant code snippets from the user's current workspace if it is large, or the full contents of the workspace if it is small."},{"name":"copilot_semanticSearch","toolReferenceName":"codebase","displayName":"Codebase","icon":"$(folder)","userDescription":"Reference relevant file chunks, symbols, and other information in your codebase.","modelDescription":"Run a natural language search for relevant code or documentation comments from the user's current workspace. Returns relevant code snippets from the user's current workspace if it is large, or the full contents of the workspace if it is small.","tags":["vscode_editing","codesearch","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search the codebase for. Should contain all relevant context. Should ideally be text that might appear in the codebase, such as function names, variable names, or comments."}},"required":["query"]}},{"name":"copilot_searchWorkspaceSymbols","toolReferenceName":"symbols","displayName":"Workspace Symbols","icon":"$(symbol)","userDescription":"Search for workspace symbols using language services.","modelDescription":"Search the user's workspace for code symbols using language services. Limited to 20 results. Use this tool when the user is looking for a specific symbol in their workspace.","tags":["vscode_codesearch"],"inputSchema":{"type":"object","properties":{"symbolName":{"type":"string","description":"The symbol to search for, such as a function name, class name, or variable name."}},"required":["symbolName"]}},{"name":"copilot_vscodeAPI","toolReferenceName":"vscodeAPI","displayName":"VS Code API","icon":"$(references)","userDescription":"Use VS Code API references to answer questions about VS Code extension development.","modelDescription":"Use VS Code API references to answer questions about VS Code extension development.","inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The query to search vscode documentation for. Should contain all relevant context."}},"required":["query"]},"canBeReferencedInPrompt":true},{"name":"copilot_findFiles","displayName":"Find Files","modelDescription":"Search for files in the workspace by glob pattern. This only returns the paths of matching files. Limited to 20 results. Use this tool when you know the exact filename pattern of the files you're searching for. Glob patterns match from the root of the workspace folder. Examples:\n- **/*.{js,ts} to match all js/ts files in the workspace.\n- src/** to match all files under the top-level src folder.\n- **/foo/**/*.js to match all js files under any foo folder in the workspace.","tags":["vscode_editing","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"Search for files with names or paths matching this query. Can be a glob pattern."}},"required":["query"]}},{"name":"copilot_findTextInFiles","displayName":"Find Text In Files","modelDescription":"Do a text search in the workspace. Limited to 20 results. Use this tool when you know the exact string you're searching for.","tags":["vscode_editing","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"query":{"type":"string","description":"The pattern to search for in files in the workspace. Can be a regex or plain text pattern"},"isRegexp":{"type":"boolean","description":"Whether the pattern is a regex. False by default."},"includePattern":{"type":"string","description":"Search files matching this glob pattern. Will be applied to the relative path of files within the workspace."}},"required":["query"]}},{"name":"copilot_readFile","displayName":"Read File","modelDescription":"Read the contents of a file.\n\nYou must specify the line range you're interested in, and if the file is larger, you will be given an outline of the rest of the file. If the file contents returned are insufficient for your task, you may call this tool again to retrieve more content.","tags":["vscode_editing","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"filePath":{"description":"The absolute path of the file to read.","type":"string"},"startLineNumberBaseZero":{"type":"number","description":"The line number to start reading from, 0-based."},"endLineNumberBaseZero":{"type":"number","description":"The inclusive line number to end reading at, 0-based."}},"required":["filePath","startLineNumberBaseZero","endLineNumberBaseZero"]}},{"name":"copilot_listDirectory","displayName":"List Dir","modelDescription":"List the contents of a directory. Result will have the name of the child. If the name ends in /, it's a folder, otherwise a file","tags":["vscode_editing","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"path":{"type":"string","description":"The absolute path to the directory to list."}},"required":["path"]}},{"name":"copilot_runInTerminal","displayName":"Run In Terminal","modelDescription":"Run a shell command in a terminal. State is persistent across tool calls.\n- Use this tool instead of printing a shell codeblock and asking the user to run it.\n- If the command is a long-running background process, you MUST pass isBackground=true. Background terminals will return a terminal ID which you can use to check the output of a background process with copilot_getTerminalOutput.\n- If a command may use a pager, you must something to disable it. For example, you can use `git --no-pager`. Otherwise you should add something like ` | cat`. Examples: git, less, man, etc.","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"command":{"type":"string","description":"The command to run in the terminal."},"explanation":{"type":"string","description":"A one-sentence description of what the command does. This will be shown to the user before the command is run."},"isBackground":{"type":"boolean","description":"Whether the command starts a background process. If true, the command will run in the background and you will not see the output. If false, the tool call will block on the command finishing, and then you will get the output. Examples of backgrond processes: building in watch mode, starting a server. You can check the output of a backgrond process later on by using copilot_getTerminalOutput."}},"required":["command","explanation","isBackground"]}},{"name":"copilot_getTerminalOutput","displayName":"Get terminal output","modelDescription":"Get the output of a terminal command previous started with copilot_runInTerminal","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"id":{"type":"string","description":"The ID of the terminal command output to check."}},"required":["id"]}},{"name":"copilot_getErrors","displayName":"Get Errors","toolReferenceName":"problems","icon":"$(error)","when":"config.chat.agent.enabled","modelDescription":"Get any compile or lint errors in a code file. If the user mentions errors or problems in a file, they may be referring to these. Use the tool to see the same errors that the user is seeing. Also use this tool after editing a file to validate the change.","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"filePaths":{"type":"array","items":{"type":"string"}}},"required":["filePaths"]}},{"name":"copilot_readProjectStructure","displayName":"Project Structure","modelDescription":"Get a file tree representation of the workspace.","tags":["vscode_codesearch"]},{"name":"copilot_getChangedFiles","displayName":"Git Changes","toolReferenceName":"changes","icon":"$(diff)","canBeReferencedInPrompt":true,"modelDescription":"Get git diffs of current file changes in the active git repository. Don't forget that you can use copilot_runInTerminal to run git commands in a terminal as well.","tags":["vscode_editing","vscode_codesearch"],"inputSchema":{"type":"object","properties":{"repositoryPath":{"type":"string","description":"The absolute path to the git repository to look for changes in."},"sourceControlState":{"type":"array","items":{"type":"string","enum":["staged","unstaged","merge-conflicts"]},"description":"The kinds of git state to filter by. Allowed values are: 'staged', 'unstaged', and 'merge-conflicts'. If not provided, all states will be included."}},"required":["repositoryPath"]}},{"name":"copilot_testFailure","toolReferenceName":"testFailure","displayName":"Test Failure","icon":"$(beaker)","userDescription":"Includes information about the last unit test failure.","modelDescription":"Includes test failure information in the prompt.","inputSchema":{},"tags":["vscode_editing_with_tests","enable_other_tool_copilot_readFile","enable_other_tool_copilot_listDirectory","enable_other_tool_copilot_findFiles","enable_other_tool_copilot_runTests"],"when":"config.chat.agent.enabled","canBeReferencedInPrompt":true},{"name":"copilot_updateUserPreferences","toolReferenceName":"updateUserPreferences","displayName":"Update User Preferences","modelDescription":"Update the user's preferences file with new information about the user and their coding preferences, based on the current chat history.","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"facts":{"type":"array","items":{"type":"string"},"description":"An array of new user preferences to remember."}},"required":["facts"]},"when":"config.github.copilot.chat.enableUserPreferences"},{"name":"copilot_runTests","toolReferenceName":"runTests","displayName":"Run Tests","modelDescription":"Runs tests in workspace.","inputSchema":{"type":"object","properties":{"filter":{"type":"string","description":"Specifies which tests to run, either\n- `all` to run all tests\n- `failed` to run failed tests\n- `last` to re-run the last set of tests","enum":["all","failed","last"]}},"required":["filter"]},"tags":["vscode_editing_with_tests","enable_other_tool_copilot_readFile","enable_other_tool_copilot_listDirectory","enable_other_tool_copilot_findFiles","enable_other_tool_copilot_runTests"],"when":"config.chat.agent.enabled"},{"name":"copilot_getTerminalSelection","toolReferenceName":"terminalSelection","displayName":"Terminal Selection","modelDescription":"Get the user's current selection in the active terminal.","userDescription":"The active terminal's selection","canBeReferencedInPrompt":true,"icon":"$(terminal)"},{"name":"copilot_getTerminalLastCommand","toolReferenceName":"terminalLastCommand","displayName":"Terminal Last Command","modelDescription":"Get the user's current selection in the active terminal.","userDescription":"The active terminal's last run command","canBeReferencedInPrompt":true,"icon":"$(terminal)"},{"name":"copilot_createNewWorkspace","displayName":"Create New Workspace","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","modelDescription":"Get steps to help the user create a new workspace. Use this tool to generate a new project or workspace in VS Code.","tags":["vscode_editing"]},{"name":"copilot_openEmptyFolder","displayName":"Open an empty folder as VS Code workspace","when":"config.github.copilot.chat.newWorkspaceCreation.enabled","modelDescription":"Open an empty folder as VS Code workspace","tags":["vscode_editing"]},{"name":"copilot_runVsCodeTask","displayName":"runVsCodeTask","modelDescription":"Runs a VS Code task.\n\n- If you see that an appropriate task exists for building or running code, prefer to use this tool to run the task instead of using the run_in_terminal tool.\n- Make sure that any appropriate build or watch task is running before trying to run tests or execute code.\n- If the user asks to run a task, use this tool to do so.","inputSchema":{"type":"object","properties":{"workspaceFolder":{"type":"string","description":"The workspace folder path containing the task"},"id":{"type":"string","description":"The task ID to run."}},"required":["workspaceFolder","id"]}},{"name":"copilot_editFile","displayName":"Edit File","modelDescription":"Edit a file in the workspace. Use this tool once per file that needs to be modified, even if there are multiple changes for a file. Generate the \"explanation\" property first.\nThe user is very smart and can understand how to apply your edits to their files, you just need to provide minimal hints.\nAvoid repeating existing code, instead use comments to represent regions of unchanged code. The user prefers that you are as concise as possible. For example:\n// ...existing code...\n{ changed code }\n// ...existing code...\n{ changed code }\n// ...existing code...\n\nHere is an example of how you should use format an edit to an existing Person class:\nclass Person {\n\t// ...existing code...\n\tage: number;\n\t// ...existing code...\n\tgetAge() {\n\treturn this.age;\n\t}\n}","tags":["vscode_editing"],"inputSchema":{"type":"object","properties":{"explanation":{"type":"string","description":"A short explanation of the edit being made. Can be the same as the explanation you showed to the user."},"filePath":{"type":"string","description":"An absolute path to the file to edit, or the URI of a untitled, not yet named, file, such as `untitled:Untitled-1."},"code":{"type":"string","description":"The code change to apply to the file.\nThe user is very smart and can understand how to apply your edits to their files, you just need to provide minimal hints.\nAvoid repeating existing code, instead use comments to represent regions of unchanged code. The user prefers that you are as concise as possible. For example:\n// ...existing code...\n{ changed code }\n// ...existing code...\n{ changed code }\n// ...existing code...\n\nHere is an example of how you should use format an edit to an existing Person class:\nclass Person {\n\t// ...existing code...\n\tage: number;\n\t// ...existing code...\n\tgetAge() {\n\t\treturn this.age;\n\t}\n}"}},"required":["explanation","filePath","code"]}}],"chatParticipants":[{"id":"github.copilot.default","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask Copilot","isDefault":true,"locations":["panel"],"disambiguation":[{"category":"generate_code_sample","description":"The user wants to generate code snippets without referencing the contents of the current workspace. This category does not include generating entire projects.","examples":["Write an example of computing a SHA256 hash."]},{"category":"add_feature_to_file","description":"The user wants to change code in a file that is provided in their request, without referencing the contents of the current workspace. This category does not include generating entire projects.","examples":["Add a refresh button to the table widget."]},{"category":"question_about_specific_files","description":"The user has a question about a specific file or code snippet that they have provided as part of their query, and the question does not require additional workspace context to answer.","examples":["What does this file do?"]}]},{"id":"github.copilot.editingSession","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Edit files in your workspace","isDefault":true,"locations":["editing-session","editor"]},{"id":"github.copilot.editsAgent","name":"agent","fullName":"GitHub Copilot","description":"Edit files in your workspace in agent mode (Experimental)","locations":["editing-session"],"isDefault":true,"isAgent":true,"when":"config.chat.agent.enabled && !chatAgentModeDisallowed && !previewFeaturesDisabled","commands":[{"name":"list","when":"github.copilot.chat.debug"}]},{"id":"github.copilot.editor","name":"Copilot","fullName":"GitHub Copilot","description":"Ask Copilot","isDefault":true,"locations":["editor"],"when":"!config.github.copilot.chat.advanced.inlineChat2","disambiguation":[{"category":"unknown","description":"Intent of this command is unclear or is not related to information technologies","examples":["Add a dog to this comment."]}],"commands":[{"name":"generate","description":"Generate new code","disambiguation":[{"category":"generate","description":"Generate new code","examples":["Add a function that returns the sum of two numbers"]}]},{"name":"edit","description":"Edit the selected code in your active editor","disambiguation":[{"category":"edit","description":"Make changes to existing code","examples":["Change this method to use async/await"]}]},{"name":"doc","description":"Add documentation comment for this symbol","disambiguation":[{"category":"doc","description":"Add documentation comment for this symbol","examples":["Add jsdoc to this method"]}]},{"name":"fix","description":"Propose a fix for the problems in the selected code","disambiguation":[{"category":"fix","description":"Propose a fix for the problems in the selected code","examples":["There is a problem in this code. Rewrite the code to show it with the bug fixed."]}]},{"name":"explain","description":"Explain how the code in your active editor works","disambiguation":[{"category":"explain","description":"Explain how the code in your active editor works","examples":["Write an explanation for the code above as paragraphs of text."]}]},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code","disambiguation":[{"category":"tests","description":"Generate unit tests for the selected code. The user does not want to fix their existing tests.","examples":["Write a set of detailed unit test functions for the code above."]}]},{"name":"fixTestFailure","description":"Propose a fix for the failing test","when":"config.github.copilot.chat.fixTestFailure.enabled && github.copilot.chat.fixTestFailures.hasFailure"}]},{"id":"github.copilot.notebook","name":"GitHubCopilot","fullName":"GitHub Copilot","description":"Ask Copilot","isDefault":true,"locations":["notebook"],"commands":[{"name":"fix","description":"Propose a fix for the problems in the selected code"},{"name":"explain","description":"Explain how the code in your active editor works"}]},{"id":"github.copilot.workspace","name":"workspace","fullName":"Workspace","description":"Ask about your workspace","sampleRequest":"How do I build this project?","locations":["panel"],"disambiguation":[{"category":"workspace_project_questions","description":"The user wants to learn about or update the code or files in their current workspace. Questions in this category may be about understanding what the whole workspace does or locating the implementation of some code. This does not include generating or updating tests.","examples":["What does this project do?"]},{"category":"find_code_in_workspace","description":"The user wants to locate the implementation of some functionality in their current workspace.","examples":["Where is the tree widget implemented?"]},{"category":"generate_with_workspace_context","description":"The user wants to generate code based on multiple files in the workspace and did not specify which files to reference.","examples":["Create a README for this project."]}],"commands":[{"name":"explain","description":"Explain how the code in your active editor works"},{"name":"review","description":"Review the selected code in your active editor","when":"github.copilot.advanced.review.intent"},{"name":"tests","description":"Generate unit tests for the selected code","disambiguation":[{"category":"create_tests","description":"The user wants to generate unit tests.","examples":["Generate tests for my selection using pytest."]}]},{"name":"fix","description":"Propose a fix for the problems in the selected code","sampleRequest":"There is a problem in this code. Rewrite the code to show it with the bug fixed."},{"name":"new","description":"Scaffold code for a new file or project in a workspace","sampleRequest":"Create a RESTful API server using typescript","isSticky":true,"disambiguation":[{"category":"create_new_workspace_or_extension","description":"The user wants to create a complete Visual Studio Code workspace from scratch, such as a new application or a Visual Studio Code extension. Use this category only if the question relates to generating or creating new workspaces in Visual Studio Code. Do not use this category for updating existing code or generating sample code snippets","examples":["Scaffold a Node server.","Create a sample project which uses the fileSystemProvider API.","react application"]}]},{"name":"newNotebook","description":"Create a new Jupyter Notebook","sampleRequest":"How do I create a notebook to load data from a csv file?","disambiguation":[{"category":"create_jupyter_notebook","description":"The user wants to create a new Jupyter notebook in Visual Studio Code.","examples":["Create a notebook to analyze this CSV file."]}]},{"name":"fixTestFailure","description":"Propose a fix for the failing test","when":"config.github.copilot.chat.fixTestFailure.enabled"},{"name":"semanticSearch","description":"Find relevant code to your query","sampleRequest":"Where is the toolbar code?","when":"config.github.copilot.semanticSearch.enabled"},{"name":"setupTests","description":"Set up tests in your project (Experimental)","sampleRequest":"add playwright tests to my project","when":"config.github.copilot.chat.setupTests.enabled","disambiguation":[{"category":"set_up_tests","description":"The user wants to configure project test setup, framework, or test runner. The user does not want to fix their existing tests.","examples":["Set up tests for this project."]}]}]},{"id":"github.copilot.vscode","name":"vscode","fullName":"VS Code","description":"Ask questions about VS Code","sampleRequest":"What is the command to open the integrated terminal?","locations":["panel"],"disambiguation":[{"category":"vscode_configuration_questions","description":"The user wants to learn about, use, or configure the Visual Studio Code. Use this category if the users question is specifically about commands, settings, keybindings, extensions and other features available in Visual Studio Code. Do not use this category to answer questions about generating code or creating new projects including Visual Studio Code extensions.","examples":["Switch to light mode.","Keyboard shortcut to toggle terminal visibility.","Settings to enable minimap.","Whats new in the latest release?"]},{"category":"configure_python_environment","description":"The user wants to set up their Python environment.","examples":["Create a virtual environment for my project."]}],"commands":[{"name":"search","description":"Generate query parameters for workspace search","sampleRequest":"Search for 'foo' in all files under my 'src' directory"},{"name":"startDebugging","description":"Generate launch config and start debugging in VS Code (Experimental)","sampleRequest":"Attach to node app at port 9229","when":"config.github.copilot.chat.startDebugging.enabled"}]},{"id":"github.copilot.terminal","name":"terminal","fullName":"Terminal","description":"Ask how to do something in the terminal","sampleRequest":"How do I view all files within a directory including sub-directories?","isDefault":true,"locations":["terminal"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command"}]},{"id":"github.copilot.terminalPanel","name":"terminal","fullName":"Terminal","description":"Ask how to do something in the terminal","sampleRequest":"How do I view all files within a directory including sub-directories?","locations":["panel"],"commands":[{"name":"explain","description":"Explain something in the terminal","sampleRequest":"Explain the last command","disambiguation":[{"category":"terminal_state_questions","description":"The user wants to learn about specific state such as the selection, command, or failed command in the integrated terminal in Visual Studio Code.","examples":["Why did the latest terminal command fail?"]}]}]}],"languageModels":{"vendor":"copilot"},"interactiveSession":[{"label":"GitHub Copilot","id":"copilot","icon":"","when":"!github.copilot.interactiveSession.disabled"}],"viewsWelcome":[{"view":"debug","when":"github.copilot-chat.activated","contents":"GitHub Copilot Chat can help you start debugging, either based on a [terminal command](command:github.copilot.chat.startCopilotDebugCommand) or with [interactive chat](command:workbench.action.chat.open?%7B%22query%22%3A%22%40vscode%20%2FstartDebugging%20%22%2C%22isPartialQuery%22%3Atrue%7D)."}],"chatViewsWelcome":[{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Sign in with GitHub to use GitHub Copilot, your AI pair programmer.\n\n[Sign in to GitHub.com](command:github.copilotChat.signIn)\n\n[Sign in with a GHE.com account](command:github.copilotChat.signInGHE)\n\nOr explore the [Copilot walkthrough](command:github.copilot.open.walkthrough) to learn more!","when":"config.github.copilot.advanced.authProvider != 'github-enterprise' && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport && !github.copilot.interactiveSession.chatDisabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Sign in with GitHub to use GitHub Copilot, your AI pair programmer.\n\n[Sign in to GHE.com](command:github.copilotChat.signInGHE)\n\n[Sign in with a GitHub.com account](command:github.copilotChat.signIn)\n\nOr explore the [Copilot walkthrough](command:github.copilot.open.walkthrough) to learn more!","when":"config.github.copilot.advanced.authProvider == 'github-enterprise' && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport && !github.copilot.interactiveSession.chatDisabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Get started with GitHub Copilot.\n\n[Start GitHub Copilot Free](https://github.com/github-copilot/signup)\n\nIf you have a different account with a Copilot subscription, you can [sign in to that account](command:github.copilotChat.signInChoose?%22force%22).\n\nOr explore the [Copilot walkthrough](command:github.copilot.open.walkthrough) to learn more!","when":"github.copilot.interactiveSession.individual.disabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Your Copilot subscription has expired.\n\n[Review Copilot Settings](https://github.com/settings/copilot?editor=vscode)","when":"github.copilot.interactiveSession.individual.expired"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"Contact your GitHub organization administrator to enable Copilot.","when":"github.copilot.interactiveSession.enterprise.disabled"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"You are currently offline. Please connect to the internet to use GitHub Copilot.\n\n[Retry Connection](command:github.copilot.refreshToken)","when":"github.copilot.offline"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"There seems to be a problem with your account. Please contact GitHub support.\n\n[Contact Support](https://support.github.com/?editor=vscode)","when":"github.copilot.interactiveSession.contactSupport"},{"icon":"$(copilot-large)","title":"Ask Copilot","content":"GitHub Copilot Chat is currently disabled for your account by an organization administrator. Contact an organization administrator to enable chat.\n\n[Learn More](https://docs.github.com/en/copilot/managing-copilot/managing-github-copilot-in-your-organization/managing-github-copilot-features-in-your-organization/managing-policies-for-copilot-in-your-organization)","when":"github.copilot.interactiveSession.chatDisabled"}],"commands":[{"command":"github.copilotChat.signIn","title":"Sign in to GitHub.com","enablement":"false"},{"command":"github.copilotChat.signInGHE","title":"Sign in to GHE.com","enablement":"false"},{"command":"github.copilotChat.signInChoose","title":"Sign in to...","enablement":"false"},{"command":"github.copilot.chat.explain","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.explain.palette","title":"Explain","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.review","title":"Review and Comment","enablement":"github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.apply","title":"Apply","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.applyAndNext","title":"Apply and Go to Next","icon":"$(sparkle)","enablement":"commentThread =~ /hasSuggestion/","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discard","title":"Discard","icon":"$(close)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discardAndNext","title":"Discard and Go to Next","icon":"$(close)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.discardAll","title":"Discard All","icon":"$(close-all)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.stagedChanges","title":"Copilot Code Review - Staged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.unstagedChanges","title":"Copilot Code Review - Unstaged Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.changes","title":"Copilot Code Review - Uncommitted Changes","icon":"$(code-review)","enablement":"github.copilot.chat.reviewDiff.enabled && !github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.changes.cancel","title":"Copilot Code Review - Cancel","icon":"$(stop-circle)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.previous","title":"Previous Suggestion","icon":"$(arrow-up)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.next","title":"Next Suggestion","icon":"$(arrow-down)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.continueInInlineChat","title":"Discard and Copy to Inline Chat","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.continueInChat","title":"View in Chat Panel","icon":"$(comment-discussion)","category":"GitHub Copilot"},{"command":"github.copilot.chat.review.markHelpful","title":"Helpful","icon":"$(thumbsup)","enablement":"!(commentThread =~ /markedAsHelpful/)","category":"GitHub Copilot"},{"command":"github.copilot.chat.openUserPreferences","title":"Open User Preferences","category":"GitHub Copilot","enablement":"config.github.copilot.chat.enableUserPreferences"},{"command":"github.copilot.chat.review.markUnhelpful","title":"Unhelpful","icon":"$(thumbsdown)","enablement":"!(commentThread =~ /markedAsUnhelpful/)","category":"GitHub Copilot"},{"command":"github.copilot.chat.generate","title":"Generate This","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.generateDocs","title":"Generate Docs","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.generateTests","title":"Generate Tests","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.chat.fix","title":"Fix","enablement":"!github.copilot.interactiveSession.disabled && !editorReadonly","category":"GitHub Copilot"},{"command":"github.copilot.interactiveSession.feedback","title":"Send Chat Feedback","enablement":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled","icon":"$(feedback)","category":"GitHub Copilot"},{"command":"github.copilot.debug.workbenchState","title":"Log Workbench State","category":"Developer"},{"command":"github.copilot.terminal.explainTerminalSelection","title":"Explain Terminal Selection","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","title":"Explain","category":"GitHub Copilot"},{"command":"github.copilot.terminal.explainTerminalLastCommand","title":"Explain Last Terminal Command","category":"GitHub Copilot"},{"command":"github.copilot.terminal.attachTerminalSelection","title":"Add Terminal Selection to Chat","category":"GitHub Copilot"},{"command":"github.copilot.git.generateCommitMessage","title":"Generate Commit Message with Copilot","icon":"$(sparkle)","enablement":"!github.copilot.interactiveSession.disabled","category":"GitHub Copilot"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","title":"Generate Dev Container Configuration with Copilot","category":"GitHub Copilot"},{"command":"github.copilot.tests.fixTestFailure","icon":"$(sparkle)","title":"Fix Test Failure","category":"GitHub Copilot"},{"command":"github.copilot.tests.fixTestFailure.fromInline","icon":"$(sparkle)","title":"Fix Test Failure"},{"command":"github.copilot.chat.attachFile","title":"Add File to Chat","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'"},{"command":"github.copilot.chat.attachSelection","title":"Add Selection to Chat","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'"},{"command":"github.copilot.edits.attachSelection","title":"Add Selection to Copilot Edits","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'"},{"command":"github.copilot.edits.attachFile","title":"Add File to Copilot Edits","icon":"$(comment-discussion)","category":"GitHub Copilot","enablement":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'"},{"command":"github.copilot.debug.collectDiagnostics","title":"GitHub Copilot Chat Diagnostics","category":"Developer"},{"command":"github.copilot.debug.generateSTest","title":"Generate STest From Last Chat Request","enablement":"github.copilot.debugReportFeedback","category":"GitHub Copilot Developer"},{"command":"github.copilot.debug.generateConfiguration","title":"Generate Debug Configuration with GitHub Copilot","category":"GitHub Copilot","enablement":"config.github.copilot.chat.startDebugging.enabled","tags":["experimental"]},{"command":"github.copilot.open.walkthrough","title":"Open Walkthrough","category":"GitHub Copilot"},{"command":"github.copilot.debug.generateInlineEditTests","title":"Generate Inline Edit Tests","category":"GitHub Copilot","enablement":"resourceScheme == 'ccreq'"},{"command":"github.copilot.buildLocalWorkspaceIndex","title":"Build Local Workspace Index","category":"GitHub Copilot","enablement":"github.copilot-chat.activated"},{"command":"github.copilot.buildRemoteWorkspaceIndex","title":"Build Remote Workspace Index","category":"GitHub Copilot","enablement":"github.copilot-chat.activated"},{"command":"github.copilot.report","title":"Report Issue","category":"GitHub Copilot"},{"command":"github.copilot.chat.rerunWithCopilotDebug","title":"Debug Last Terminal Command","category":"GitHub Copilot"},{"command":"github.copilot.chat.startCopilotDebugCommand","title":"Start Copilot Debug"},{"command":"github.copilot.chat.clearTemporalContext","title":"Clear Temporal Context","category":"GitHub Copilot (Developer)"},{"command":"github.copilot.search.markHelpful","title":"Helpful","icon":"$(thumbsup)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.search.markUnhelpful","title":"Unhelpful","icon":"$(thumbsdown)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.search.feedback","title":"Feedback","icon":"$(feedback)","enablement":"!github.copilot.search.feedback.sent"},{"command":"github.copilot.chat.debug.showElements","title":"Show Rendered Elements"},{"command":"github.copilot.chat.debug.hideElements","title":"Hide Rendered Elements"},{"command":"github.copilot.chat.debug.showTools","title":"Show Tools"},{"command":"github.copilot.chat.debug.hideTools","title":"Hide Tools"}],"configuration":[{"title":"GitHub Copilot Chat","id":"stable","properties":{"github.copilot.chat.codeGeneration.useInstructionFiles":{"type":"boolean","default":true,"markdownDescription":"Controls whether code instructions from `.github/copilot-instructions.md` are added to Copilot requests.\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance. [Learn more](https://aka.ms/github-copilot-custom-instructions) about customizing Copilot."},"github.copilot.editor.enableCodeActions":{"type":"boolean","default":true,"description":"Controls if Copilot commands are shown as Code Actions when available"},"github.copilot.renameSuggestions.triggerAutomatically":{"type":"boolean","default":true,"description":"Controls whether Copilot generates suggestions for renaming"},"github.copilot.chat.localeOverride":{"type":"string","enum":["auto","en","fr","it","de","es","ru","zh-CN","zh-TW","ja","ko","cs","pt-br","tr","pl"],"enumDescriptions":["Use VS Code's configured display language","English","français","italiano","Deutsch","español","русский","中文(简体)","中文(繁體)","日本語","한국어","čeština","português","Türkçe","polski"],"default":"auto","markdownDescription":"Specify a locale that Copilot should respond in, e.g. `en` or `fr`. By default, Copilot will respond using VS Code's configured display language locale."},"github.copilot.chat.terminalChatLocation":{"type":"string","default":"chatView","markdownDescription":"Controls where chat queries from the terminal should be opened.","markdownEnumDescriptions":["Open the chat view.","Open quick chat.","Open terminal inline chat"],"enum":["chatView","quickChat","terminal"]},"github.copilot.chat.scopeSelection":{"type":"boolean","default":false,"markdownDescription":"Whether to prompt the user to select a specific symbol scope if the user uses `/explain` and the active editor has no selection."},"github.copilot.chat.followUps":{"type":"string","default":"firstOnly","enum":["always","firstOnly","never"],"markdownDescription":"Whether to suggest follow-up messages in the chat.","markdownEnumDescriptions":["On every chat response","Only on the first response","Disables follow-up suggestions"]},"github.copilot.chat.useProjectTemplates":{"type":"boolean","default":true,"markdownDescription":"Use relevant GitHub projects as starter projects when using `/new`"},"github.copilot.chat.fixTestFailure.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/fixTestFailure` intent in chat and delegates certain `/fix` invocations automatically."},"github.copilot.chat.agent.runTasks":{"type":"boolean","default":true,"description":"Configures whether Copilot Edits can run workspace tasks in agent mode."}}},{"title":"Preview","id":"preview","properties":{"github.copilot.chat.startDebugging.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/startDebugging` intent in panel chat. Generates or finds launch config to match the query (if any), project structure, and more.","tags":["preview"]},"github.copilot.chat.reviewSelection.enabled":{"type":"boolean","default":true,"description":"Enables code review on current selection.","tags":["preview"]},"github.copilot.chat.reviewSelection.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-review-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-review-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that provide code review for the current selection. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Resolve all TODO tasks."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that provide code review for the current selection.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's effectiveness.","examples":[[{"file":".copilot-review-instructions.md"},{"text":"Resolve all TODO tasks."}]],"tags":["preview"]},"github.copilot.chat.copilotDebugCommand.enabled":{"type":"boolean","default":true,"tags":["preview"],"description":"Whether the `copilot-debug` command is enabled in the terminal."},"github.copilot.chat.codesearch.enabled":{"type":"boolean","default":false,"tags":["preview"],"markdownDescription":"Whether to enable agentic codesearch when using `#codebase`."},"github.copilot.chat.edits.codesearch.enabled":{"tags":["preview"],"markdownDeprecationMessage":"This setting is deprecated in favor of `#github.copilot.chat.codesearch.enabled#`."},"github.copilot.nextEditSuggestions.enabled":{"type":"boolean","default":false,"tags":["preview","nextEditSuggestions"],"description":"Whether to enable Next Edit Suggestions (NES).","scope":"language-overridable"}}},{"title":"Experimental","id":"experimental","properties":{"github.copilot.chat.edits.suggestRelatedFilesFromGitHistory":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest related files from git history for the Copilot Edits working set."},"github.copilot.chat.edits.suggestRelatedFilesForTests":{"type":"boolean","default":true,"tags":["experimental"],"markdownDescription":"Whether to suggest source files from test files for the Copilot Edits working set."},"github.copilot.chat.codeGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-codeGeneration-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-codeGeneration-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate code. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use underscore for field names."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Use underscore for field names."},{"text":"Always add a comment: 'Generated by Copilot'."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate code.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-codeGeneration-instructions.md"},{"text":"Always add a comment: 'Generated by Copilot'."}]],"tags":["experimental"]},"github.copilot.chat.testGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"file":{"type":"string","examples":[".copilot-test-instructions.md"]},"language":{"type":"string"}},"examples":[{"file":".copilot-test-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"A text instruction that will be added to Copilot requests that generate tests. Optionally, you can specify a language for the instruction.","properties":{"text":{"type":"string","examples":["Use suite and test instead of describe and it."]},"language":{"type":"string"}},"required":["text"],"examples":[{"text":"Always try uniting related tests in a suite."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate tests.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use underscore for field names.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-test-instructions.md"},{"text":"Always try uniting related tests in a suite."}]],"tags":["experimental"]},"github.copilot.chat.commitMessageGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file with instructions that will be added to Copilot requests that generate commit messages.","properties":{"file":{"type":"string","examples":[".copilot-commit-message-instructions.md"]}},"examples":[{"file":".copilot-commit-message-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"Text instructions that will be added to Copilot requests that generate commit messages.","properties":{"text":{"type":"string","examples":["Use conventional commit message format."]}},"required":["text"],"examples":[{"text":"Use conventional commit message format."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate commit messages.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Use conventional commit message format.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-commit-message-instructions.md"},{"text":"Use conventional commit message format."}]],"tags":["experimental"]},"github.copilot.chat.pullRequestDescriptionGeneration.instructions":{"type":"array","items":{"oneOf":[{"type":"object","markdownDescription":"A path to a file with instructions that will be added to Copilot requests that generate pull request titles and descriptions.","properties":{"file":{"type":"string","examples":[".copilot-pull-request-description-instructions.md"]}},"examples":[{"file":".copilot-pull-request-description-instructions.md"}],"required":["file"]},{"type":"object","markdownDescription":"Text instructions that will be added to Copilot requests that generate pull request titles and descriptions.","properties":{"text":{"type":"string","examples":["Include every commit message in the pull request description."]}},"required":["text"],"examples":[{"text":"Include every commit message in the pull request description."}]}]},"default":[],"markdownDescription":"A set of instructions that will be added to Copilot requests that generate pull request titles and descriptions.\nInstructions can come from: \n- a file in the workspace: `{ \"file\": \"fileName\" }`\n- text in natural language: `{ \"text\": \"Always include a list of key changes.\" }`\n\nNote: Keep your instructions short and precise. Poor instructions can degrade Copilot's quality and performance.","examples":[[{"file":".copilot-pull-request-description-instructions.md"},{"text":"Use conventional commit message format."}]],"tags":["experimental"]},"github.copilot.chat.generateTests.codeLens":{"type":"boolean","default":false,"description":"Show 'Generate tests' code lens for symbols that are not covered by current test coverage information.","tags":["experimental"]},"github.copilot.chat.edits.temporalContext.enabled":{"type":"boolean","default":false,"description":"When making edits request whether to include recently viewed and edited files with Copilot requests.","tags":["experimental"]},"github.copilot.chat.editor.temporalContext.enabled":{"type":"boolean","default":false,"description":"When making inline chat request whether to include recently viewed and edited files with Copilot requests.","tags":["experimental"]},"github.copilot.chat.setupTests.enabled":{"type":"boolean","default":true,"markdownDescription":"Enables the `/setupTests` intent and prompting in `/tests` generation.","tags":["experimental"]},"github.copilot.chat.search.semanticTextResults":{"type":"boolean","description":"Enables semantic search results in the search view. Disabling this setting requires reloading the window for the change to take effect.","tags":["experimental"]},"github.copilot.chat.completionContext.typescript.mode":{"type":"string","scope":"resource","enum":["off","sidecar","on"],"tags":["experimental"],"markdownDescription":"The execution mode of the TypeScript Copilot context provider."},"github.copilot.chat.languageContext.typescript.enabled":{"type":"boolean","default":false,"scope":"resource","tags":["experimental","onExP"],"markdownDescription":"Enable the TypeScript language context provider (e.g. inline chat and inline completions)"},"github.copilot.chat.newWorkspaceCreation.enabled":{"type":"boolean","default":false,"tags":["experimental"],"description":"Whether to enable new agentic workspace creation."}}}],"submenus":[{"id":"copilot","label":"Copilot"},{"id":"explorer/copilot","label":"Copilot"},{"id":"terminal/copilot","label":"Copilot"},{"id":"copilot/reviewComment/additionalActions/applyAndNext","label":"Apply and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discardAndNext","label":"Discard and Go to Next"},{"id":"copilot/reviewComment/additionalActions/discard","label":"Discard"},{"id":"github.copilot.chat.debug.filter","label":"Filter","icon":"$(filter)"}],"menus":{"explorer/context":[{"submenu":"explorer/copilot","group":"5_copilot@0","when":"!github.copilot.interactiveSession.disabled"}],"editor/context":[{"submenu":"copilot","when":"!github.copilot.interactiveSession.disabled","group":"1_copilot@0"}],"editor/title":[{"command":"github.copilot.debug.generateInlineEditTests","when":"resourceScheme == 'ccreq'"}],"explorer/copilot":[{"command":"github.copilot.chat.attachFile","when":"!explorerResourceIsFolder && (resourceScheme == 'file' || resourceScheme =='vscode-remote')","group":"chat@1"},{"command":"github.copilot.edits.attachFile","when":"!explorerResourceIsFolder && (resourceScheme == 'file' || resourceScheme =='vscode-remote')","group":"chat@2"}],"copilot":[{"command":"github.copilot.chat.attachFile","when":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'","group":"zContext@2"},{"command":"github.copilot.chat.attachSelection","when":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'","group":"zContext@1"},{"command":"github.copilot.edits.attachSelection","when":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'","group":"zEditContext@1"},{"command":"github.copilot.edits.attachFile","when":"resourceScheme == 'file' || resourceScheme =='vscode-remote' || resourceScheme == 'untitled' || resourceScheme == 'vscode-userdata'","group":"zEditContext@2"},{"command":"inlineChat.start","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilot@1"},{"command":"github.copilot.chat.explain","when":"!github.copilot.interactiveSession.disabled","group":"copilotAction@1"},{"command":"github.copilot.chat.fix","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@2"},{"command":"github.copilot.chat.review","when":"github.copilot.chat.reviewSelection.enabled && !github.copilot.interactiveSession.disabled","group":"copilotAction@3"},{"command":"github.copilot.chat.generateDocs","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@4"},{"command":"github.copilot.chat.generateTests","when":"!github.copilot.interactiveSession.disabled && !editorReadonly","group":"copilotAction@5"}],"terminal/context":[{"submenu":"terminal/copilot","when":"!github.copilot.interactiveSession.disabled","group":"2_copilot@0"}],"terminal/copilot":[{"command":"workbench.action.terminal.chat.start","group":"copilot@1"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","group":"copilotAction@1"},{"command":"github.copilot.terminal.attachTerminalSelection","group":"zEditContext@1"}],"testing/item/result":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated && config.github.copilot.chat.fixTestFailure.enabled","group":"inline@2"}],"testing/item/context":[{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"testResultState == failed && !testResultOutdated && config.github.copilot.chat.fixTestFailure.enabled","group":"inline@2"}],"commandPalette":[{"command":"github.copilot.interactiveSession.feedback","when":"github.copilot-chat.activated && !github.copilot.interactiveSession.disabled"},{"command":"github.copilot.debug.workbenchState","when":"true"},{"command":"github.copilot.chat.rerunWithCopilotDebug","when":"false"},{"command":"github.copilot.chat.startCopilotDebugCommand","when":"false"},{"command":"github.copilot.terminal.explainTerminalSelectionContextMenu","when":"false"},{"command":"github.copilot.git.generateCommitMessage","when":"false"},{"command":"github.copilot.chat.explain","when":"false"},{"command":"github.copilot.chat.review","when":"!github.copilot.interactiveSession.disabled"},{"command":"github.copilot.chat.review.apply","when":"false"},{"command":"github.copilot.chat.review.applyAndNext","when":"false"},{"command":"github.copilot.chat.review.discard","when":"false"},{"command":"github.copilot.chat.review.discardAndNext","when":"false"},{"command":"github.copilot.chat.review.discardAll","when":"false"},{"command":"github.copilot.chat.review.stagedChanges","when":"false"},{"command":"github.copilot.chat.review.unstagedChanges","when":"false"},{"command":"github.copilot.chat.review.changes","when":"false"},{"command":"github.copilot.chat.review.changes.cancel","when":"false"},{"command":"github.copilot.chat.review.previous","when":"false"},{"command":"github.copilot.chat.review.next","when":"false"},{"command":"github.copilot.chat.review.continueInInlineChat","when":"false"},{"command":"github.copilot.chat.review.continueInChat","when":"false"},{"command":"github.copilot.chat.review.markHelpful","when":"false"},{"command":"github.copilot.chat.review.markUnhelpful","when":"false"},{"command":"github.copilot.devcontainer.generateDevContainerConfig","when":"false"},{"command":"github.copilot.tests.fixTestFailure","when":"false"},{"command":"github.copilot.tests.fixTestFailure.fromInline","when":"false"},{"command":"github.copilot.search.markHelpful","when":"false"},{"command":"github.copilot.search.markUnhelpful","when":"false"},{"command":"github.copilot.search.feedback","when":"false"},{"command":"github.copilot.chat.debug.showElements","when":"false"},{"command":"github.copilot.chat.debug.hideElements","when":"false"},{"command":"github.copilot.chat.debug.showTools","when":"false"},{"command":"github.copilot.chat.debug.hideTools","when":"false"}],"view/title":[{"command":"github.copilot.interactiveSession.feedback","when":"view == workbench.panel.chat.view.copilot"},{"submenu":"github.copilot.chat.debug.filter","when":"view == copilot-chat","group":"navigation"}],"searchPanel/aiResults/commands":[{"command":"github.copilot.search.markHelpful","group":"inline@0","when":"aiResultsTitle && aiResultsRequested"},{"command":"github.copilot.search.markUnhelpful","group":"inline@1","when":"aiResultsTitle && aiResultsRequested"},{"command":"github.copilot.search.feedback","group":"inline@2","when":"aiResultsTitle && aiResultsRequested && github.copilot.debugReportFeedback"}],"comments/comment/title":[{"command":"github.copilot.chat.review.markHelpful","group":"inline@0","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.markUnhelpful","group":"inline@1","when":"commentController == github-copilot-review"}],"commentsView/commentThread/context":[{"command":"github.copilot.chat.review.apply","group":"context@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"context@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"context@3","when":"commentController == github-copilot-review"}],"comments/commentThread/additionalActions":[{"submenu":"copilot/reviewComment/additionalActions/applyAndNext","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"command":"github.copilot.chat.review.apply","group":"inline@1","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"},{"submenu":"copilot/reviewComment/additionalActions/discardAndNext","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments > 1"},{"submenu":"copilot/reviewComment/additionalActions/discard","group":"inline@2","when":"commentController == github-copilot-review && github.copilot.chat.review.numberOfComments == 1"}],"copilot/reviewComment/additionalActions/applyAndNext":[{"command":"github.copilot.chat.review.applyAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.apply","group":"inline@2","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discardAndNext":[{"command":"github.copilot.chat.review.discardAndNext","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"copilot/reviewComment/additionalActions/discard":[{"command":"github.copilot.chat.review.discard","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInInlineChat","group":"inline@3","when":"commentController == github-copilot-review"}],"comments/commentThread/title":[{"command":"github.copilot.chat.review.previous","group":"inline@1","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.next","group":"inline@2","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.continueInChat","group":"inline@3","when":"commentController == github-copilot-review"},{"command":"github.copilot.chat.review.discardAll","group":"inline@4","when":"commentController == github-copilot-review"}],"scm/title":[{"command":"github.copilot.chat.review.changes","group":"navigation","when":"github.copilot.chat.reviewDiff.enabled && !github.copilot.chat.review.sourceControlProgress && scmProvider == git && scmProviderRootUri in github.copilot.chat.reviewDiff.enabledRootUris"},{"command":"github.copilot.chat.review.changes.cancel","group":"navigation","when":"github.copilot.chat.reviewDiff.enabled && github.copilot.chat.review.sourceControlProgress && scmProvider == git && scmProviderRootUri in github.copilot.chat.reviewDiff.enabledRootUris"}],"scm/inputBox":[{"command":"github.copilot.git.generateCommitMessage","when":"scmProvider == git"}],"testing/message/context":[{"command":"github.copilot.tests.fixTestFailure","when":"testing.testItemHasUri && config.github.copilot.chat.fixTestFailure.enabled","group":"inline@1"}],"debug/createConfiguration":[{"command":"github.copilot.debug.generateConfiguration","group":"z_commands","when":"config.github.copilot.chat.startDebugging.enabled"}],"issue/reporter":[{"command":"github.copilot.report"}],"github.copilot.chat.debug.filter":[{"command":"github.copilot.chat.debug.showElements","when":"github.copilot.chat.debug.elementsHidden","group":"commands@0"},{"command":"github.copilot.chat.debug.hideElements","when":"!github.copilot.chat.debug.elementsHidden","group":"commands@0"},{"command":"github.copilot.chat.debug.showTools","when":"github.copilot.chat.debug.toolsHidden","group":"commands@1"},{"command":"github.copilot.chat.debug.hideTools","when":"!github.copilot.chat.debug.toolsHidden","group":"commands@1"}]},"icons":{"copilot-logo":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0041"}},"copilot-warning":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0042"}},"copilot-notconnected":{"description":"GitHub Copilot icon","default":{"fontPath":"assets/copilot.woff","fontCharacter":"\\0043"}}},"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}],"terminalQuickFixes":[{"id":"copilot-chat.fixWithCopilot","commandLineMatcher":".+","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0},"kind":"explain"},{"id":"copilot-chat.generateCommitMessage","commandLineMatcher":"git add .+","commandExitResult":"success","kind":"explain","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":".+","offset":0}},{"id":"copilot-chat.terminalToDebugging","commandLineMatcher":".+","kind":"explain","commandExitResult":"error","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}},{"id":"copilot-chat.terminalToDebuggingSuccess","commandLineMatcher":".+","kind":"explain","commandExitResult":"success","outputMatcher":{"anchor":"bottom","length":1,"lineMatcher":"","offset":0}}],"languages":[{"id":"ignore","filenamePatterns":[".copilotignore"],"aliases":[]},{"id":"markdown","extensions":[".copilotmd"]}],"views":{"copilot-chat":[{"id":"copilot-chat","name":"Copilot Chat Debug","icon":"assets/debug-icon.svg","when":"github.copilot.chat.debug"}]},"viewsContainers":{"activitybar":[{"id":"copilot-chat","title":"Copilot Chat Debug","icon":"assets/debug-icon.svg","when":"github.copilot.chat.debug"}]},"configurationDefaults":{"workbench.editorAssociations":{"*.copilotmd":"vscode.markdown.preview.editor"}},"keybindings":[{"command":"github.copilot.chat.rerunWithCopilotDebug","key":"ctrl+alt+.","mac":"cmd+alt+.","when":"github.copilot-chat.activated && terminalShellIntegrationEnabled && terminalFocus && !terminalAltBufferActive"}],"walkthroughs":[{"id":"copilotWelcome","title":"GitHub Copilot","description":"Your AI pair programmer to write code faster and smarter","when":"!isWeb","steps":[{"id":"copilot.setup.signIn","title":"Sign in to use Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Get Started for Free](command:workbench.action.chat.triggerSetup)","when":"chatSetupSignedOut && !view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-hclight.mp4"},"altText":"Copilot Chat view in the sidebar"}},{"id":"copilot.setup.signInNoAction","title":"Sign in to use Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.","when":"chatSetupSignedOut && view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && !github.copilot.interactiveSession.individual.disabled && !github.copilot.interactiveSession.individual.expired && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-hclight.mp4"},"altText":"Copilot Chat view in the sidebar"}},{"id":"copilot.setup.signUp","title":"Get started with Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.\n\n[Get Started for Free](command:workbench.action.chat.triggerSetup)","when":"chatPlanCanSignUp && !view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && (github.copilot.interactiveSession.individual.disabled || github.copilot.interactiveSession.individual.expired) && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-hclight.mp4"},"altText":"Copilot Chat view in the sidebar"}},{"id":"copilot.setup.signUpNoAction","title":"Get started with Copilot for free","description":"You can use Copilot to generate code across multiple files, fix errors, ask questions about your code and much more using natural language.\n We now offer [Copilot for free](https://github.com/features/copilot/plans) with your GitHub account.","when":"chatPlanCanSignUp && view.workbench.panel.chat.view.copilot.visible && !github.copilot-chat.activated && !github.copilot.offline && (github.copilot.interactiveSession.individual.disabled || github.copilot.interactiveSession.individual.expired) && !github.copilot.interactiveSession.enterprise.disabled && !github.copilot.interactiveSession.contactSupport","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-hclight.mp4"},"altText":"Copilot Chat view in the sidebar"}},{"id":"copilot.panelChat","title":"Chat about your code","description":"Ask Copilot programming questions or get help with your code using **@workspace**.\n Type **@** to see all available chat participants that you can chat with directly, each with their own expertise.\n[Chat with Copilot](command:workbench.action.chat.open)","when":"!chatSetupSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/workspace-hclight.mp4"},"altText":"Copilot Chat view in the sidebar"}},{"id":"copilot.edits","title":"Make changes using natural language","description":"Use **Copilot Edits** to select files you want to work with and describe changes you want to make. Copilot applies them directly to your files.\n[Edit with Copilot](command:workbench.action.chat.openEditSession)","when":"!chatSetupSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/edits.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/edits-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/edits-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/edits-hclight.mp4"},"altText":"Copilot Edits view in the sidebar"}},{"id":"copilot.firstSuggest","title":"AI-suggested code completions","description":"As you type in the editor, Copilot suggests code to help you complete what you started.","when":"!chatSetupSignedOut || chatIsEnabled ","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/ghost-text.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/ghost-text-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/ghost-text-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/ghost-text-hclight.mp4"},"altText":"Different types of Copilot suggestions in the editor"}},{"id":"copilot.inlineChatNotMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Ctrl+I``** to open **Inline Chat**.","when":"!isMac && (!chatSetupSignedOut || chatIsEnabled )","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/inline.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/inline-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/inline-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/inline-hclight.mp4"},"altText":"Inline Chat view in the editor"}},{"id":"copilot.inlineChatMac","title":"Use natural language in your files","description":"Sometimes, it's easier to describe the code you want to write directly within a file.\nPlace your cursor or make a selection and use **``Cmd+I``** to open **Inline Chat**.","when":"isMac && (!chatSetupSignedOut || chatIsEnabled )","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/inline.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/inline-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/inline-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/inline-hclight.mp4"},"altText":"Inline Chat view in the editor"}},{"id":"copilot.sparkle","title":"Look out for smart actions","description":"Copilot enhances your coding experience with AI-powered smart actions throughout the VS Code interface.\nLook for $(sparkle) icons, such as in the [Source Control view](command:workbench.view.scm), where Copilot generates commit messages and PR descriptions based on code changes.\n\n[Discover Tips and Tricks](https://code.visualstudio.com/docs/copilot/copilot-vscode-features)","when":"!chatSetupSignedOut || chatIsEnabled","media":{"video":{"dark":"https://vscodewalkthroughs.z1.web.core.windows.net/git-commit.mp4","light":"https://vscodewalkthroughs.z1.web.core.windows.net/git-commit-light.mp4","hc":"https://vscodewalkthroughs.z1.web.core.windows.net/git-commit-hc.mp4","hcLight":"https://vscodewalkthroughs.z1.web.core.windows.net/git-commit-hclight.mp4"},"altText":"Sparkle icon in various places in VS Code"}}]}],"jsonValidation":[{"fileMatch":"settings.json","url":"ccsettings://root/schema.json"}],"typescriptServerPlugins":[{"name":"@vscode/copilot-typescript-server-plugin","enableForWorkspaceTypeScriptVersions":true}]},"extensionPack":["GitHub.copilot"],"overrides":{"@aminya/node-gyp-build":"npm:node-gyp-build@4.8.1","string_decoder":"npm:string_decoder@1.2.0"},"isPreRelease":false,"originalEnabledApiProposals":["extensionsAny","newSymbolNamesProvider","interactive","codeActionAI","activeComment","commentReveal","contribCommentThreadAdditionalMenu","contribCommentsViewThreadMenus","documentFiltersExclusive","embeddings","findTextInFiles","findFiles2@2","textSearchProvider","terminalDataWriteEvent","terminalExecuteCommandEvent","terminalSelection","terminalQuickFixProvider","mappedEditsProvider","aiRelatedInformation","chatParticipantAdditions","chatEditing","defaultChatParticipant@2","contribSourceControlInputBoxMenu","authLearnMore","testObserver","aiTextSearchProvider@2","chatParticipantPrivate@5","chatProvider","contribDebugCreateConfiguration","chatReferenceDiagnostic","chatReadonlyPromptReference","textSearchProvider2","chatReferenceBinaryData","languageModelSystem","languageModelCapabilities","inlineCompletionsAdditions"]},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/github.copilot-chat-0.25.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitHub","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"7ec7d6e6-b89e-4cc5-a59b-d6c4d238246f","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":33779336},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.debugpy","uuid":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615"},"manifest":{"name":"debugpy","displayName":"Python Debugger","description":"Python Debugger extension using debugpy.","version":"2025.4.1","publisher":"ms-python","enabledApiProposals":["portsAttributes","debugVisualization","contribViewsWelcome"],"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python-debugger","repository":{"type":"git","url":"https://github.com/microsoft/vscode-python-debugger.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-python-debugger/issues"},"icon":"icon.png","keywords":["python","debugger","debugpy"],"engines":{"vscode":"^1.92.0"},"categories":["Debuggers"],"activationEvents":["onDebugInitialConfigurations","onDebugDynamicConfigurations:debugpy","onDebugResolve:debugpy","onLanguage:python"],"main":"./dist/extension.js","l10n":"./l10n","contributes":{"commands":[{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json"},{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue..."}],"menus":{"issue/reporter":[{"command":"debugpy.reportIssue"}],"commandPalette":[{"category":"Python Debugger","command":"debugpy.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python Debugger","command":"debugpy.debugInTerminal","icon":"$(debug-alt)","title":"Python Debugger: Debug Python File","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.debugUsingLaunchConfig","icon":"$(debug-alt)","title":"Python Debugger: Debug using launch.json","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python Debugger","command":"debugpy.viewOutput","title":"Show Output"},{"category":"Python Debugger","command":"debugpy.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/title/run":[{"command":"debugpy.debugInTerminal","title":"Python Debugger: Debug Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"debugpy.debugUsingLaunchConfig","title":"Python Debugger: Debug using launch.json","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}]},"configuration":{"properties":{"debugpy.debugJustMyCode":{"default":true,"description":"When debugging only step through user-written code. Disable this to allow stepping into library code.","scope":"resource","type":"boolean"},"debugpy.showPythonInlineValues":{"default":false,"description":"Whether to display inline values in the editor while debugging.","scope":"resource","type":"boolean","tags":["experimental"]}},"title":"Python Debugger","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":["number","string"]}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":["number","string"]}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program. For string type arguments, it will pass through the shell as is, and therefore all shell variable expansions will apply. But for the array type, the values will be shell-escaped.","items":{"type":"string"},"anyOf":[{"default":"${command:pickArgs}","enum":["${command:pickArgs}"]},{"type":["array","string"]}]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the Python debug adapter executable.","type":"string"},"autoStartBrowser":{"default":false,"description":"Open external browser to launch the application","type":"boolean"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file. This file can be found in the debugpy extension install folder.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications.","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging.","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"},"guiEventLoop":{"default":"matplotlib","description":"The GUI event loop that's going to run. Possible values: \"matplotlib\", \"wx\", \"qt\", \"none\", or a custom function that'll be imported and run.","type":"string"},"consoleName":{"default":"Python Debug Console","description":"Display name of the debug console or terminal","type":"string"},"clientOS":{"default":null,"description":"OS that VS code is using.","enum":["windows",null,"unix"]}}}},"configurationSnippets":[],"label":"Python Debugger","languages":["python"],"type":"debugpy","variables":{"pickProcess":"debugpy.pickLocalProcess","pickArgs":"debugpy.pickArgs"},"when":"!virtualWorkspace && shellExecutionSupported"}],"debugVisualizers":[{"id":"inlineHexDecoder","when":"debugConfigurationType == 'debugpy' && (variableType == 'float' || variableType == 'int')"}],"viewsWelcome":[{"view":"debug","contents":"\n[Show automatic Python configurations](command:workbench.action.debug.selectandstart?%5B%22debugpy%22%5D)\n","when":"dynamicPythonConfigAvailable && !virtualWorkspace"}]},"extensionDependencies":["ms-python.python"],"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.yml' '.github/**/*.yml'","test":"node ./out/test/runTest.js","vsce-package":"npx @vscode/vsce package -o python-debugger.vsix"},"devDependencies":{"@types/chai":"^4.3.4","@types/chai-as-promised":"^7.1.8","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.191","@types/mocha":"^10.0.7","@types/node":"18.x","@types/semver":"^7.3.13","@types/sinon":"^10.0.13","@types/vscode":"^1.87.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","@vscode/test-electron":"^2.3.9","@vscode/vsce":"^2.24.0","chai":"^4.3.7","chai-as-promised":"^7.1.1","eslint":"^8.50.0","glob":"^8.0.3","mocha":"^10.7.0","prettier":"^3.0.3","semver":"^7.5.4","sinon":"^15.0.2","ts-loader":"^9.3.1","ts-mockito":"^2.6.1","typemoq":"^2.1.0","typescript":"^5.5.4","webpack":"^5.87.0","webpack-cli":"^5.1.4"},"dependencies":{"@vscode/debugadapter":"^1.65.0","@vscode/debugprotocol":"^1.65.0","@vscode/extension-telemetry":"^0.8.5","@vscode/python-extension":"^1.0.5","fs-extra":"^11.2.0","iconv-lite":"^0.6.3","jsonc-parser":"^3.2.0","lodash":"^4.17.21","vscode-languageclient":"^8.0.2"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ms-python.debugpy-2025.4.1-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"4bd5d2c9-9d65-401a-b0b2-7498d9f17615","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":38210698},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.python","uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5"},"manifest":{"name":"python","displayName":"Python","description":"Python language support with extension access points for IntelliSense (Pylance), Debugging (Python Debugger), linting, formatting, refactoring, unit tests, and more.","version":"2025.2.0","featureFlags":{"usingNewInterpreterStorage":true},"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense with Pylance is supported. Cannot execute Python with untrusted files."},"virtualWorkspaces":{"supported":"limited","description":"Only Partial IntelliSense supported."}},"publisher":"ms-python","enabledApiProposals":["contribEditorContentMenu","quickPickSortByLabel","testObserver","quickPickItemTooltip","terminalDataWriteEvent","terminalExecuteCommandEvent","codeActionAI","notebookReplDocument","notebookVariableProvider"],"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://github.com/microsoft/vscode-python/discussions/categories/q-a","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.94.0-20240918"},"enableTelemetry":true,"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Other","Data Science","Machine Learning"],"activationEvents":["onDebugInitialConfigurations","onLanguage:python","onDebugResolve:python","onCommand:python.copilotSetupTests","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","workspaceContains:Pipfile","workspaceContains:setup.py","workspaceContains:requirements.txt","workspaceContains:manage.py","workspaceContains:app.py","workspaceContains:.venv","workspaceContains:.conda"],"main":"./out/client/extension","browser":"./dist/extension.browser.js","l10n":"./l10n","contributes":{"problemMatchers":[{"name":"python","owner":"python","source":"python","fileLocation":"autoDetect","pattern":[{"regexp":"^.*File \\\"([^\\\"]|.*)\\\", line (\\d+).*","file":1,"line":2},{"regexp":"^\\s*(.*)\\s*$"},{"regexp":"^\\s*(.*Error.*)$","message":1}]}],"walkthroughs":[{"id":"pythonWelcome","title":"Get Started with Python Development","description":"Your first steps to set up a Python project with all the powerful tools and features that the Python extension has to offer!","when":"workspacePlatform != webworker","steps":[{"id":"python.createPythonFolder","title":"Open a Python project folder","description":"[Open](command:workbench.action.files.openFolder) or create a project folder.\n[Open Project Folder](command:workbench.action.files.openFolder)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."},"when":"workspaceFolderCount = 0"},{"id":"python.createPythonFile","title":"Create a Python file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D) a Python file - make sure to save it as \".py\".\n[Create Python File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22python%22%7D)","media":{"svg":"resources/walkthrough/open-folder.svg","altText":"Open a Python file or a folder with a Python project."}},{"id":"python.installPythonWin8","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python [from python.org](https://www.python.org/downloads).\n\n[Install Python](https://www.python.org/downloads)\n","media":{"markdown":"resources/walkthrough/install-python-windows-8.md"},"when":"workspacePlatform == windows && showInstallPythonTile"},{"id":"python.installPythonMac","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via Brew](command:python.installPythonOnMac)\n","media":{"markdown":"resources/walkthrough/install-python-macos.md"},"when":"workspacePlatform == mac && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.installPythonLinux","title":"Install Python","description":"The Python Extension requires Python to be installed. Install Python 3 through the terminal.\n[Install Python via terminal](command:python.installPythonOnLinux)\n","media":{"markdown":"resources/walkthrough/install-python-linux.md"},"when":"workspacePlatform == linux && showInstallPythonTile","command":"workbench.action.terminal.new"},{"id":"python.createEnvironment","title":"Select or create a Python environment","description":"Create an environment for your Python project or use [Select Python Interpreter](command:python.setInterpreter) to select an existing one.\n[Create Environment](command:python.createEnvironment)\n**Tip**: Run the ``Python: Create Environment`` command in the [Command Palette](command:workbench.action.showCommands).","media":{"svg":"resources/walkthrough/create-environment.svg","altText":"Creating a Python environment from the Command Palette"}},{"id":"python.runAndDebug","title":"Run and debug your Python file","description":"Open your Python file  and click on the play button on the top right of the editor, or press F5 when on the file and select \"Python File\" to run with the debugger. \n  \n[Learn more](https://code.visualstudio.com/docs/python/python-tutorial#_run-hello-world)","media":{"svg":"resources/walkthrough/rundebug2.svg","altText":"How to run and debug in VS Code with F5 or the play button on the top right."}},{"id":"python.learnMoreWithDS","title":"Keep exploring!","description":"🎨 Explore all the features the Python extension has to offer by looking for \"Python\" in the [Command Palette](command:workbench.action.showCommands). \n 📈 Learn more about getting started with [data science](command:workbench.action.openWalkthrough?%7B%22category%22%3A%22ms-python.python%23pythonDataScienceWelcome%22%2C%22step%22%3A%22ms-python.python%23python.createNewNotebook%22%7D) in Python. \n ✨ Take a look at our [Release Notes](https://aka.ms/AA8dxtb) to learn more about the latest features. \n \n[Follow along with the Python Tutorial](https://aka.ms/AA8dqti)","media":{"altText":"Image representing our documentation page and mailing list resources.","svg":"resources/walkthrough/learnmore.svg"}}]},{"id":"pythonDataScienceWelcome","title":"Get Started with Python for Data Science","description":"Your first steps to getting started with a Data Science project with Python!","when":"false","steps":[{"id":"python.installJupyterExt","title":"Install Jupyter extension","description":"If you haven't already, install the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") to take full advantage of notebooks experiences in VS Code!\n \n[Search Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\")","media":{"svg":"resources/walkthrough/data-science.svg","altText":"Creating a new Jupyter notebook"}},{"id":"python.createNewNotebook","title":"Create or open a Jupyter Notebook","description":"Right click in the file explorer and create a new file with an .ipynb extension. Or, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create New Blank Notebook``.\n[Create new Jupyter Notebook](command:toSide:jupyter.createnewnotebook)\n If you have an existing project, you can also [open a folder](command:workbench.action.files.openFolder) and/or clone a project from GitHub: [clone a Git repository](command:git.clone).","media":{"svg":"resources/walkthrough/create-notebook.svg","altText":"Creating a new Jupyter notebook"},"completionEvents":["onCommand:jupyter.createnewnotebook","onCommand:workbench.action.files.openFolder","onCommand:workbench.action.files.openFileFolder"]},{"id":"python.openInteractiveWindow","title":"Open the Python Interactive Window","description":"The Python Interactive Window is a Python shell where you can execute and view the results of your Python code. You can create cells on a Python file by typing ``#%%``.\n \nTo open the interactive window anytime, open the [Command Palette](command:workbench.action.showCommands) and run the command \n``Jupyter: Create Interactive Window``.\n[Open Interactive Window](command:jupyter.createnewinteractive)","media":{"svg":"resources/walkthrough/interactive-window.svg","altText":"Opening Python interactive window"},"completionEvents":["onCommand:jupyter.createnewinteractive"]},{"id":"python.dataScienceLearnMore","title":"Find out more!","description":"📒 Take a look into the [Jupyter extension](command:workbench.extensions.search?\"ms-toolsai.jupyter\") features, by looking for \"Jupyter\" in the [Command Palette](command:workbench.action.showCommands). \n 🏃🏻 Find out more features in our [Tutorials](https://aka.ms/AAdjzpd).  \n[Learn more](https://aka.ms/AAdar6q)","media":{"svg":"resources/walkthrough/learnmore.svg","altText":"Image representing our documentation page and mailing list resources."}}]}],"breakpoints":[{"language":"html"},{"language":"jinja"},{"language":"python"},{"language":"django-html"},{"language":"django-txt"}],"commands":[{"title":"New Python File","shortTitle":"Python File","category":"Python","command":"python.createNewFile"},{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting"},{"category":"Python","command":"python.configureTests","title":"Configure Tests"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment..."},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment..."},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL"},{"category":"Python","command":"python.reportIssue","title":"Report Issue..."},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output"},{"category":"Python","command":"python.viewOutput","icon":{"dark":"resources/dark/repl.svg","light":"resources/light/repl.svg"},"title":"Show Output"},{"category":"Python","command":"python.installJupyter","title":"Install the Jupyter extension"}],"configuration":{"properties":{"python.activeStateToolPath":{"default":"state","description":"Path to the State Tool executable for ActiveState runtimes (version 0.36+).","scope":"machine-overridable","type":"string"},"python.autoComplete.extraPaths":{"default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource","type":"array","uniqueItems":true},"python.createEnvironment.contentButton":{"default":"hide","markdownDescription":"Show or hide Create Environment button in the editor for `requirements.txt` or other dependency files.","scope":"machine-overridable","type":"string","enum":["show","hide"]},"python.createEnvironment.trigger":{"default":"prompt","markdownDescription":"Detect if environment creation is required for the current project","scope":"machine-overridable","type":"string","enum":["off","prompt"]},"python.condaPath":{"default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"machine","type":"string"},"python.defaultInterpreterPath":{"default":"python","markdownDescription":"Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See [here](https://aka.ms/AAfekmf) to understand when this is used","scope":"machine-overridable","type":"string"},"python.envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","scope":"resource","type":"string"},"python.experiments.enabled":{"default":true,"description":"Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.","scope":"window","type":"boolean"},"python.experiments.optInto":{"default":[],"markdownDescription":"List of experiments to opt into. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.experiments.optOutFrom":{"default":[],"markdownDescription":"List of experiments to opt out of. If empty, user is assigned the default experiment groups. See [here](https://github.com/microsoft/vscode-python/wiki/AB-Experiments) for more details.","items":{"enum":["All","pythonSurveyNotification","pythonPromptNewToolsExt","pythonTerminalEnvVarActivation","pythonDiscoveryUsingWorkers","pythonTestAdapter","pythonREPLSmartSend"],"enumDescriptions":["Combined list of all experiments.","Denotes the Python Survey Notification experiment.","Denotes the Python Prompt New Tools Extension experiment.","Enables use of environment variables to activate terminals instead of sending activation commands.","Enables use of worker threads to do heavy computation when discovering interpreters.","Denotes the Python Test Adapter experiment.","Denotes the Python REPL Smart Send experiment."]},"scope":"window","type":"array","uniqueItems":true},"python.globalModuleInstallation":{"default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource","type":"boolean"},"python.languageServer":{"default":"Default","description":"Defines type of the language server.","enum":["Default","Jedi","Pylance","None"],"enumDescriptions":["Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.","Use Jedi behind the Language Server Protocol (LSP) as a language server.","Use Pylance as a language server.","Disable language server capabilities."],"scope":"window","type":"string"},"python.interpreter.infoVisibility":{"default":"onPythonRelated","description":"Controls when to display information of selected interpreter in the status bar.","enum":["never","onPythonRelated","always"],"enumDescriptions":["Never display information.","Only display information if Python-related files are opened.","Always display information."],"scope":"machine","type":"string"},"python.logging.level":{"default":"error","deprecationMessage":"This setting is deprecated. Please use command `Developer: Set Log Level...` to set logging level.","description":"The logging level the extension logs at, defaults to 'error'","enum":["debug","error","info","off","warn"],"scope":"machine","type":"string"},"python.missingPackage.severity":{"default":"Hint","description":"Set severity of missing packages in requirements.txt or pyproject.toml","enum":["Error","Hint","Information","Warning"],"scope":"resource","type":"string"},"python.locator":{"default":"js","description":"[Experimental] Select implementation of environment locators. This is an experimental setting while we test native environment location.","enum":["js","native"],"tags":["onExP","preview"],"scope":"machine","type":"string"},"python.pipenvPath":{"default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"machine-overridable","type":"string"},"python.poetryPath":{"default":"poetry","description":"Path to the poetry executable.","scope":"machine-overridable","type":"string"},"python.pixiToolPath":{"default":"pixi","description":"Path to the pixi executable.","scope":"machine-overridable","type":"string"},"python.terminal.activateEnvInCurrentTerminal":{"default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource","type":"boolean"},"python.terminal.activateEnvironment":{"default":true,"description":"Activate Python Environment in all Terminals created.","scope":"resource","type":"boolean"},"python.terminal.executeInFileDir":{"default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource","type":"boolean"},"python.terminal.focusAfterLaunch":{"default":false,"description":"When launching a python terminal, whether to focus the cursor on the terminal.","scope":"resource","type":"boolean"},"python.terminal.launchArgs":{"default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource","type":"array"},"python.terminal.shellIntegration.enabled":{"default":false,"markdownDescription":"Enable [shell integration](https://code.visualstudio.com/docs/terminal/shell-integration) for the terminals running python. Shell integration enhances the terminal experience by enabling command decorations, run recent command, improving accessibility among other things.","scope":"resource","type":"boolean","tags":["preview"]},"python.REPL.enableREPLSmartSend":{"default":true,"description":"Toggle Smart Send for the Python REPL. Smart Send enables sending the smallest runnable block of code to the REPL on Shift+Enter and moves the cursor accordingly.","scope":"resource","type":"boolean"},"python.REPL.sendToNativeREPL":{"default":false,"description":"Toggle to send code to Python REPL instead of the terminal on execution. Turning this on will change the behavior for both Smart Send and Run Selection/Line in the Context Menu.","scope":"resource","type":"boolean","tags":["onExP","preview"]},"python.REPL.provideVariables":{"default":true,"description":"Toggle to provide variables for the REPL variable view for the native REPL.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSaveEnabled":{"default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource","type":"boolean"},"python.testing.autoTestDiscoverOnSavePattern":{"default":"**/*.py","description":"Glob pattern used to determine which files are used by autoTestDiscoverOnSaveEnabled.","scope":"resource","type":"string"},"python.testing.cwd":{"default":null,"description":"Optional working directory for tests.","scope":"resource","type":"string"},"python.testing.debugPort":{"default":3000,"description":"Port number used for debugging of tests.","scope":"resource","type":"number"},"python.testing.promptToConfigure":{"default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource","type":"boolean"},"python.testing.pytestArgs":{"default":[],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.pytestEnabled":{"default":false,"description":"Enable testing using pytest.","scope":"resource","type":"boolean"},"python.testing.pytestPath":{"default":"pytest","description":"Path to pytest. You can use a custom version of pytest by modifying this setting to include the full path.","scope":"machine-overridable","type":"string"},"python.testing.unittestArgs":{"default":["-v","-s",".","-p","*test*.py"],"description":"Arguments passed in. Each argument is a separate item in the array.","items":{"type":"string"},"scope":"resource","type":"array"},"python.testing.unittestEnabled":{"default":false,"description":"Enable testing using unittest.","scope":"resource","type":"boolean"},"python.venvFolders":{"default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","items":{"type":"string"},"scope":"machine","type":"array","uniqueItems":true},"python.venvPath":{"default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"machine","type":"string"}},"title":"Python","type":"object"},"debuggers":[{"configurationAttributes":{"attach":{"properties":{"connect":{"label":"Attach by connecting to debugpy over a socket.","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"port":{"description":"Port to connect to.","type":"number"}},"required":["port"],"type":"object"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"host":{"default":"127.0.0.1","description":"Hostname or IP address to connect to.","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"If true, show and debug only user-written code. If false, show and debug all code, including library calls.","type":"boolean"},"listen":{"label":"Attach by listening for incoming socket connection from debugpy","properties":{"host":{"default":"127.0.0.1","description":"Hostname or IP address of the interface to listen on.","type":"string"},"port":{"description":"Port to listen on.","type":"number"}},"required":["port"],"type":"object"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"description":"Port to connect to.","type":"number"},"processId":{"anyOf":[{"default":"${command:pickProcess}","description":"Use process picker to select a process to attach, or Process ID as integer.","enum":["${command:pickProcess}"]},{"description":"ID of the local process to attach to.","type":"integer"}]},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"}}},"launch":{"properties":{"args":{"default":[],"description":"Command line arguments passed to the program.","items":{"type":"string"},"type":["array","string"]},"autoReload":{"default":{},"description":"Configures automatic reload of code on edit.","properties":{"enable":{"default":false,"description":"Automatically reload code on edit.","type":"boolean"},"exclude":{"default":["**/.git/**","**/.metadata/**","**/__pycache__/**","**/node_modules/**","**/site-packages/**"],"description":"Glob patterns of paths to exclude from auto reload.","items":{"type":"string"},"type":"array"},"include":{"default":["**/*.py","**/*.pyw"],"description":"Glob patterns of paths to include in auto reload.","items":{"type":"string"},"type":"array"}},"type":"object"},"console":{"default":"integratedTerminal","description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","enum":["externalTerminal","integratedTerminal","internalConsole"]},"consoleTitle":{"default":"Python Debug Console","description":"Display name of the debug console or terminal"},"cwd":{"default":"${workspaceFolder}","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","type":"string"},"debugAdapterPath":{"description":"Path (fully qualified) to the python debug adapter executable.","type":"string"},"django":{"default":false,"description":"Django debugging.","type":"boolean"},"env":{"additionalProperties":{"type":"string"},"default":{},"description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","type":"object"},"envFile":{"default":"${workspaceFolder}/.env","description":"Absolute path to a file containing environment variable definitions.","type":"string"},"gevent":{"default":false,"description":"Enable debugging of gevent monkey-patched code.","type":"boolean"},"host":{"default":"localhost","description":"IP address of the of the local debug server (default is localhost).","type":"string"},"jinja":{"default":null,"description":"Jinja template debugging (e.g. Flask).","enum":[false,null,true]},"justMyCode":{"default":true,"description":"Debug only user-written code.","type":"boolean"},"logToFile":{"default":false,"description":"Enable logging of debugger events to a log file.","type":"boolean"},"module":{"default":"","description":"Name of the module to be debugged.","type":"string"},"pathMappings":{"default":[],"items":{"label":"Path mapping","properties":{"localRoot":{"default":"${workspaceFolder}","label":"Local source root.","type":"string"},"remoteRoot":{"default":"","label":"Remote source root.","type":"string"}},"required":["localRoot","remoteRoot"],"type":"object"},"label":"Path mappings.","type":"array"},"port":{"default":0,"description":"Debug port (default is 0, resulting in the use of a dynamic port).","type":"number"},"program":{"default":"${file}","description":"Absolute path to the program.","type":"string"},"purpose":{"default":[],"description":"Tells extension to use this configuration for test debugging, or when using debug-in-terminal command.","items":{"enum":["debug-test","debug-in-terminal"],"enumDescriptions":["Use this configuration while debugging tests using test view or test debug commands.","Use this configuration while debugging a file using debug in terminal button in the editor."]},"type":"array"},"pyramid":{"default":false,"description":"Whether debugging Pyramid applications","type":"boolean"},"python":{"default":"${command:python.interpreterPath}","description":"Absolute path to the Python interpreter executable; overrides workspace configuration if set.","type":"string"},"pythonArgs":{"default":[],"description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","items":{"type":"string"},"type":"array"},"redirectOutput":{"default":true,"description":"Redirect output.","type":"boolean"},"showReturnValue":{"default":true,"description":"Show return value of functions when stepping.","type":"boolean"},"stopOnEntry":{"default":false,"description":"Automatically stop after launch.","type":"boolean"},"subProcess":{"default":false,"description":"Whether to enable Sub Process debugging","type":"boolean"},"sudo":{"default":false,"description":"Running debug program under elevated permissions (on Unix).","type":"boolean"}}}},"deprecated":"This configuration will be deprecated soon. Please replace `python` with `debugpy` to use the new Python Debugger extension.","configurationSnippets":[],"label":"Python","languages":["python"],"type":"python","variables":{"pickProcess":"python.pickLocalProcess"},"when":"!virtualWorkspace && shellExecutionSupported","hiddenWhen":"true"}],"grammars":[{"language":"pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json","scopeName":"source.pip-requirements"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPL","key":"shift+enter","when":"config.python.REPL.sendToNativeREPL && editorLangId == python && editorTextFocus && !jupyter.ownsSelection && !notebookEditorFocused && !isCompositeNotebook"},{"command":"python.execInREPLEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.repl' && !inlineChatFocused && !notebookCellListFocused"},{"command":"python.execInInteractiveWindowEnter","key":"enter","when":"!config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive' && !inlineChatFocused && !notebookCellListFocused"}],"languages":[{"aliases":["Jinja"],"extensions":[".j2",".jinja2"],"id":"jinja"},{"aliases":["pip requirements","requirements.txt"],"configuration":"./languages/pip-requirements.json","filenamePatterns":["**/*requirements*.{txt, in}","**/*constraints*.txt","**/requirements/*.{txt,in}","**/constraints/*.txt"],"filenames":["constraints.txt","requirements.in","requirements.txt"],"id":"pip-requirements"},{"filenames":[".condarc"],"id":"yaml"},{"filenames":[".flake8",".pep8",".pylintrc",".pypirc"],"id":"ini"},{"filenames":["Pipfile","poetry.lock","uv.lock"],"id":"toml"},{"filenames":["Pipfile.lock"],"id":"json"}],"menus":{"issue/reporter":[{"command":"python.reportIssue"}],"commandPalette":[{"category":"Python","command":"python.analysis.restartLanguageServer","title":"Restart Language Server","when":"!virtualWorkspace && shellExecutionSupported && (editorLangId == python || notebookType == jupyter-notebook)"},{"category":"Python","command":"python.clearCacheAndReload","title":"Clear Cache and Reload Window","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.configureTests","title":"Configure Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment","title":"Create Environment...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.createEnvironment-button","title":"Create Environment...","when":"false"},{"category":"Python","command":"python.createTerminal","title":"Create Terminal","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.execInTerminal","title":"Run Python File in Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInTerminal-icon","icon":"$(play)","title":"Run Python File","when":"false"},{"category":"Python","command":"python.execInDedicatedTerminal","icon":"$(play)","title":"Run Python File in Dedicated Terminal","when":"false"},{"category":"Python","command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","when":"!virtualWorkspace && shellExecutionSupported && editorLangId == python"},{"category":"Python","command":"python.execInREPL","title":"Run Selection/Line in Native Python REPL","when":"false"},{"category":"Python","command":"python.reportIssue","title":"Report Issue...","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Test","command":"testing.reRunFailTests","icon":"$(run-errors)","title":"Rerun Failed Tests","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.setInterpreter","title":"Select Interpreter","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startREPL","title":"Start Terminal REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.startNativeREPL","title":"Start Native Python REPL","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewLanguageServerOutput","enablement":"python.hasLanguageServerOutputChannel","title":"Show Language Server Output","when":"!virtualWorkspace && shellExecutionSupported"},{"category":"Python","command":"python.viewOutput","title":"Show Output","when":"!virtualWorkspace && shellExecutionSupported"}],"editor/content":[{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceLangId == pip-requirements && !virtualWorkspace && shellExecutionSupported && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"},{"group":"Python","command":"python.createEnvironment-button","when":"showCreateEnvButton && resourceFilename == pyproject.toml && pipInstallableToml && !virtualWorkspace && shellExecutionSupported  && !inDiffEditor && !isMergeResultEditor && pythonDepsNotInstalled"}],"editor/context":[{"submenu":"python.run","group":"Python","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && isWorkspaceTrusted && !inChat  && notebookType != jupyter-notebook"},{"submenu":"python.runFileInteractive","group":"Jupyter2","when":"editorLangId == python && !virtualWorkspace && shellExecutionSupported && !isJupyterInstalled && isWorkspaceTrusted && !inChat"}],"python.runFileInteractive":[{"command":"python.installJupyter","group":"Jupyter2","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"python.run":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execSelectionInTerminal","group":"Python","when":"!config.python.REPL.sendToNativeREPL && editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInREPL","group":"Python","when":"editorFocus && editorLangId == python && !virtualWorkspace && shellExecutionSupported && config.python.REPL.sendToNativeREPL"}],"editor/title/run":[{"command":"python.execInTerminal-icon","group":"navigation@0","title":"Run Python File","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"},{"command":"python.execInDedicatedTerminal","group":"navigation@0","title":"Run Python File in Dedicated Terminal","when":"resourceLangId == python && !isInDiffEditor && !virtualWorkspace && shellExecutionSupported"}],"explorer/context":[{"command":"python.execInTerminal","group":"Python","when":"resourceLangId == python && !virtualWorkspace && shellExecutionSupported"}],"file/newFile":[{"command":"python.createNewFile","group":"file","when":"!virtualWorkspace"}],"view/title":[{"command":"testing.reRunFailTests","when":"view == workbench.view.testing && hasFailedTests && !virtualWorkspace && shellExecutionSupported","group":"navigation@1"}]},"submenus":[{"id":"python.run","label":"Run Python","icon":"$(play)"},{"id":"python.runFileInteractive","label":"Run in Interactive window"}],"viewsWelcome":[{"view":"testing","contents":"Configure a test framework to see your tests here.\n[Configure Python Tests](command:python.configureTests)","when":"!virtualWorkspace && shellExecutionSupported"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"copilot":{"tests":{"getSetupConfirmation":"python.copilotSetupTests"}},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","prePublish":"gulp clean && gulp prePublishNonBundle","compile":"tsc -watch -p ./","compileApi":"node ./node_modules/typescript/lib/tsc.js -b ./pythonExtensionApi/tsconfig.json","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","checkDependencies":"gulp checkDependencies","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.json","test:unittests:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --config ./build/.mocha.unittests.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"nyc --no-clean --nycrc-path ./build/.nycrc mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:cover:report":"nyc --nycrc-path ./build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testDebugger:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","testSingleWorkspace:cover":"nyc --no-clean --use-spawn-wrap --nycrc-path ./build/.nycrc --require source-map-support/register node ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"cross-env INSTALL_JUPYTER_EXTENSION=true \"node ./out/test/smokeTest.js\"","testInsiders":"cross-env VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders INSTALL_PYLANCE_EXTENSION=true TEST_FILES_SUFFIX=insiders.test CODE_TESTS_WORKSPACE=src/testMultiRootWkspc/smokeTests \"node ./out/test/standardTest.js\"","lint-staged":"node gulpfile.js","lint":"eslint --ext .ts,.js src build pythonExtensionApi","lint-fix":"eslint --fix --ext .ts,.js src build pythonExtensionApi gulpfile.js","format-check":"prettier --check 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","format-fix":"prettier --write 'src/**/*.ts' 'build/**/*.js' '.github/**/*.yml' gulpfile.js","clean":"gulp clean","addExtensionPackDependencies":"gulp addExtensionPackDependencies","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@iarna/toml":"^2.2.5","@vscode/extension-telemetry":"^0.8.4","arch":"^2.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","iconv-lite":"^0.6.3","inversify":"^6.0.2","jsonc-parser":"^3.0.0","lodash":"^4.17.21","minimatch":"^5.0.1","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","reflect-metadata":"^0.1.12","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","semver":"^7.5.2","stack-trace":"0.0.10","sudo-prompt":"^9.2.1","tmp":"^0.0.33","uint64be":"^3.0.0","unicode":"^14.0.0","vscode-debugprotocol":"^1.28.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-tas-client":"^0.1.84","which":"^2.0.2","winreg":"^1.2.4","xml2js":"^0.5.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"^1.0.2","@types/bent":"^7.3.0","@types/chai":"^4.1.2","@types/chai-arrays":"^2.0.0","@types/chai-as-promised":"^7.1.0","@types/download":"^8.0.1","@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/lodash":"^4.14.104","@types/mocha":"^9.1.0","@types/node":"^22.5.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^17.0.3","@types/stack-trace":"0.0.29","@types/tmp":"^0.0.33","@types/vscode":"^1.93.0","@types/which":"^2.0.1","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^6.21.0","@typescript-eslint/parser":"^6.21.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^2.27.0","bent":"^7.3.12","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","copy-webpack-plugin":"^9.1.0","cross-env":"^7.0.3","cross-spawn":"^6.0.5","del":"^6.0.0","download":"^8.0.0","eslint":"^7.2.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.29.1","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-no-only-tests":"^3.3.0","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","expose-loader":"^3.1.0","flat":"^5.0.2","get-port":"^5.1.1","gulp":"^5.0.0","gulp-typescript":"^5.0.0","mocha":"^11.1.0","mocha-junit-reporter":"^2.0.2","mocha-multi-reporters":"^1.1.7","node-has-native-dependencies":"^1.0.2","node-loader":"^1.0.2","node-polyfill-webpack-plugin":"^1.1.4","nyc":"^15.0.0","prettier":"^2.0.2","rewiremock":"^3.13.0","shortid":"^2.2.8","sinon":"^18.0.0","source-map-support":"^0.5.12","ts-loader":"^9.2.8","ts-mockito":"^2.5.0","ts-node":"^10.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","typemoq":"^2.1.0","typescript":"~5.2","uuid":"^8.3.2","webpack":"^5.76.0","webpack-bundle-analyzer":"^4.5.0","webpack-cli":"^4.9.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^5.8.0","webpack-node-externals":"^3.0.0","webpack-require-from":"^1.8.6","worker-loader":"^3.0.8","yargs":"^15.3.1"},"extensionPack":["ms-python.vscode-pylance","ms-python.debugpy"]},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ms-python.python-2025.2.0-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":41570629},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-python.vscode-pylance","uuid":"364d2426-116a-433a-a5d8-a5098dc3afbd"},"manifest":{"name":"vscode-pylance","displayName":"Pylance","description":"A performant, feature-rich language server for Python in VS Code","version":"2025.3.2","license":"SEE LICENSE IN LICENSE.txt","author":{"name":"Microsoft Corporation"},"publisher":"ms-python","private":true,"bugs":{"url":"https://github.com/microsoft/pylance-release/issues"},"repository":{"type":"git","url":"https://github.com/microsoft/pylance-release"},"engines":{"vscode":"^1.91.0"},"keywords":["python"],"categories":["Programming Languages"],"icon":"images/icon.png","main":"./dist/extension.bundle.js","browser":"./dist/browser.extension.bundle.js","activationEvents":["onLanguage:python","workspaceContains:pyrightconfig.json"],"extensionDependencies":["ms-python.python"],"capabilities":{"untrustedWorkspaces":{"supported":"limited","description":"Python will not be executed; the latest Python version will be used for analysis and installed libraries will not be available.","restrictedConfigurations":["python.analysis.nodeExecutable"]},"virtualWorkspaces":{"supported":"limited","description":"Analysis is limited to opened files."}},"contributes":{"commands":[{"command":"pylance.reportIssue","title":"Pylance: Report Issue..."},{"command":"pylance.indexing.clearPersistedIndices","title":"Pylance: Clear All Persisted Indices"},{"command":"pylance.profiling.start","title":"Pylance: Start Profiling"},{"command":"pylance.profiling.stop","title":"Pylance: Stop Profiling"},{"command":"pylance.logging.start","title":"Pylance: Start Logging"},{"command":"pylance.logging.stop","title":"Pylance: Stop Logging"},{"command":"pylance.gotoOutputChannel","title":"Pylance: Go to output channel"},{"command":"pylance.runCurrentFileInSandbox","title":"Pylance: Run current file in sandbox","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTokens","title":"Dump token streams ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","title":"Dump parse tree ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","title":"Dump type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","title":"Pylance: Dump cached type info ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","title":"Pylance: Dump code flow graph for node ...","category":"Pylance debugging","enablement":"editorLangId == python && config.pyright.development"},{"command":"pylance.learnMoreAboutImportResolution","title":"Learn more about import resolution","enablement":"false"},{"command":"pylance.foldDocstrings","title":"Pylance: Fold All Docstrings"},{"command":"pylance.unfoldDocstrings","title":"Pylance: Unfold All Docstrings"}],"menus":{"commandPalette":[{"command":"pylance.reportIssue"},{"command":"pylance.indexing.clearPersistedIndices","when":"!isWeb"},{"command":"pylance.profiling.start","when":"!isWeb"},{"command":"pylance.profiling.stop","when":"!isWeb"},{"command":"pylance.logging.start","when":"!isWeb"},{"command":"pylance.logging.stop","when":"!isWeb"},{"command":"pylance.runCurrentFileInSandbox","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTokens","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpNodes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCachedTypes","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.dumpCodeFlowGraph","when":"editorLangId == python && config.pyright.development"},{"command":"pylance.foldDocstrings","when":"!isWeb"},{"command":"pylance.unfoldDocstrings","when":"!isWeb"}]},"configurationDefaults":{"[python]":{"editor.formatOnType":true,"editor.wordBasedSuggestions":"off"}},"configuration":{"type":"object","title":"Pylance","properties":{"python.analysis.inlayHints.variableTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for variable types. Hints are not displayed for assignments of literals or constants:\n```python\nfoo':list[str]' = [\"a\"]\n \n```\n","scope":"resource"},"python.analysis.inlayHints.functionReturnTypes":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for function return types:\n```python\ndef foo(x:int) '-> int':\n\treturn x\n```\n","scope":"resource"},"python.analysis.inlayHints.callArgumentNames":{"type":"string","default":"off","markdownDescription":"Enable/disable inlay hints for call argument names:\n```python\ndatetime('year='2019, 'month='10, 'day='27)\n```\n","enum":["off","partial","all"],"enumDescriptions":["Disable inlay hints for call argument names.","Enable inlay hints for positional-or-keyword arguments while ignoring positional-only and keyword-only.","Enable inlay hints for positional-or-keyword and positional-only arguments while ignoring keyword-only."],"scope":"resource"},"python.analysis.inlayHints.pytestParameters":{"type":"boolean","default":false,"markdownDescription":"Enable/disable inlay hints for pytest function parameter types:\n```python\ndef test_foo(my_fixture: 'str'):\n\tassert(my_fixture == 'foo')\n```\n","scope":"resource"},"python.analysis.completeFunctionParens":{"type":"boolean","default":false,"markdownDescription":"Add parentheses to function completions.","scope":"resource"},"python.analysis.autoImportCompletions":{"type":"boolean","default":false,"markdownDescription":"Enable auto-import completions.","scope":"resource"},"python.analysis.showOnlyDirectDependenciesInAutoImport":{"type":"boolean","default":false,"markdownDescription":"Show only direct dependencies declared in `requirements.txt` or `pyproject.toml` in `auto import` suggestions, if they exist. This only affects `auto import` for completions. The `add import` code action will continue to show all possible imports.","scope":"resource"},"python.analysis.autoFormatStrings":{"type":"boolean","default":false,"markdownDescription":"When typing a `{` in a string, automatically prefix the string with an `f`.","scope":"window"},"python.analysis.autoSearchPaths":{"type":"boolean","default":true,"markdownDescription":"Automatically add common search paths like `src`.","scope":"resource"},"python.analysis.stubPath":{"type":"string","default":"typings","markdownDescription":"Path to directory containing custom type stub files.","scope":"resource"},"python.analysis.diagnosticMode":{"type":"string","default":"openFilesOnly","markdownDescription":"Analysis scope for showing diagnostics.","enum":["openFilesOnly","workspace"],"enumDescriptions":["Analyzes and reports errors on only open files.","Analyzes and reports errors on all files in the workspace."],"scope":"resource"},"python.analysis.extraPaths":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Additional import search resolution paths","scope":"resource"},"python.analysis.include":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths of directories or files that should be included. If no paths are specified, Pylance defaults to the workspace root directory. \n\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \n\nIf the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.exclude":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths of directories or files that should not be included. These override the include directories, allowing specific subdirectories to be excluded. \n\nNote that files in the exclude paths may still be included in the analysis if they are referenced (imported) by source files that are not excluded. \n\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \n\nIf no exclude paths are specified, Pylance automatically excludes the following: `**/node_modules`, `**/__pycache__`, `.git` and any virtual environment directories. If the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.ignore":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths of directories or files whose diagnostic output (errors and warnings) should be suppressed even if they are an included file or within the transitive closure of an included file. \n\nPaths may contain wildcard characters `**` (a directory or multiple levels of directories), `*` (a sequence of zero or more characters), or `?` (a single character). \n\nIf the path contains a `${workspaceFolder:<workspaceName>}` variable, the glob pattern will only apply to the corresponding workspace in a multi-root workspace environment.","scope":"resource"},"python.analysis.indexing":{"type":"boolean","default":true,"markdownDescription":"Enable indexing of installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.","scope":"resource"},"python.analysis.userFileIndexingLimit":{"type":"number","default":2000,"markdownDescription":"Maximum number of user files to index in the workspace. Indexing files is a performance-intensive task. Please use this setting to limit the number of files you want us to index. If you enter -1, we will index all files.","scope":"resource"},"python.analysis.persistAllIndices":{"type":"boolean","default":true,"markdownDescription":"Indices for all third party libraries will be persisted to disk.","scope":"resource"},"python.analysis.includeAliasesFromUserFiles":{"type":"boolean","default":false,"markdownDescription":"Include alias symbols from user files. This will make alias symbols to show up in features such as `add import`, `auto import`","scope":"resource"},"python.analysis.extraCommitChars":{"type":"boolean","default":false,"markdownDescription":"Allow using '.', '(' as commit characters when applicable.","scope":"resource"},"python.analysis.useLibraryCodeForTypes":{"type":"boolean","default":true,"markdownDescription":"Use library implementations to extract type information when type stub is not present.","scope":"resource"},"python.analysis.autoIndent":{"type":"boolean","default":true,"markdownDescription":"Automatically adjust indentation based on language semantics when typing Python code.","scope":"window"},"python.analysis.typeCheckingMode":{"type":"string","default":"off","enum":["off","basic","standard","strict"],"markdownDescription":"Type checking modes Basic, Standard, and Strict :\n\n| Feature                                  | Basic | Standard | Strict |\n|------------------------------------------|:-----:|:--------:|:------:|\n| Variable type mismatches                 |   ✅   |    ✅     |   ✅   |\n| Function return type checks              |   ✅   |    ✅     |   ✅   |\n| Type narrowing enforcement               |       |    ✅     |   ✅   |\n| Checking of `Any` type                   |       |    ✅     |   ✅   |\n| Private/protected access checks          |       |    ✅     |   ✅   |\n| Enforces stricter generics usage         |       |    ✅     |   ✅   |\n| Reports missing type annotations         |       |          |   ✅   |\n| Disallows `Any` type usage               |       |          |   ✅   |\n| Requires strict type compatibility       |       |          |   ✅   |\n| Enforces complete type coverage          |       |          |   ✅   |\n\nFor more details, check the [Pyright documentation](https://microsoft.github.io/pyright/#/configuration?id=type-check-diagnostics-settings).","markdownEnumDescriptions":["Show diagnostics for invalid syntax, unresolved imports, undefined variables.","All rules from `off` + `basic` type checking rules.","All rules from `basic` + `standard` type checking rules.","All rules from `standard` + `strict` type checking rules."],"scope":"resource"},"python.analysis.fixAll":{"type":"array","default":[],"items":{"enum":["source.unusedImports","source.convertImportFormat"],"markdownEnumDescriptions":["Remove unused imports.","Convert import format following python.analysis.importFormat."]},"markdownDescription":"source fixes to run in fix all.","scope":"resource"},"python.analysis.packageIndexDepths":{"type":"array","default":[{"name":"sklearn","depth":2},{"name":"matplotlib","depth":2},{"name":"scipy","depth":2},{"name":"django","depth":2},{"name":"flask","depth":2},{"name":"fastapi","depth":2}],"items":{"type":"object","label":"Per package settings","required":["name"],"properties":{"name":{"type":"string","label":"Package name to configure. Empty name means all packages.","default":""},"depth":{"type":"integer","label":"Depth to scan modules.","default":1},"includeAllSymbols":{"type":"boolean","label":"'true' means include all symbols. 'false' means only symbols in __all__.","default":false}}},"markdownDescription":"Used to override how many levels under installed packages to index on a per package basis. By default, only top-level modules are indexed (depth = 1). To index submodules, increase depth by 1 for each level of submodule you want to index. Accepted values are:\n```JSON\n{\"name\": \"package name (str)\",\n \"depth\": \"depth to scan (int)\",\n \"includeAllSymbols\": \"whether to include all symbols (bool)\"}\n\n```\nIf `includeAllSymbols` is set to `false`, only symbols in each package's `__all__` are included. When it's set to `true`, Pylance will index every module/top level symbol declarations in the file.  \n  \nUsage example: \n```JSON\n[\n\t{\"name\": \"sklearn\", \"depth\": 2, \"includeAllSymbols\": true},\n\t{\"name\": \"matplotlib\", \"depth\": 3, \"includeAllSymbols\": false}\n]\n\n```\n","scope":"resource"},"python.analysis.typeEvaluation.strictListInference":{"type":"boolean","markdownDescription":"When inferring the type of a list, use strict type assumptions. For example, the expression \n\n```python\n[1, 'a', 3.4]\n```\n could be inferred to be of type `list[Any]` or `list[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.strictDictionaryInference":{"type":"boolean","markdownDescription":"When inferring the type of a dictionary’s keys and values, use strict type assumptions. For example, the expression \n\n```python\n{'a': 1, 'b': 'a'}\n```\n could be inferred to be of type `dict[str, Any]` or `dict[str, int | str]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.strictSetInference":{"type":"boolean","markdownDescription":"When inferring the type of a set, use strict type assumptions. For example, the expression \n\n```python\n{1, 'a', 3.4}\n```\n could be inferred to be of type `set[Any]` or `set[int | str | float]`. If this setting is true, it will use the latter (stricter) type. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.analyzeUnannotatedFunctions":{"type":"boolean","markdownDescription":"Analyze and report errors for functions and methods that have no type annotations for input parameters or return types. The default value for this setting is `true`.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.strictParameterNoneValue":{"type":"boolean","markdownDescription":"[PEP 484](https://peps.python.org/pep-0484) indicates that when a function parameter is assigned a default value of None, its type should implicitly be Optional even if the explicit type is not. When enabled, this rule requires that parameter type annotations use Optional explicitly in this case. The default value for this setting is `true`.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.enableTypeIgnoreComments":{"type":"boolean","markdownDescription":"[PEP 484](https://peps.python.org/pep-0484) defines support for `# type: ignore` comments. This switch enables or disables support for these comments. The default value for this setting is `true`. This does not affect `# pyright: ignore` comments.","default":true,"scope":"resource"},"python.analysis.typeEvaluation.deprecateTypingAliases":{"type":"boolean","markdownDescription":"[PEP 585](https://peps.python.org/pep-0585) indicates that aliases to types in standard collections that were introduced solely to support generics are deprecated as of Python 3.9. This switch controls whether these are treated as deprecated. This applies only when pythonVersion is 3.9 or newer. The default value for this setting is `false` but may be switched to `true` in the future.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.enableReachabilityAnalysis":{"type":"boolean","markdownDescription":"If enabled, code that is determined to be unreachable by type analysis is reported using a tagged hint. This setting does not affect code that is determined to be unreachable regardless of type analysis; such code is always reported as unreachable. This setting also has no effect when when using the command-line version of pyright because it never emits tagged hints for unreachable code.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.enableExperimentalFeatures":{"type":"boolean","markdownDescription":"Enables a set of experimental (mostly undocumented) features that correspond to proposed or exploratory changes to the Python typing standard. These features will likely change or be removed, so they should not be used except for experimentation purposes. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.typeEvaluation.disableBytesTypePromotions":{"type":"boolean","markdownDescription":"Disables legacy behavior where `bytearray` and `memoryview` are considered subtypes of `bytes`. [PEP 688](https://peps.python.org/pep-0688/#no-special-meaning-for-bytes) deprecates this behavior, but this switch is provided to restore the older behavior. The default value for this setting is `false`.","default":false,"scope":"resource"},"python.analysis.diagnosticSeverityOverrides":{"type":"object","markdownDescription":"Allows a user to override the severity levels for individual diagnostics. \n\nUse the rule name as a key and one of `error`, `warning`, `information`, `none`, `true` (alias for `error`) or `false` (alias for `none`) as value. The default value shown for each diagnostic is the default when #python.analysis.typeCheckingMode# is set to `off`. See [here](https://github.com/microsoft/pyright/blob/main/docs/configuration.md#diagnostic-rule-defaults) for defaults for each type checking mode (`off`, `basic` and `strict`).","scope":"resource","properties":{"reportGeneralTypeIssues":{"type":["string","boolean"],"description":"Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.","default":"none","enum":["none","information","warning","error",true,false]},"reportPropertyTypeMismatch":{"type":["string","boolean"],"description":"Diagnostics for property whose setter and getter have mismatched types.","default":"none","enum":["none","information","warning","error",true,false]},"reportFunctionMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for member accesses on functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingImports":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding imported python file or type stub file.","default":"warning","enum":["none","information","warning","error",true,false]},"reportMissingModuleSource":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.","default":"warning","enum":["none","information","warning","error",true,false]},"reportInvalidTypeForm":{"type":["string","boolean"],"description":"Diagnostics for type expression that uses an invalid form.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingTypeStubs":{"type":["string","boolean"],"description":"Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.","default":"none","enum":["none","information","warning","error",true,false]},"reportImportCycles":{"type":["string","boolean"],"description":"Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol that is not referenced within that file.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedClass":{"type":["string","boolean"],"description":"Diagnostics for a class with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedFunction":{"type":["string","boolean"],"description":"Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedVariable":{"type":["string","boolean"],"description":"Diagnostics for a variable that is not accessed.","default":"none","enum":["none","information","warning","error",true,false]},"reportDuplicateImport":{"type":["string","boolean"],"description":"Diagnostics for an imported symbol or module that is imported more than once.","default":"none","enum":["none","information","warning","error",true,false]},"reportWildcardImportFromLibrary":{"type":["string","boolean"],"description":"Diagnostics for an wildcard import from an external library.","default":"none","enum":["none","information","warning","error",true,false]},"reportAbstractUsage":{"type":["string","boolean"],"description":"Diagnostics for an attempt to instantiate an abstract or protocol class or use an abstract method.","default":"error","enum":["none","information","warning","error",true,false]},"reportArgumentType":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility for an argument to a call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssertTypeFailure":{"type":["string","boolean"],"description":"Diagnostics for a type incompatibility detected by a typing.assert_type call.","default":"error","enum":["none","information","warning","error",true,false]},"reportAssignmentType":{"type":["string","boolean"],"description":"Diagnostics for type incompatibilities for assignments.","default":"error","enum":["none","information","warning","error",true,false]},"reportAttributeAccessIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving attribute accesses.","default":"error","enum":["none","information","warning","error",true,false]},"reportCallIssue":{"type":["string","boolean"],"description":"Diagnostics for issues involving call expressions and arguments.","default":"error","enum":["none","information","warning","error",true,false]},"reportInconsistentOverload":{"type":["string","boolean"],"description":"Diagnostics for inconsistencies between function overload signatures and implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportIndexIssue":{"type":["string","boolean"],"description":"Diagnostics related to index operations and expressions.","default":"error","enum":["none","information","warning","error",true,false]},"reportInvalidTypeArguments":{"type":["string","boolean"],"description":"Diagnostics for invalid type argument usage.","default":"error","enum":["none","information","warning","error",true,false]},"reportNoOverloadImplementation":{"type":["string","boolean"],"description":"Diagnostics for an overloaded function or method with a missing implementation.","default":"error","enum":["none","information","warning","error",true,false]},"reportOperatorIssue":{"type":["string","boolean"],"description":"Diagnostics for related to unary or binary operators.","default":"error","enum":["none","information","warning","error",true,false]},"reportOptionalSubscript":{"type":["string","boolean"],"description":"Diagnostics for an attempt to subscript (index) a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalMemberAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a member of a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalCall":{"type":["string","boolean"],"description":"Diagnostics for an attempt to call a variable with an Optional type.","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalIterable":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalContextManager":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).","default":"none","enum":["none","information","warning","error",true,false]},"reportOptionalOperand":{"type":["string","boolean"],"description":"Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').","default":"none","enum":["none","information","warning","error",true,false]},"reportRedeclaration":{"type":["string","boolean"],"description":"Diagnostics for an attempt to declare the type of a symbol multiple times.","default":"error","enum":["none","information","warning","error",true,false]},"reportReturnType":{"type":["string","boolean"],"description":"Diagnostics related to function return type compatibility.","default":"error","enum":["none","information","warning","error",true,false]},"reportTypedDictNotRequiredAccess":{"type":["string","boolean"],"description":"Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedFunctionDecorator":{"type":["string","boolean"],"description":"Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedClassDecorator":{"type":["string","boolean"],"description":"Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedBaseClass":{"type":["string","boolean"],"description":"Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.","default":"none","enum":["none","information","warning","error",true,false]},"reportUntypedNamedTuple":{"type":["string","boolean"],"description":"Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.","default":"none","enum":["none","information","warning","error",true,false]},"reportTypeCommentUsage":{"type":["string","boolean"],"description":"Diagnostics for usage of deprecated type comments.","default":"none","enum":["none","information","warning","error",true,false]},"reportPrivateImportUsage":{"type":["string","boolean"],"description":"Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.","default":"none","enum":["none","information","warning","error",true,false]},"reportConstantRedefinition":{"type":["string","boolean"],"description":"Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.","default":"none","enum":["none","information","warning","error",true,false]},"reportDeprecated":{"type":["string","boolean"],"description":"Diagnostics for use of deprecated classes or functions.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleMethodOverride":{"type":["string","boolean"],"description":"Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompatibleVariableOverride":{"type":["string","boolean"],"description":"Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.","default":"none","enum":["none","information","warning","error",true,false]},"reportInconsistentConstructor":{"type":["string","boolean"],"description":"Diagnostics for __init__ and __new__ methods whose signatures are inconsistent.","default":"none","enum":["none","information","warning","error",true,false]},"reportOverlappingOverload":{"type":["string","boolean"],"description":"Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.","default":"none","enum":["none","information","warning","error",true,false]},"reportPossiblyUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of variables that may be unbound on some code paths.","default":"error","enum":["none","information","warning","error",true,false]},"reportMissingSuperCall":{"type":["string","boolean"],"description":"Diagnostics for missing call to parent class for inherited `__init__` methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportUninitializedInstanceVariable":{"type":["string","boolean"],"description":"Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStringEscapeSequence":{"type":["string","boolean"],"description":"Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownParameterType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownArgumentType":{"type":["string","boolean"],"description":"Diagnostics for call arguments for functions or methods that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownLambdaType":{"type":["string","boolean"],"description":"Diagnostics for input or return parameters for lambdas that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownVariableType":{"type":["string","boolean"],"description":"Diagnostics for variables that have an unknown type..","default":"none","enum":["none","information","warning","error",true,false]},"reportUnknownMemberType":{"type":["string","boolean"],"description":"Diagnostics for class or instance variables that have an unknown type.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingParameterType":{"type":["string","boolean"],"description":"Diagnostics for parameters that are missing a type annotation.","default":"none","enum":["none","information","warning","error",true,false]},"reportMissingTypeArgument":{"type":["string","boolean"],"description":"Diagnostics for generic class reference with missing type arguments.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidTypeVarUse":{"type":["string","boolean"],"description":"Diagnostics for improper use of type variables in a function signature.","default":"none","enum":["none","information","warning","error",true,false]},"reportCallInDefaultInitializer":{"type":["string","boolean"],"description":"Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryIsInstance":{"type":["string","boolean"],"description":"Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true. Such calls are often indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryCast":{"type":["string","boolean"],"description":"Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryComparison":{"type":["string","boolean"],"description":"Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryContains":{"type":["string","boolean"],"description":"Diagnostics for 'in' operation that is statically determined to be unnecessary. Such operations are sometimes indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportAssertAlwaysTrue":{"type":["string","boolean"],"description":"Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.","default":"none","enum":["none","information","warning","error",true,false]},"reportSelfClsParameterName":{"type":["string","boolean"],"description":"Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitStringConcatenation":{"type":["string","boolean"],"description":"Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.","default":"none","enum":["none","information","warning","error",true,false]},"reportInvalidStubStatement":{"type":["string","boolean"],"description":"Diagnostics for type stub statements that do not conform to PEP 484.","default":"none","enum":["none","information","warning","error",true,false]},"reportIncompleteStub":{"type":["string","boolean"],"description":"Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.","default":"none","enum":["none","information","warning","error",true,false]},"reportUndefinedVariable":{"type":["string","boolean"],"description":"Diagnostics for undefined variables.","default":"warning","enum":["none","information","warning","error",true,false]},"reportUnboundVariable":{"type":["string","boolean"],"description":"Diagnostics for the use of unbound variables.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnhashable":{"type":["string","boolean"],"description":"Diagnostics for the use of an unhashable object in a container that requires hashability.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedCallResult":{"type":["string","boolean"],"description":"Diagnostics for call expressions whose results are not consumed and are not None.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedCoroutine":{"type":["string","boolean"],"description":"Diagnostics for call expressions that return a Coroutine and whose results are not consumed.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnusedExcept":{"type":["string","boolean"],"description":"Diagnostics for unreachable except clause.","default":"error","enum":["none","information","warning","error",true,false]},"reportUnusedExpression":{"type":["string","boolean"],"description":"Diagnostics for simple expressions whose value is not used in any way.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnsupportedDunderAll":{"type":["string","boolean"],"description":"Diagnostics for unsupported operations performed on __all__.","default":"none","enum":["none","information","warning","error",true,false]},"reportUnnecessaryTypeIgnoreComment":{"type":["string","boolean"],"description":"Diagnostics for '# type: ignore' comments that have no effect.","default":"none","enum":["none","information","warning","error",true,false]},"reportMatchNotExhaustive":{"type":["string","boolean"],"description":"Diagnostics for 'match' statements that do not exhaustively match all possible values.","default":"none","enum":["none","information","warning","error",true,false]},"reportShadowedImports":{"type":["string","boolean"],"description":"Diagnostics for files that are overriding a module in the stdlib.","default":"none","enum":["none","information","warning","error",true,false]},"reportImplicitOverride":{"type":["string","boolean"],"description":"Diagnostics for overridden methods that do not include an `@override` decorator.","default":"none","enum":["none","information","warning","error",true,false]}}},"python.analysis.disableTaggedHints":{"type":"boolean","default":false,"scope":"resource","markdownDescription":"Disable hint diagnostics with special hints for grayed-out or strike-through text."},"python.analysis.logLevel":{"type":"string","default":"Information","markdownDescription":"Specifies the level of logging for the Output panel","enum":["Error","Warning","Information","Trace"],"scope":"window"},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Paths to look for typeshed modules.","scope":"resource"},"python.analysis.importFormat":{"type":"string","default":"absolute","enum":["absolute","relative"],"markdownDescription":"Defines the default format for importing modules.","enumDescriptions":["Use absolute import format when creating new import statement.","Use relative import format when creating new import statement."],"scope":"resource"},"python.analysis.enableSyncServer":{"type":"boolean","default":false,"scope":"window","markdownDescription":"Use sync server mode [Experimental]. For internal use only, may cause Pylance to stop working.","tags":["experimental","onExP"]},"python.analysis.reportExtraTelemetry":{"type":"boolean","default":false,"scope":"window","markdownDescription":"Report extra telemetry [Experimental]. For internal use only, may cause Pylance to slow down.","tags":["experimental","onExP"]},"python.analysis.enablePytestSupport":{"type":"boolean","default":true,"markdownDescription":"Enables pytest support in Pylance.","scope":"resource"},"python.analysis.gotoDefinitionInStringLiteral":{"type":"boolean","default":true,"markdownDescription":"For string literals that look like module names, enables go to definition to go to the module.","scope":"resource"},"python.analysis.nodeExecutable":{"type":"string","default":"","markdownDescription":"Path to a Node.js executable to use for running the language server. If not specified, the language server will use the Node.js executable that ships with VS Code. Set this option if you're having trouble with Pylance running out of memory. See [here](https://aka.ms/AApf7ox) for more information.","scope":"machine"},"python.analysis.supportRestructuredText":{"type":"boolean","default":true,"markdownDescription":"Enable/disable support for reStructuredText in docstrings.","scope":"window","tags":["preview"]},"python.analysis.cacheLSPData":{"type":"boolean","default":false,"markdownDescription":"Cache LSP data for faster completions. \n\n[Experimental] may cause Pylance to stop working.","scope":"machine","tags":["experimental","onExP"]},"python.analysis.regenerateStdLibIndices":{"type":"boolean","default":false,"markdownDescription":"Instead of relying on the shared stdlib.json indices for all Python versions, generate unique indices tailored to each workspace's specific Python version and platform. This regeneration process will affect performance, unlike using the prebuilt stdlib indices.","scope":"resource"},"python.analysis.usePullDiagnostics":{"type":"boolean","default":false,"markdownDescription":"Enable/disable support for pulling diagnostics from Pylance (instead of Pylance pushing them). \n\n[Experimental], may cause diagnostics to not appear. \n\nRequires restarting VS Code when changed.","scope":"window","requiresReload":true,"tags":["experimental","onExP"]},"python.analysis.aiCodeActions":{"type":"object","default":{},"markdownDescription":"Enable/disable AI-assisted code actions. Requires the Copilot Chat extension to be enabled.","scope":"resource","properties":{"implementAbstractClasses":{"type":"boolean","default":false,"markdownDescription":"Enable/disable AI assistance for implementing inherited abstract classes."},"generateDocstring":{"type":"boolean","default":false,"markdownDescription":"Enable/disable AI assistance for generating docstrings."},"generateSymbol":{"type":"boolean","default":false,"markdownDescription":"Enable/disable AI assistance for generating symbol such as class, function and variable."}}},"python.analysis.generateWithTypeAnnotation":{"type":"boolean","default":false,"markdownDescription":"Add type annotations when generating code. Defaults to `false` for type checking mode `off`, and `true` for other modes.","scope":"resource"},"python.analysis.languageServerMode":{"type":"string","default":"default","enum":["light","default","full"],"markdownDescription":"Select a predefined set of values for settings. Please check [this link](https://aka.ms/languageserver-mode) for more details.","markdownEnumDescriptions":["Set Pylance to do only essential work to make it light weight. See the link at the description to find out exactly what settings are set to what value.","Leave Pylance with default settings.","Enable most Pylance features by default. See the link at the description to find out exactly what settings are set to what value."],"scope":"resource"},"python.analysis.supportDocstringTemplate":{"type":"boolean","default":false,"markdownDescription":"Enable/disable support for docstring generation. In a blank docstring, use `Ctrl+Space` to generate a docstring.","scope":"resource","tags":["experimental","onExP"]},"python.analysis.displayEnglishDiagnostics":{"type":"boolean","default":false,"markdownDescription":"Display diagnostics in English regardless of VS Code's display language.","scope":"resource"},"python.analysis.enableEditableInstalls":{"type":"boolean","default":false,"markdownDescription":"Enable support for editable installs of packages as described in [PEP 660](https://peps.python.org/pep-0660/) when using Python 3.13 and higher. \n\n[Experimental]. For internal use only, may cause Pylance to stop working.","scope":"machine","tags":["onExP"]},"python.analysis.enableExperimentalServer":{"type":"boolean","default":false,"markdownDescription":"Enable/disable experimental server. For internal use only, may cause Pylance to stop working.","scope":"machine","requiresReload":true,"tags":["onExP"]},"python.analysis.enablePerfTelemetry":{"type":"boolean","default":false,"markdownDescription":"Enables internal perf telemetry if telemetry is enabled in VS Code.","scope":"resource","tags":["experimental","onExP"]}}},"jsonValidation":[{"fileMatch":"pyrightconfig.json","url":"./dist/schemas/pyrightconfig.schema.json"}],"semanticTokenTypes":[{"id":"module","description":"module","superType":"namespace"},{"id":"intrinsic","description":"intrinsic","superType":"operator"},{"id":"selfParameter","description":"self parameter","superType":"parameter"},{"id":"clsParameter","description":"cls parameter","superType":"parameter"},{"id":"magicFunction","description":"magic aka dunder function","superType":"function"},{"id":"builtinConstant","description":"constants like True, False, None, or __debug__","superType":"constant"},{"id":"parenthesis","description":"() parenthesis"},{"id":"bracket","description":"[] bracket"},{"id":"curlybrace","description":"{} curly brace"},{"id":"colon","description":"colon token"},{"id":"semicolon","description":"semicolon token"},{"id":"arrow","description":"arrow token"}],"semanticTokenModifiers":[{"id":"typeHint","description":"inside a type annotation"},{"id":"typeHintComment","description":"inside a comment style type annotation"},{"id":"decorator","description":"inside a decorator"},{"id":"builtin","description":"built-in identifier"},{"id":"overridden","description":"overridden token"},{"id":"callable","description":"callable like a function"}],"semanticTokenScopes":[{"language":"python","scopes":{"selfParameter":["variable.parameter.function.language.special.self.python"],"clsParameter":["variable.parameter.function.language.special.cls.python"],"magicFunction":["support.function.magic.python"],"*.typeHintComment":["comment.typehint.type.notation.python"],"*.overridden":["support.function.magic.python"],"function.decorator":["meta.function.decorator.python"],"class.decorator":["meta.function.decorator.python"],"builtinConstant":["constant.language.python"],"parenthesis":["source.python"],"bracket":["source.python"],"curlybrace":["source.python"],"colon":["punctuation.separator.colon.python"],"semicolon":["source.python"],"arrow":["punctuation.separator.annotation.result.python"]}}]},"scripts":{"clean":"shx rm -rf ./dist ./out NOTICE.txt","package":"vsce package --githubBranch main","vscode:prepublish":"npm run clean && shx cp ../../NOTICE.txt . && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode production --progress","webpack":"node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --progress","webpack-dev":"npm run clean && node --max_old_space_size=8192 ./node_modules/webpack-cli/bin/cli.js --mode development --watch --progress","webpack-dev-fast":"npm run clean && webpack --env fast --mode development --watch --progress","build:tests":"tsc","watch:tests":"tsc --watch","encryptText":"ts-node --project ./tsconfig.json -r tsconfig-paths/register ./src/encryptText.ts","test":"npm run webpack && npm run test:extension && npm run test:web","test:extension":"npm run build:tests && node ./src/tests/runTests.js extension","test:smoke":"npm run build:tests && node ./src/tests/runTests.js smoke","test:web":"npm run webpack && node ./build/launchWebTests.js","test:copytestbundle":"shx cp ./dist/browser.tests/web/index.bundle.js ./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js","test:web:exists":"vscode-test-web --coi --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose","test:web:exists:nocoi":"vscode-test-web --extensionDevelopmentPath=./test-web --extensionTestsPath=./test-web/ms-python.vscode-pylance/dist/browser.tests/web/index.bundle.js --verbose"},"devDependencies":{"@types/jest":"^29.5.14","@types/mocha":"^10.0.10","@types/node":"^22.10.5","@types/sinon":"^17.0.3","@types/source-map-support":"^0.5.10","@types/vscode":"^1.90.0","@types/webpack":"^5.28.5","@types/webpack-env":"^1.18.5","@types/which":"^3.0.4","@vscode/test-electron":"^2.4.1","@vscode/test-web":"^0.0.65","@vscode/vsce":"^2.32.0","copy-webpack-plugin":"^11.0.0","esbuild-loader":"^3.2.0","javascript-obfuscator":"4.1.1","jest":"^29.7.0","jest-cli":"^29.7.0","jest-environment-node":"^29.7.0","jest-junit":"^16.0.0","mocha":"^10.8.2","shx":"^0.3.4","sinon":"^19.0.2","source-map-support":"^0.5.21","terser-webpack-plugin":"^5.3.11","ts-jest":"^29.2.5","ts-loader":"^9.5.1","ts-mockito":"^2.6.1","ts-node":"^10.9.2","typescript":"~5.5.4","webpack":"^5.97.1","webpack-cli":"^5.1.4","webpack-env":"^0.8.0","webpack-obfuscator":"^3.5.1"},"dependencies":{"@vscode/extension-telemetry":"^0.9.8","@vscode/jupyter-extension":"^1.1.1","@vscode/sync-api-common":"^0.9.0","@vscode/sync-api-service":"^0.9.0","ansi-regex":"^6.1.0","buffer":"^6.0.3","events":"^3.3.0","path-browserify":"^1.0.1","semver":"^7.6.3","stream-browserify":"^3.0.0","typescript-char":"^0.0.0","vscode-jsonrpc":"^9.0.0-next.5","vscode-languageclient":"^10.0.0-next.12","vscode-languageserver":"^10.0.0-next.10","vscode-languageserver-protocol":"^3.17.6-next.10","vscode-languageserver-types":"^3.17.6-next.5","vscode-tas-client":"^0.1.84","web-tree-sitter":"^0.24.4","which":"^4.0.0"},"overrides":{"loader-utils":"^2.0.4","braces":"^3.0.3"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ms-python.vscode-pylance-2025.3.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"364d2426-116a-433a-a5d8-a5098dc3afbd","publisherId":"998b010b-e2af-44a5-a6cd-0b5fd3b9b6f8","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":81666910},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-vscode.cpptools","uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2"},"manifest":{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"1.23.6","publisher":"ms-vscode","icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.67.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"enabledApiProposals":["terminalDataWriteEvent"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"Multiple settings can cause processes local to the workspace to be executed, e.g. C_Cpp.clang_format_path, C_Cpp.codeAnalysis.clangTidy.path, C_Cpp.addNodeAddonIncludePaths, C_Cpp.default.compilerPath, C_Cpp.default.configurationProvider, and C_Cpp.default.compileCommands, and the equivalent properties in c_cpp_properties.json."},"virtualWorkspaces":false},"activationEvents":["onLanguage:c","onLanguage:cpp","onLanguage:cuda-cpp","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onDebugResolve:cppdbg","onDebugResolve:cppvsdbg","workspaceContains:/.vscode/c_cpp_properties.json","onFileSystem:cpptools-schema"],"main":"./dist/src/main","contributes":{"walkthroughs":[{"id":"cppWelcome","title":"Get Started with C++ Development","description":"Dive into VS Code's rich C++ development experience.","steps":[{"id":"awaiting.activation.mac","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == mac && cpptools.scanForCompilersDone == false","media":{"markdown":"dist/walkthrough/installcompiler/install-clang-macos.md"}},{"id":"awaiting.activation.linux","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == linux && cpptools.scanForCompilersDone == false","media":{"markdown":"dist/walkthrough/installcompiler/install-gcc-linux.md"}},{"id":"awaiting.activation.windows","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows.md"}},{"id":"awaiting.activation.windows10","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion == 10","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows10.md"}},{"id":"awaiting.activation.windows11","title":"Set up your C++ Environment","description":"Activating the C++ extension to determine whether your C++ Environment has been set up.\nActivating Extension...","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == false && cpptools.windowsVersion == 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows11.md"}},{"id":"no.compilers.found.mac","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Either select “Install a C++ Compiler” to have a compiler installed for you or follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Install a C++ Compiler](command:C_Cpp.InstallCompiler?%22walkthrough%22)\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == mac && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true","media":{"markdown":"dist/walkthrough/installcompiler/install-clang-macos.md"}},{"id":"no.compilers.found.linux","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Either select “Install a C++ Compiler” to have a compiler installed for you or follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Install a C++ Compiler](command:C_Cpp.InstallCompiler?%22walkthrough%22)\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == linux && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true","media":{"markdown":"dist/walkthrough/installcompiler/install-gcc-linux.md"}},{"id":"no.compilers.found.windows","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows.md"}},{"id":"no.compilers.found.windows10","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion == 10","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows10.md"}},{"id":"no.compilers.found.windows11","title":"Set up your C++ Environment","description":"We could not find a C++ compiler on your machine, which is required to use the C++ extension. Follow the instructions on the right to install one, then click “Find my new Compiler” below.\n[Find my new Compiler](command:C_Cpp.RescanCompilers?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == true && cpptools.windowsVersion == 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows11.md"}},{"id":"verify.compiler.mac","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == mac && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false","media":{"markdown":"dist/walkthrough/installcompiler/install-clang-macos.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.linux","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == linux && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false","media":{"markdown":"dist/walkthrough/installcompiler/install-gcc-linux.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.windows","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion != 10 && cpptools.windowsVersion != 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.windows10","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion == 10","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows10.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"verify.compiler.windows11","title":"Set up your C++ Environment","description":"The C++ extension works with a C++ compiler. Select one from those already on your machine by clicking the button below.\n[Select my Default Compiler](command:C_Cpp.SelectIntelliSenseConfiguration?%22walkthrough%22)","when":"workspacePlatform == windows && cpptools.scanForCompilersDone == true && cpptools.scanForCompilersEmpty == false && cpptools.windowsVersion == 11","media":{"markdown":"dist/walkthrough/installcompiler/install-compiler-windows11.md"},"completionEvents":["onContext:cpptools.trustedCompilerFound"]},{"id":"create.cpp.file","title":"Create a C++ file","description":"[Open](command:toSide:workbench.action.files.openFile) or [create](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22cpp%22%7D) a C++ file. Be sure to save it with the \".cpp\" extension, such as \"helloworld.cpp\". \n[Create a C++ File](command:toSide:workbench.action.files.newUntitledFile?%7B%22languageId%22%3A%22cpp%22%7D)","media":{"svg":"dist/walkthrough/images/create-a-file.svg","altText":"Open a C++ file or a folder with a C++ project."}},{"id":"relaunch.developer.command.prompt.windows","title":"Launch from the Developer Command Prompt for VS","description":"When using the Microsoft Visual Studio C++ compiler, the C++ extension requires you to launch VS Code from the Developer Command Prompt for VS. Follow the instructions on the right to relaunch.\n[Reload Window](command:workbench.action.reloadWindow)","when":"workspacePlatform == windows","media":{"markdown":"dist/walkthrough/devcommandprompt/open-developer-command-prompt.md"},"completionEvents":["onContext:cpptools.msvcEnvironmentFound"]},{"id":"run.project.mac","title":"Run and debug your C++ file","description":"Open your C++ file and click on the play button in the top right corner of the editor, or press F5 when on the file. Select \"clang++ - Build and debug active file\" to run with the debugger.","when":"workspacePlatform == mac","media":{"altText":"Image showing a breakpoint in a C++ file, the f5 buttobn, and the run symbol in the top right","svg":"dist/walkthrough/images/run-and-debug.svg"}},{"id":"run.project.linux","title":"Run and debug your C++ file","description":"Open your C++ file and click on the play button in the top right corner of the editor, or press F5 when on the file. Select \"g++ - Build and debug active file\" to run with the debugger.","when":"workspacePlatform == linux","media":{"altText":"Image showing a breakpoint in a C++ file, the f5 buttobn, and the run symbol in the top right","svg":"dist/walkthrough/images/run-and-debug.svg"}},{"id":"run.project.windows","title":"Run and debug your C++ file","description":"Open your C++ file and click on the play button in the top right corner of the editor, or press F5 when on the file. Select \"cl.exe - Build and debug active file\" to run with the debugger.","when":"workspacePlatform == windows","media":{"altText":"Image showing a breakpoint in a C++ file, the f5 buttobn, and the run symbol in the top right","svg":"dist/walkthrough/images/run-and-debug.svg"}},{"id":"customize.debugging.linux","title":"Customize debugging","when":"workspacePlatform == linux","description":"To customize your debug configuration, select the Explorer in the activity bar and open a folder that includes your C++ file. Open the C++ file, and select \"Add Debug Configuration\" to the right of the play button. The new debug configuration is saved to your project's launch.json file. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-linux#_debug-helloworldcpp)","media":{"altText":"Image that shows Add Debug Configuration in the drop-down","svg":"dist/walkthrough/images/customize-debugging.svg"}},{"id":"customize.debugging.windows","title":"Customize debugging","when":"workspacePlatform == windows","description":"To customize your debug configuration, select the Explorer in the activity bar and open a folder that includes your C++ file. Open the C++ file, and select \"Add Debug Configuration\" to the right of the play button. The new debug configuration is saved to your project's launch.json file. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-msvc#_debug-helloworldcpp)","media":{"altText":"Image that shows Add Debug Configuration in the drop-down","svg":"dist/walkthrough/images/customize-debugging.svg"}},{"id":"customize.debugging.mac","title":"Customize debugging","when":"workspacePlatform == mac","description":"To customize your debug configuration, select the Explorer in the activity bar and open a folder that includes your C++ file. Open the C++ file, and select \"Add Debug Configuration\" to the right of the play button. The new debug configuration is saved to your project's launch.json file. \n[Learn More](https://code.visualstudio.com/docs/cpp/config-clang-mac#_debug-helloworldcpp)","media":{"altText":"Image that shows Add Debug Configuration in the drop-down","svg":"dist/walkthrough/images/customize-debugging.svg"}}]}],"taskDefinitions":[{"type":"cppbuild","required":["command","label"],"properties":{"label":{"type":"string","description":"The name of the task."},"command":{"oneOf":[{"type":"string"},{"type":"object","required":["value","quoting"],"properties":{"value":{"type":"string","description":"The actual argument value."},"quoting":{"type":"string","enum":["escape","strong","weak"],"enumDescriptions":["Escapes characters using the shell's escape character (e.g. \\ under bash).","Quotes the argument using the shell's strong quote character (e.g. ' under bash).","Quotes the argument using the shell's weak quote character (e.g. \" under bash)."],"default":"strong","description":"How the argument value should be quoted."}}}]},"args":{"type":"array","description":"Additional arguments to pass to the compiler or compilation script.","items":{"oneOf":[{"type":"string"},{"type":"object","required":["value","quoting"],"properties":{"value":{"type":"string","description":"The actual argument value."},"quoting":{"type":"string","enum":["escape","strong","weak"],"enumDescriptions":["Escapes characters using the shell's escape character (e.g. \\ under bash).","Quotes the argument using the shell's strong quote character (e.g. ' under bash).","Quotes the argument using the shell's weak quote character (e.g. \" under bash)."],"default":"strong","description":"How the argument value should be quoted."}}}]}},"options":{"type":"object","description":"Additional command options.","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."}}},"detail":{"type":"string","description":"Additional details of the task."}}}],"views":{"references-view":[{"id":"CppReferencesView","name":"C/C++: Other references results","when":"cpptools.hasReferencesResults"}],"debug":[{"id":"CppSshTargetsView","name":"Cpptools: SSH targets","when":"cpptools.enableSshTargetsView"}]},"viewsWelcome":[{"view":"debug","contents":"To learn more about launch.json, see [Configuring C/C++ debugging](https://code.visualstudio.com/docs/cpp/launch-json-reference).","when":"debugStartLanguage == cpp || debugStartLanguage == c || debugStartLanguage == cuda-cpp"}],"problemMatchers":[{"name":"gcc","source":"gcc","owner":"cpptools","fileLocation":["autoDetect","${cwd}"],"pattern":{"regexp":"^(.*?):(\\d+):(\\d*):?\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}},{"name":"iar","source":"iar","owner":"cpptools","fileLocation":"absolute","pattern":{"regexp":"^\"(.*?)\",(\\d+)\\s+(?:[Ff]atal\\s+)?([Ww]arning|[Ee]rror)\\[(\\w+\\d+)\\]:\\s+(.*)$","file":1,"line":2,"severity":3,"code":4,"message":5}},{"name":"armcc5","source":"armcc5","owner":"cpptools","fileLocation":["autoDetect","${cwd}"],"pattern":{"regexp":"^\"(.*)?\",\\s+line\\s+(\\d+):\\s+([Ee]rror|[Ww]arning):\\s+#(.*?):\\s+(.*)$","file":1,"line":2,"severity":3,"code":4,"message":5}}],"configuration":[{"title":"IntelliSense","properties":{"C_Cpp.inlayHints.autoDeclarationTypes.enabled":{"type":"boolean","default":false,"markdownDescription":"Display inlay hints for deduced type when `auto` is used in a declaration:\n```cpp \n\n auto index /* : int */ = 0;\n```","scope":"resource"},"C_Cpp.inlayHints.autoDeclarationTypes.showOnLeft":{"type":"boolean","default":false,"markdownDescription":"Display inlay hints for deduced type when `auto` is used in a declaration on the left of the identifier:\n```cpp \n\n auto /* int */ index = 0;\n```","scope":"resource"},"C_Cpp.inlayHints.parameterNames.enabled":{"type":"boolean","default":false,"markdownDescription":"Display inlay hints for parameter names:\n```cpp \n\n int a = getArea(/* width: */ x, /* height: */ y);\n```","scope":"resource"},"C_Cpp.inlayHints.parameterNames.suppressWhenArgumentContainsName":{"type":"boolean","default":true,"markdownDescription":"Suppress parameter name hints when the argument text or inline comment contains the parameter name:\n```cpp \n\n int a = getArea(width, /* height: */ y);\n```","scope":"resource"},"C_Cpp.inlayHints.parameterNames.hideLeadingUnderscores":{"type":"boolean","default":true,"markdownDescription":"Hide leading `_` in parameter name hints.","scope":"resource"},"C_Cpp.inlayHints.referenceOperator.enabled":{"type":"boolean","default":false,"markdownDescription":"Display the inlay hint reference operator `&` for parameters passed by non-const reference:\n```cpp \n\n swap(/* &first: */ str1, /* &last: */ str2);\n```","scope":"resource"},"C_Cpp.inlayHints.referenceOperator.showSpace":{"type":"boolean","default":false,"markdownDescription":"Controls whether a space is shown after `&` for parameters passed by non-const reference:\n```cpp \n\n swap(/* & first: */ str1, /* & last: */ str2);\n```","scope":"resource"},"C_Cpp.intelliSenseUpdateDelay":{"type":"number","default":1000,"description":"Controls the delay in milliseconds before IntelliSense starts updating after a modification.","scope":"application","minimum":500,"maximum":3000},"C_Cpp.codeFolding":{"type":"string","enum":["enabled","disabled"],"default":"enabled","description":"If enabled, code folding ranges are provided by the language server.","scope":"window"},"C_Cpp.autocompleteAddParentheses":{"type":"boolean","default":false,"markdownDescription":"If `true`, autocomplete will automatically add `(` after function calls, in which case `)` may also be added, depending on the value of the `#editor.autoClosingBrackets#` setting.","scope":"resource"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"markdownDescription":"If `true`, snippets are provided by the language server.","scope":"resource"},"C_Cpp.enhancedColorization":{"type":"string","enum":["enabled","disabled"],"default":"enabled","markdownDescription":"If enabled, code is colorized based on IntelliSense. This setting only applies if `#C_Cpp.intelliSenseEngine#` is set to `default`.","scope":"window"},"C_Cpp.legacyCompilerArgsBehavior":{"type":"boolean","default":false,"markdownDescription":"Enable pre-v1.10.0 behavior for how shell escaping is handled in compiler arg settings. Shell escaping is no longer expected or supported by default in arg arrays starting in v1.10.0.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["default","disabled"],"default":"default","markdownDescription":"Controls the auto-completion provider. If `disabled` and you want word-based completion, you will also need to set `\"[cpp]\": {\"editor.wordBasedSuggestions\": <value>}` (and similarly for `c` and `cuda-cpp` languages).","enumDescriptions":["Uses the active IntelliSense engine.","Uses the word-based completion provided by Visual Studio Code."],"scope":"resource"},"C_Cpp.hover":{"type":"string","enum":["default","disabled"],"default":"default","description":"If disabled, hover details are no longer provided by the language server.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["enabled","disabled","enabledIfIncludesResolve"],"default":"enabledIfIncludesResolve","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. It also controls whether code analysis warnings are reported if includes can't be found. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type":"number","default":0.55,"markdownDescription":"Controls the opacity of inactive preprocessor blocks. Scales between `0.1` and `1.0`. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":"string","description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":"string","description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.refactoring.includeHeader":{"type":"string","enum":["always","ifNeeded","never"],"default":"always","markdownDescription":"Controls whether to include the header file of a refactored function/symbol to its corresponding source file when doing a refactoring action, such as create declaration/definition.","enumDescriptions":["Always include the header file if it is not included explicitly in its source file.","Only include the header file if it is not included explicitly in its source file or through implicit inclusion.","Never include the header file."],"scope":"resource"},"C_Cpp.renameRequiresIdentifier":{"type":"boolean","default":true,"markdownDescription":"If `true`, 'Rename Symbol' will require a valid C/C++ identifier.","scope":"application"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked.","scope":"window"},"C_Cpp.default.includePath":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `includePath` is not specified in `c_cpp_properties.json`. If `includePath` is specified, add `${default}` to the array to insert the values from this setting. Usually, this should not include system includes; instead, set `#C_Cpp.default.compilerPath#`.","scope":"machine-overridable"},"C_Cpp.default.defines":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `defines` is not specified, or the values to insert if `${default}` is present in `defines`.","scope":"machine-overridable"},"C_Cpp.default.macFrameworkPath":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `macFrameworkPath` is not specified, or the values to insert if `${default}` is present in `macFrameworkPath`.","scope":"machine-overridable"},"C_Cpp.default.windowsSdkVersion":{"type":"string","markdownDescription":"Version of the Windows SDK include path to use on Windows, e.g. `10.0.17134.0`.","pattern":"^((\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1)|())$","scope":"machine-overridable"},"C_Cpp.default.compileCommands":{"oneOf":[{"type":"string","default":""},{"type":"array","items":{"type":"string"},"uniqueItems":true,"default":[]}],"default":[""],"markdownDescription":"The value to use in a configuration if `compileCommands` is either not specified, or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.forcedInclude":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in a configuration if `forcedInclude` is not specified, or the values to insert if `${default}` is present in `forcedInclude`.","scope":"machine-overridable"},"C_Cpp.default.intelliSenseMode":{"type":"string","enum":["","macos-clang-x86","macos-clang-x64","macos-clang-arm","macos-clang-arm64","macos-gcc-x86","macos-gcc-x64","macos-gcc-arm","macos-gcc-arm64","linux-clang-x86","linux-clang-x64","linux-clang-arm","linux-clang-arm64","linux-gcc-x86","linux-gcc-x64","linux-gcc-arm","linux-gcc-arm64","windows-clang-x86","windows-clang-x64","windows-clang-arm","windows-clang-arm64","windows-gcc-x86","windows-gcc-x64","windows-gcc-arm","windows-gcc-arm64","windows-msvc-x86","windows-msvc-x64","windows-msvc-arm","windows-msvc-arm64","clang-x86","clang-x64","clang-arm","clang-arm64","gcc-x86","gcc-x64","gcc-arm","gcc-arm64","msvc-x86","msvc-x64","msvc-arm","msvc-arm64"],"markdownDescription":"The value to use in a configuration if `intelliSenseMode` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"markdownDescription":"The value to use in a configuration if `compilerPath` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.compilerArgs":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use in configuration if `compilerArgs` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.cStandard":{"type":"string","enum":["","c89","c99","c11","c17","c23","gnu89","gnu99","gnu11","gnu17","gnu23"],"markdownDescription":"The value to use in a configuration if `cStandard` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.cppStandard":{"type":"string","enum":["","c++98","c++03","c++11","c++14","c++17","c++20","c++23","gnu++98","gnu++03","gnu++11","gnu++14","gnu++17","gnu++20","gnu++23"],"markdownDescription":"The value to use in a configuration if `cppStandard` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.configurationProvider":{"type":"string","markdownDescription":"The value to use in a configuration if `configurationProvider` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.mergeConfigurations":{"type":"boolean","markdownDescription":"Set to `true` to merge include paths, defines, and forced includes with those from a configuration provider.","scope":"resource"},"C_Cpp.default.browse.path":{"type":"array","items":{"type":"string"},"uniqueItems":true,"default":null,"markdownDescription":"The value to use in a configuration if `browse.path` is not specified, or the values to insert if `${default}` is present in `browse.path`.","scope":"machine-overridable"},"C_Cpp.default.browse.databaseFilename":{"type":"string","markdownDescription":"The value to use in a configuration if `browse.databaseFilename` is either not specified or set to `${default}`.","scope":"machine-overridable"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"markdownDescription":"The value to use in a configuration if `browse.limitSymbolsToIncludedHeaders` is either not specified or set to `${default}`.","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"The value to use for the system include path. If set, it overrides the system include path acquired via `compilerPath` and `compileCommands` settings.","scope":"machine-overridable"},"C_Cpp.default.customConfigurationVariables":{"type":["object","null"],"default":null,"patternProperties":{"(^.+$)":{"type":"string"}},"markdownDescription":"The value to use in a configuration if `customConfigurationVariables` is not set, or the values to insert if `${default}` is present as a key in `customConfigurationVariables`.","scope":"machine-overridable"},"C_Cpp.default.enableConfigurationSquiggles":{"type":"boolean","default":true,"markdownDescription":"Controls whether the extension will report errors detected in `c_cpp_properties.json`.","scope":"resource"},"C_Cpp.default.dotConfig":{"type":"string","markdownDescription":"The value to use in a configuration if `dotConfig` is not specified, or the value to insert if `${default}` is present in `dotConfig`.","scope":"resource"},"C_Cpp.configurationWarnings":{"type":"string","enum":["enabled","disabled"],"default":"enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","markdownDescription":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values `highest`/`high`/`medium`/`low` correspond to approximately 100/75/50/25% CPU usage.","scope":"window"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["default","Tag Parser","disabled"],"default":"default","description":"Controls the IntelliSense provider.","enumDescriptions":["Provides context-aware results via a separate IntelliSense process.","Provides \"fuzzy\" results that are not context-aware.","Turns off C/C++ language service features."],"scope":"resource"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","markdownDescription":"Instructs the extension when to use the `#files.exclude#` (and `#C_Cpp.files.exclude#`) setting when determining which files should be added to the code navigation database while traversing through the paths in the `browse.path` array. If your `#files.exclude#` setting only contains folders, then `checkFolders` is the best choice and will increase the speed at which the extension can initialize the code navigation database.","enumDescriptions":["The exclusion filters will only be evaluated once per folder (individual files are not checked).","The exclusion filters will be evaluated against every file and folder encountered."],"scope":"resource"},"C_Cpp.files.exclude":{"type":"object","markdownDescription":"Configure glob patterns for excluding folders (and files if `#C_Cpp.exclusionPolicy#` is changed). These are specific to the C/C++ extension and are in addition to `#files.exclude#`, but unlike `#files.exclude#` they also apply to paths outside the current workspace folder and are not removed from the Explorer view. Learn more about [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).","default":{"**/.vscode":true,"**/.vs":true},"additionalProperties":{"anyOf":[{"type":"boolean","markdownDescription":"The glob pattern to match file paths against. Set to `true` or `false` to enable or disable the pattern."},{"type":"object","properties":{"when":{"type":"string","pattern":"\\w*\\$\\(basename\\)\\w*","default":"$(basename).ext","markdownDescription":"Additional check on the siblings of a matching file. Use `$(basename)` as variable for the matching file name."}}}]},"scope":"resource"}}},{"title":"Formatting","properties":{"C_Cpp.vcFormat.indent.braces":{"type":"boolean","default":false,"markdownDescription":"Braces are indented by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.multiLineRelativeTo":{"type":"string","enum":["outermostParenthesis","innermostParenthesis","statementBegin"],"enumDescriptions":["Indent new line relative to the outermost open parenthesis.","Indent new line relative to the innermost open parenthesis.","Indent new line relative to the beginning of the current statement."],"default":"innermostParenthesis","description":"Determines what new line indentation is relative to.","scope":"resource"},"C_Cpp.vcFormat.indent.withinParentheses":{"type":"string","enum":["alignToParenthesis","indent"],"markdownEnumDescriptions":["New line is aligned under the opening parenthesis.","New line is indented based on `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`."],"default":"indent","markdownDescription":"When a new line is typed, it is aligned under the opening parenthesis or based on `#C_Cpp.vcFormat.indent.multiLineRelativeTo#`.","scope":"resource"},"C_Cpp.vcFormat.indent.preserveWithinParentheses":{"type":"boolean","default":false,"description":"In existing code, preserve the existing indent alignment of new lines within parentheses.","scope":"resource"},"C_Cpp.vcFormat.indent.caseLabels":{"type":"boolean","default":false,"markdownDescription":"Labels are indented relative to switch statements by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.caseContents":{"type":"boolean","default":true,"markdownDescription":"Code inside a `case` block is indented relative to its label by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.caseContentsWhenBlock":{"type":"boolean","default":false,"markdownDescription":"Indent braces following a case statement by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.lambdaBracesWhenParameter":{"type":"boolean","default":true,"markdownDescription":"Indent braces of lambdas used as function parameters relative to the start of the statement by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.gotoLabels":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"markdownEnumDescriptions":["Position goto labels to the left of the current code indentation, by the amount specified in the `#editor.tabSize#` setting.","Position goto labels at the leftmost edge of the code.","Goto labels will not be formatted."],"default":"oneLeft","description":"The position of goto labels.","scope":"resource"},"C_Cpp.vcFormat.indent.preprocessor":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"markdownEnumDescriptions":["Preprocessor directives are positioned to the left of the current code indentation, by the amount specified in the `#editor.tabSize#` setting.","Preprocessor directives are positioned at the leftmost edge of the code.","Preprocessor directives will not be formatted."],"default":"leftmostColumn","description":"The position of preprocessor directives.","scope":"resource"},"C_Cpp.vcFormat.indent.accessSpecifiers":{"type":"boolean","default":false,"markdownDescription":"Access specifiers are indented relative to class or struct definitions by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.namespaceContents":{"type":"boolean","default":true,"markdownDescription":"Code is indented relative to its enclosing namespace by the amount specified in the `#editor.tabSize#` setting.","scope":"resource"},"C_Cpp.vcFormat.indent.preserveComments":{"type":"boolean","default":false,"description":"Indentation of comments is not changed during formatting operations.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for namespaces.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.type":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for type definitions.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.function":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for functions.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.block":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for control blocks.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for lambda functions.","scope":"resource"},"C_Cpp.vcFormat.newLine.scopeBracesOnSeparateLines":{"type":"boolean","default":false,"description":"Place opening and closing braces for scopes on separate lines.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType":{"type":"boolean","default":false,"description":"For empty types, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction":{"type":"boolean","default":false,"description":"For empty function bodies, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeCatch":{"type":"boolean","default":true,"markdownDescription":"Place `catch` and similar keywords on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeElse":{"type":"boolean","default":true,"markdownDescription":"Place `else` on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeWhileInDoWhile":{"type":"boolean","default":false,"markdownDescription":"Place `while` in a `do`-`while` loop on a new line.","scope":"resource"},"C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["Add a space before the opening parenthesis of a function.","Spaces before opening parenthesis of a function are removed.","Spaces are left as entered."],"default":"remove","description":"Spacing between function names and opening parentheses of argument lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinParameterListParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in function parameter lists.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses":{"type":"boolean","default":false,"description":"When a function parameter list is empty, a space is inserted between its parentheses.","scope":"resource"},"C_Cpp.vcFormat.space.afterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"A space is added between the keyword and opening parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.withinControlFlowStatementParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis":{"type":"boolean","default":false,"description":"A space is added before the opening parenthesis of lambda argument lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinCastParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.afterCastCloseParenthesis":{"type":"boolean","default":false,"description":"A space is added after the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.withinExpressionParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a parenthesized expression.","scope":"resource"},"C_Cpp.vcFormat.space.beforeBlockOpenBrace":{"type":"boolean","default":true,"description":"A space is added before the opening braces of scope blocks.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyBraces":{"type":"boolean","default":false,"description":"When braces are empty and on the same line, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInitializerListOpenBrace":{"type":"boolean","default":false,"description":"A space is added before the opening brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinInitializerListBraces":{"type":"boolean","default":true,"description":"A space is added after the opening brace and also before the closing brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.preserveInInitializerList":{"type":"boolean","default":true,"description":"Spaces around commas are preserved inside uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.beforeOpenSquareBracket":{"type":"boolean","default":false,"description":"A space is added before opening square brackets.","scope":"resource"},"C_Cpp.vcFormat.space.withinSquareBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.beforeEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is added before the opening bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.groupSquareBrackets":{"type":"boolean","default":true,"description":"For multi-dimensional arrays, all space between brackets is removed. Other settings that control space are overridden.","scope":"resource"},"C_Cpp.vcFormat.space.withinLambdaBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeComma":{"type":"boolean","default":false,"description":"A space is added before every comma.","scope":"resource"},"C_Cpp.vcFormat.space.afterComma":{"type":"boolean","default":true,"description":"A space is added after every comma.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundMemberOperators":{"type":"boolean","default":true,"description":"Spaces around member access operators, pointer-to-member operators, and scope resolution operators are removed.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInheritanceColon":{"type":"boolean","default":true,"description":"A space is added before the colon for inherited types in class definitions.","scope":"resource"},"C_Cpp.vcFormat.space.beforeConstructorColon":{"type":"boolean","default":true,"description":"A space is added before the colon in constructor definitions.","scope":"resource"},"C_Cpp.vcFormat.space.removeBeforeSemicolon":{"type":"boolean","default":true,"description":"Spaces are removed before every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.insertAfterSemicolon":{"type":"boolean","default":false,"description":"A space is inserted after every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundUnaryOperator":{"type":"boolean","default":true,"description":"Spaces between unary operators and operands are removed.","scope":"resource"},"C_Cpp.vcFormat.space.aroundBinaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around binary operators.","scope":"resource"},"C_Cpp.vcFormat.space.aroundAssignmentOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around assignment operators.","scope":"resource"},"C_Cpp.vcFormat.space.pointerReferenceAlignment":{"type":"string","enum":["left","center","right","ignore"],"enumDescriptions":["Pointer and reference operators are aligned to the left.","Pointer and reference operators are centered.","Pointer and reference operators are aligned to the right.","Pointer and reference operators are not formatted."],"default":"left","description":"Spaces around pointer and reference operators.","scope":"resource"},"C_Cpp.vcFormat.space.aroundTernaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around conditional operators.","scope":"resource"},"C_Cpp.vcFormat.wrap.preserveBlocks":{"type":"string","enum":["oneLiners","allOneLineScopes","never"],"markdownEnumDescriptions":["A complete code block that is entered on one line is kept on one line, regardless of the values of any of the `C_Cpp.vcFormat.newLine.*` settings.","Any code where the opening and closing brace is entered on one line is kept on one line, regardless of the values of any of the `C_Cpp.vcFormat.newLine.*` settings.","Code blocks are always formatted based on the values of the `C_Cpp.vcFormat.newLine.*` settings."],"default":"oneLiners","description":"Wrapping options for blocks.","scope":"resource"},"C_Cpp.clang_format_path":{"type":"string","markdownDescription":"The full path of the `clang-format` executable. If not specified, and `clang-format` is available in the environment path, that is used unless the version bundled with the extension is newer. If not found in the environment path, the `clang-format` bundled with the extension will be used.","scope":"machine-overridable"},"C_Cpp.clang_format_style":{"type":"string","default":"file","markdownDescription":"Coding style, currently supports: `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`. Use `file` to load the style from a `.clang-format` file in the current or parent directory, or use `file:<path>/.clang-format` to reference a specific path. Use `{key: value, ...}` to set specific parameters. For example, the `Visual Studio` style is similar to: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["clangFormat","vcFormat","default","disabled"],"markdownEnumDescriptions":["`clang-format` will be used to format code.","The Visual C++ formatting engine will be used to format code.","By default, `clang-format` will be used to format the code. However, the Visual C++ formatting engine will be used if an `.editorconfig` file with relevant settings is found nearer to the code being formatted and `#C_Cpp.clang_format_style#` is the default value: `file`.","Code formatting will be disabled."],"default":"default","description":"Configures the formatting engine.","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","markdownDescription":"Name of the predefined style used as a fallback in case `clang-format` is invoked with style `file` but the `.clang-format` file is not found. Possible values are `Visual Studio`, `LLVM`, `Google`, `Chromium`, `Mozilla`, `WebKit`, `Microsoft`, `GNU`, `none`, or use `{key: value, ...}` to set specific parameters. For example, the `Visual Studio` style is similar to: `{ BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }`.","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"markdownDescription":"If set, overrides the include sorting behavior determined by the `SortIncludes` parameter.","scope":"resource"}}},{"title":"Code Documentation","properties":{"C_Cpp.doxygen.generateOnType":{"type":"boolean","default":true,"description":"Controls whether to automatically insert the Doxygen comment after typing the chosen comment style.","scope":"resource"},"C_Cpp.doxygen.generatedStyle":{"type":"string","enum":["///","/**","/*!","//!"],"default":"///","description":"The string of characters used as the starting line of the Doxygen comment.","scope":"resource"},"C_Cpp.doxygen.sectionTags":{"type":"array","default":["attention","tparam","param","result","returns","retval","exception","deprecated","warning","note"],"items":{"type":"string","enum":["attention","author","authors","bug","copyright","date","deprecated","details","exception","invariant","note","param","pre","post","remark","remarks","result","returns","retval","sa","see","since","tparam","test","todo","version","warning"]},"description":"Select the Doxygen section tags that you would like to appear on hover in the tooltip area when the 'Simplify Structured Comments' setting is enabled. ","scope":"resource"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","markdownDescription":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ` * ` for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"uniqueItems":true,"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"window"},"C_Cpp.markdownInComments":{"type":"string","enum":["subsetEnabled","enabled","disabled"],"enumDescriptions":["Enable all markdown features in the hover tooltip except those that include the '_' and '*' characters.","Enable all markdown features in the hover tooltip.","Disable all markdown features in the hover tooltip."],"default":"subsetEnabled","description":"Select whether markdown will be available in the hover tooltip. By default, only a subset of markdown will be applied to comments in the hover tooltip.","scope":"resource"},"C_Cpp.simplifyStructuredComments":{"type":"boolean","default":true,"markdownDescription":"If `true`, tooltips of hover and auto-complete will only display certain labels of structured comments. Otherwise, all comments are displayed.","scope":"application"}}},{"title":"Code Analysis","properties":{"C_Cpp.codeAnalysis.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for code analysis. The default of `null` (empty) uses half the value inherited from `#C_Cpp.maxConcurrentThreads#`.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.codeAnalysis.maxMemory":{"type":["integer","null"],"markdownDescription":"Fewer code analysis processes will run concurrently after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.codeAnalysis.updateDelay":{"type":"number","default":2000,"markdownDescription":"Controls the delay in milliseconds before code analysis starts processing after a save is triggered from an edit when `#files.autoSave#` is `afterDelay` and `#C_Cpp.codeAnalysis.runAutomatically#` is `true`.","scope":"application","minimum":0,"maximum":6000},"C_Cpp.codeAnalysis.exclude":{"type":"object","markdownDescription":"Configure glob patterns for excluding folders and files for code analysis. Files not under the workspace folder are always excluded. Inherits values from `#files.exclude#` and `#C_Cpp.files.exclude#`. Learn more about [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).","default":{},"additionalProperties":{"anyOf":[{"type":"boolean","markdownDescription":"The glob pattern to match file paths against. Set to `true` or `false` to enable or disable the pattern."},{"type":"object","properties":{"when":{"type":"string","pattern":"\\w*\\$\\(basename\\)\\w*","default":"$(basename).ext","markdownDescription":"Additional check on the siblings of a matching file. Use `$(basename)` as variable for the matching file name."}}}]},"scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.codeAction.formatFixes":{"type":"boolean","markdownDescription":"If `true`, formatting will be run on the lines changed by 'Fix' code actions.","default":true,"scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.codeAction.showClear":{"type":"string","description":"Controls which 'Clear' code analysis problem code action options are available. Changing the setting to show more options may require re-running code analysis.","enum":["None","AllOnly","AllAndAllType","AllAndAllTypeAndThis"],"enumDescriptions":["Show no 'Clear' code actions.","Show only the 'Clear all' code action (or 'Clear all <type>' if there is only one type or 'Clear this' if there is only one problem).","Show the 'Clear all' code action (if there are multiple problem types) and the 'Clear all <type>' code action (or 'Clear this' if there is only one problem for the <type>)","Show the 'Clear all' (if there are multiple problem types), 'Clear all <type>' (if there are multiple problems for the <type>), and 'Clear this' code actions"],"default":"AllAndAllTypeAndThis","scope":"application"},"C_Cpp.codeAnalysis.clangTidy.codeAction.showDisable":{"type":"boolean","markdownDescription":"If `true`, the 'Disable' code action will be shown when available (the next time code analysis is run). When the 'Disable' code action is used, it adds the warning code to the `C_Cpp.codeAnalysis.clangTidy.checks.disabled` setting.","default":true,"scope":"application"},"C_Cpp.codeAnalysis.clangTidy.codeAction.showDocumentation":{"type":"boolean","markdownDescription":"If `true`, the 'Show Documentation for' code action will be shown when available (the next time code analysis is run).","default":true,"scope":"application"},"C_Cpp.codeAnalysis.runAutomatically":{"type":"boolean","markdownDescription":"If `true`, code analysis will run automatically on a file after it is opened or saved.","default":true,"scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.enabled":{"type":"boolean","default":false,"markdownDescription":"If `true`, code analysis using `clang-tidy` will be enabled and will run after a file is opened or saved if `#C_Cpp.codeAnalysis.runAutomatically#` is `true` (the default).","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.path":{"type":"string","markdownDescription":"The full path of the `clang-tidy` executable. If not specified, and `clang-tidy` is available in the environment path, that is used unless the version bundled with the extension is newer. If not found in the environment path, the `clang-tidy` bundled with the extension will be used.","scope":"machine-overridable"},"C_Cpp.codeAnalysis.clangTidy.config":{"type":"string","markdownDescription":"Specifies a `clang-tidy` configuration in YAML/JSON format: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{key: x, value: y}]}`. When the value is empty, `clang-tidy` will attempt to find a file named `.clang-tidy` for each source file in its parent directories.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.fallbackConfig":{"type":"string","markdownDescription":"Specifies a `clang-tidy` configuration in YAML/JSON format to be used as a fallback when `#C_Cpp.codeAnalysis.clangTidy.config#` is not set and no `.clang-tidy` file is found: `{Checks: '-*,clang-analyzer-*', CheckOptions: [{key: x, value: y}]}`.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.headerFilter":{"type":["string","null"],"default":null,"markdownDescription":"A POSIX extended regular expression (ERE) matching the names of the headers to output diagnostics from. Diagnostics from the main file of each translation unit are always displayed. The `${workspaceFolder}` variable is supported (and is used as the default fallback value if no `.clang-tidy` file exists). If this option is not `null` (empty), it overrides the `HeaderFilterRegex` option in a `.clang-tidy` file, if any.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.args":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Additional command line arguments to pass to `clang-tidy`. These take precedence over the equivalent `C_Cpp.codeAnalysis.clangTidy.*` settings.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.useBuildPath":{"type":"boolean","default":false,"markdownDescription":"If `true` and `compileCommands` is set, the `-p=<build-path>` argument is passed to `clang-tidy` instead of build arguments being passed after `--`. This may not work if environment variables aren't set so that system includes can be found.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.checks.enabled":{"type":"array","items":{"type":"string","enum":["*","abseil-*","abseil-cleanup-ctad","abseil-duration-*","abseil-duration-addition","abseil-duration-comparison","abseil-duration-conversion-cast","abseil-duration-division","abseil-duration-factory-*","abseil-duration-factory-float","abseil-duration-factory-scale","abseil-duration-subtraction","abseil-duration-unnecessary-conversion","abseil-faster-strsplit-delimiter","abseil-no-*","abseil-no-internal-dependencies","abseil-no-namespace","abseil-redundant-strcat-calls","abseil-str-cat-append","abseil-string-find-*","abseil-string-find-startswith","abseil-string-find-str-contains","abseil-time-*","abseil-time-comparison","abseil-time-subtraction","abseil-upgrade-duration-conversions","altera-*","altera-id-dependent-backward-branch","altera-kernel-name-restriction","altera-single-work-item-barrier","altera-struct-pack-align","altera-unroll-loops","android-*","android-cloexec-*","android-cloexec-accept","android-cloexec-accept4","android-cloexec-creat","android-cloexec-dup","android-cloexec-epoll-*","android-cloexec-epoll-create","android-cloexec-epoll-create1","android-cloexec-fopen","android-cloexec-inotify-*","android-cloexec-inotify-init","android-cloexec-inotify-init1","android-cloexec-memfd-create","android-cloexec-open","android-cloexec-pipe","android-cloexec-pipe2","android-cloexec-socket","android-comparison-in-temp-failure-retry","boost-use-*","boost-use-ranges","boost-use-to-string","bugprone-*","bugprone-argument-comment","bugprone-assert-side-effect","bugprone-assignment-in-if-condition","bugprone-bad-signal-to-kill-thread","bugprone-bool-pointer-implicit-conversion","bugprone-branch-clone","bugprone-casting-through-void","bugprone-chained-comparison","bugprone-compare-pointer-to-member-virtual-function","bugprone-copy-constructor-init","bugprone-crtp-constructor-accessibility","bugprone-dangling-handle","bugprone-dynamic-static-initializers","bugprone-easily-swappable-parameters","bugprone-empty-catch","bugprone-exception-escape","bugprone-fold-init-type","bugprone-forward-declaration-namespace","bugprone-forwarding-reference-overload","bugprone-implicit-widening-of-multiplication-result","bugprone-inaccurate-erase","bugprone-inc-dec-in-conditions","bugprone-incorrect-*","bugprone-incorrect-enable-if","bugprone-incorrect-roundings","bugprone-infinite-loop","bugprone-integer-division","bugprone-lambda-function-name","bugprone-macro-parentheses","bugprone-macro-repeated-side-effects","bugprone-misplaced-*","bugprone-misplaced-operator-in-strlen-in-alloc","bugprone-misplaced-pointer-arithmetic-in-alloc","bugprone-misplaced-widening-cast","bugprone-move-forwarding-reference","bugprone-multi-level-implicit-pointer-conversion","bugprone-multiple-*","bugprone-multiple-new-in-one-expression","bugprone-multiple-statement-macro","bugprone-narrowing-conversions","bugprone-no-escape","bugprone-non-zero-enum-to-bool-conversion","bugprone-not-null-terminated-result","bugprone-optional-value-conversion","bugprone-parent-virtual-call","bugprone-pointer-arithmetic-on-polymorphic-object","bugprone-posix-return","bugprone-redundant-branch-condition","bugprone-reserved-identifier","bugprone-return-const-ref-from-parameter","bugprone-shared-ptr-array-mismatch","bugprone-signal-handler","bugprone-signed-char-misuse","bugprone-sizeof-*","bugprone-sizeof-container","bugprone-sizeof-expression","bugprone-spuriously-wake-up-functions","bugprone-standalone-empty","bugprone-string-*","bugprone-string-constructor","bugprone-string-integer-assignment","bugprone-string-literal-with-embedded-nul","bugprone-stringview-nullptr","bugprone-suspicious-*","bugprone-suspicious-enum-usage","bugprone-suspicious-include","bugprone-suspicious-memory-comparison","bugprone-suspicious-memset-usage","bugprone-suspicious-missing-comma","bugprone-suspicious-realloc-usage","bugprone-suspicious-semicolon","bugprone-suspicious-string-compare","bugprone-suspicious-stringview-data-usage","bugprone-swapped-arguments","bugprone-switch-missing-default-case","bugprone-terminating-continue","bugprone-throw-keyword-missing","bugprone-too-small-loop-variable","bugprone-unchecked-optional-access","bugprone-undefined-memory-manipulation","bugprone-undelegated-constructor","bugprone-unhandled-*","bugprone-unhandled-exception-at-new","bugprone-unhandled-self-assignment","bugprone-unique-ptr-array-mismatch","bugprone-unsafe-functions","bugprone-unused-*","bugprone-unused-local-non-trivial-variable","bugprone-unused-raii","bugprone-unused-return-value","bugprone-use-after-move","bugprone-virtual-near-miss","cert-*","cert-con*","cert-con36-c","cert-con54-cpp","cert-ctr56-cpp","cert-dcl*","cert-dcl03-c","cert-dcl16-c","cert-dcl37-c","cert-dcl50-cpp","cert-dcl51-cpp","cert-dcl54-cpp","cert-dcl58-cpp","cert-dcl59-cpp","cert-env33-c","cert-err*","cert-err09-cpp","cert-err33-c","cert-err34-c","cert-err52-cpp","cert-err58-cpp","cert-err60-cpp","cert-err61-cpp","cert-exp42-c","cert-fio38-c","cert-flp*","cert-flp30-c","cert-flp37-c","cert-int09-c","cert-mem57-cpp","cert-msc*","cert-msc30-c","cert-msc32-c","cert-msc33-c","cert-msc50-cpp","cert-msc51-cpp","cert-msc54-cpp","cert-oop*","cert-oop11-cpp","cert-oop54-cpp","cert-oop57-cpp","cert-oop58-cpp","cert-pos*","cert-pos44-c","cert-pos47-c","cert-sig30-c","cert-str34-c","clang-analyzer-*","clang-analyzer-core.*","clang-analyzer-core.BitwiseShift","clang-analyzer-core.CallAndMessage","clang-analyzer-core.DivideZero","clang-analyzer-core.DynamicTypePropagation","clang-analyzer-core.NonNullParamChecker","clang-analyzer-core.NullDereference","clang-analyzer-core.StackAddressEscape","clang-analyzer-core.UndefinedBinaryOperatorResult","clang-analyzer-core.uninitialized.*","clang-analyzer-core.uninitialized.ArraySubscript","clang-analyzer-core.uninitialized.Assign","clang-analyzer-core.uninitialized.Branch","clang-analyzer-core.uninitialized.CapturedBlockVariable","clang-analyzer-core.uninitialized.NewArraySize","clang-analyzer-core.uninitialized.UndefReturn","clang-analyzer-core.VLASize","clang-analyzer-cplusplus.*","clang-analyzer-cplusplus.ArrayDelete","clang-analyzer-cplusplus.InnerPointer","clang-analyzer-cplusplus.Move","clang-analyzer-cplusplus.NewDelete","clang-analyzer-cplusplus.NewDeleteLeaks","clang-analyzer-cplusplus.PlacementNew","clang-analyzer-cplusplus.PureVirtualCall","clang-analyzer-cplusplus.StringChecker","clang-analyzer-deadcode.DeadStores","clang-analyzer-fuchsia.HandleChecker","clang-analyzer-nullablity.*","clang-analyzer-nullability.NullableDereferenced","clang-analyzer-nullability.NullablePassedToNonnull","clang-analyzer-nullability.NullableReturnedFromNonnull","clang-analyzer-nullability.NullPassedToNonnull","clang-analyzer-nullability.NullReturnedFromNonnull","clang-analyzer-optin.*","clang-analyzer-optin.core.EnumCastOutOfRange","clang-analyzer-optin.cplusplus.*","clang-analyzer-optin.cplusplus.UninitializedObject","clang-analyzer-optin.cplusplus.VirtualCall","clang-analyzer-optin.mpi.MPI-Checker","clang-analyzer-optin.osx.*","clang-analyzer-optin.osx.cocoa.localizability.*","clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker","clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker","clang-analyzer-optin.osx.OSObjectCStyleCast","clang-analyzer-optin.performance.*","clang-analyzer-optin.performance.GCDAntipattern","clang-analyzer-optin.performance.Padding","clang-analyzer-optin.portability.UnixAPI","clang-analyzer-optin.taint.TaintedAlloc","clang-analyzer-osx.*","clang-analyzer-osx.API","clang-analyzer-osx.cocoa.*","clang-analyzer-osx.cocoa.AtSync","clang-analyzer-osx.cocoa.AutoreleaseWrite","clang-analyzer-osx.cocoa.ClassRelease","clang-analyzer-osx.cocoa.Dealloc","clang-analyzer-osx.cocoa.IncompatibleMethodTypes","clang-analyzer-osx.cocoa.Loops","clang-analyzer-osx.cocoa.MissingSuperCall","clang-analyzer-osx.cocoa.NilArg","clang-analyzer-osx.cocoa.NonNilReturnValue","clang-analyzer-osx.cocoa.NSAutoreleasePool","clang-analyzer-osx.cocoa.NSError","clang-analyzer-osx.cocoa.ObjCGenerics","clang-analyzer-osx.cocoa.RetainCount","clang-analyzer-osx.cocoa.RetainCountBase","clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak","clang-analyzer-osx.cocoa.SelfInit","clang-analyzer-osx.cocoa.SuperDealloc","clang-analyzer-osx.cocoa.UnusedIvars","clang-analyzer-osx.cocoa.VariadicMethodTypes","clang-analyzer-osx.coreFoundation.*","clang-analyzer-osx.coreFoundation.CFError","clang-analyzer-osx.coreFoundation.CFNumber","clang-analyzer-osx.coreFoundation.CFRetainRelease","clang-analyzer-osx.coreFoundation.containers.*","clang-analyzer-osx.coreFoundation.containers.OutOfBounds","clang-analyzer-osx.coreFoundation.containers.PointerSizedValues","clang-analyzer-osx.MIG","clang-analyzer-osx.NumberObjectConversion","clang-analyzer-osx.ObjCProperty","clang-analyzer-osx.OSObjectRetainCount","clang-analyzer-osx.SecKeychainAPI","clang-analyzer-security.*","clang-analyzer-security.cert.env.InvalidPtr","clang-analyzer-security.FloatLoopCounter","clang-analyzer-security.insecureAPI.*","clang-analyzer-security.insecureAPI.bcmp","clang-analyzer-security.insecureAPI.bcopy","clang-analyzer-security.insecureAPI.bzero","clang-analyzer-security.insecureAPI.decodeValueOfObjCType","clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling","clang-analyzer-security.insecureAPI.getpw","clang-analyzer-security.insecureAPI.gets","clang-analyzer-security.insecureAPI.mkstemp","clang-analyzer-security.insecureAPI.mktemp","clang-analyzer-security.insecureAPI.rand","clang-analyzer-security.insecureAPI.strcpy","clang-analyzer-security.insecureAPI.UncheckedReturn","clang-analyzer-security.insecureAPI.vfork","clang-analyzer-security.PutenvStackArray","clang-analyzer-security.SetgidSetuidOrder","clang-analyzer-unix.*","clang-analyzer-unix.API","clang-analyzer-unix.BlockInCriticalSection","clang-analyzer-unix.cstring.*","clang-analyzer-unix.cstring.BadSizeArg","clang-analyzer-unix.cstring.NullArg","clang-analyzer-unix.Errno","clang-analyzer-unix.Malloc","clang-analyzer-unix.MallocSizeof","clang-analyzer-unix.MismatchedDeallocator","clang-analyzer-unix.StdCLibraryFunctions","clang-analyzer-unix.Stream","clang-analyzer-unix.Vfork","clang-analyzer-valist.*","clang-analyzer-valist.CopyToSelf","clang-analyzer-valist.Uninitialized","clang-analyzer-valist.Unterminated","clang-analyzer-webkit.NoUncountedMemberChecker","clang-analyzer-webkit.RefCntblBaseVirtualDtor","clang-analyzer-webkit.UncountedLambdaCapturesChecker","concurrency-*","concurrency-mt-unsafe","concurrency-thread-canceltype-asynchronous","cppcoreguidelines-*","cppcoreguidelines-avoid-*","cppcoreguidelines-avoid-c-arrays","cppcoreguidelines-avoid-capturing-lambda-coroutines","cppcoreguidelines-avoid-const-or-ref-data-members","cppcoreguidelines-avoid-do-while","cppcoreguidelines-avoid-goto","cppcoreguidelines-avoid-magic-numbers","cppcoreguidelines-avoid-non-const-global-variables","cppcoreguidelines-avoid-reference-coroutine-parameters","cppcoreguidelines-c-copy-assignment-signature","cppcoreguidelines-explicit-virtual-functions","cppcoreguidelines-init-variables","cppcoreguidelines-interfaces-global-init","cppcoreguidelines-macro-to-enum","cppcoreguidelines-macro-usage","cppcoreguidelines-misleading-capture-default-by-value","cppcoreguidelines-missing-std-forward","cppcoreguidelines-narrowing-conversions","cppcoreguidelines-no-*","cppcoreguidelines-no-malloc","cppcoreguidelines-no-suspend-with-lock","cppcoreguidelines-noexcept-*","cppcoreguidelines-noexcept-destructor","cppcoreguidelines-noexcept-move-operations","cppcoreguidelines-noexcept-swap","cppcoreguidelines-non-private-member-variables-in-classes","cppcoreguidelines-owning-memory","cppcoreguidelines-prefer-member-initializer","cppcoreguidelines-pro-bounds-*","cppcoreguidelines-pro-bounds-array-to-pointer-decay","cppcoreguidelines-pro-bounds-constant-array-index","cppcoreguidelines-pro-bounds-pointer-arithmetic","cppcoreguidelines-pro-type-*","cppcoreguidelines-pro-type-const-cast","cppcoreguidelines-pro-type-cstyle-cast","cppcoreguidelines-pro-type-member-init","cppcoreguidelines-pro-type-reinterpret-cast","cppcoreguidelines-pro-type-static-cast-downcast","cppcoreguidelines-pro-type-union-access","cppcoreguidelines-pro-type-vararg","cppcoreguidelines-rvalue-reference-param-not-moved","cppcoreguidelines-slicing","cppcoreguidelines-special-member-functions","cppcoreguidelines-use-default-member-init","cppcoreguidelines-virtual-class-destructor","darwin-*","darwin-avoid-spinlock","darwin-dispatch-once-nonstatic","fuchsia-*","fuchsia-default-*","fuchsia-default-arguments-calls","fuchsia-default-arguments-declarations","fuchsia-header-anon-namespaces","fuchsia-multiple-inheritance","fuchsia-overloaded-operator","fuchsia-statically-constructed-objects","fuchsia-trailing-return","fuchsia-virtual-inheritance","google-*","google-build-*","google-build-explicit-make-pair","google-build-namespaces","google-build-using-namespace","google-default-arguments","google-explicit-constructor","google-global-names-in-headers","google-objc-*","google-objc-avoid-*","google-objc-avoid-nsobject-new","google-objc-avoid-throwing-exception","google-objc-function-naming","google-objc-global-variable-declaration","google-readability-*","google-readability-avoid-underscore-in-googletest-name","google-readability-braces-around-statements","google-readability-casting","google-readability-function-size","google-readability-namespace-comments","google-readability-todo","google-runtime-*","google-runtime-int","google-runtime-operator","google-upgrade-googletest-case","hicpp-*","hicpp-avoid-*","hicpp-avoid-c-arrays","hicpp-avoid-goto","hicpp-braces-around-statements","hicpp-deprecated-headers","hicpp-exception-baseclass","hicpp-explicit-conversions","hicpp-function-size","hicpp-ignored-remove-result","hicpp-invalid-access-moved","hicpp-member-init","hicpp-move-const-arg","hicpp-multiway-paths-covered","hicpp-named-parameter","hicpp-new-delete-operators","hicpp-no-*","hicpp-no-array-decay","hicpp-no-assembler","hicpp-no-malloc","hicpp-noexcept-move","hicpp-signed-bitwise","hicpp-special-member-functions","hicpp-static-assert","hicpp-undelegated-constructor","hicpp-uppercase-literal-suffix","hicpp-use-*","hicpp-use-auto","hicpp-use-emplace","hicpp-use-equals-*","hicpp-use-equals-default","hicpp-use-equals-delete","hicpp-use-noexcept","hicpp-use-nullptr","hicpp-use-override","hicpp-vararg","linuxkernel-must-check-errs","llvm-*","llvm-else-after-return","llvm-header-guard","llvm-include-order","llvm-namespace-comment","llvm-prefer-*","llvm-prefer-isa-or-dyn-cast-in-conditionals","llvm-prefer-register-over-unsigned","llvm-qualified-auto","llvm-twine-local","llvmlibc-*","llvmlibc-callee-namespace","llvmlibc-implementation-in-namespace","llvmlibc-inline-function-decl","llvmlibc-restrict-system-libc-headers","misc-*","misc-confusable-identifiers","misc-const-correctness","misc-coroutine-hostile-raii","misc-definitions-in-headers","misc-header-include-cycle","misc-include-cleaner","misc-misleading-*","misc-misleading-bidirectional","misc-misleading-identifier","misc-misplaced-const","misc-new-delete-overloads","misc-no-recursion","misc-non-*","misc-non-copyable-objects","misc-non-private-member-variables-in-classes","misc-redundant-expression","misc-static-assert","misc-throw-by-value-catch-by-reference","misc-unconventional-assign-operator","misc-uniqueptr-reset-release","misc-unused-*","misc-unused-alias-decls","misc-unused-parameters","misc-unused-using-decls","misc-use-*","misc-use-anonymous-namespace","misc-use-internal-linkage","modernize-*","modernize-avoid-*","modernize-avoid-bind","modernize-avoid-c-arrays","modernize-concat-nested-namespaces","modernize-deprecated-*","modernize-deprecated-headers","modernize-deprecated-ios-base-aliases","modernize-loop-convert","modernize-macro-to-enum","modernize-make-*","modernize-make-shared","modernize-make-unique","modernize-min-max-use-initializer-list","modernize-pass-by-value","modernize-raw-string-literal","modernize-redundant-void-arg","modernize-replace-*","modernize-replace-auto-ptr","modernize-replace-disallow-copy-and-assign-macro","modernize-replace-random-shuffle","modernize-return-braced-init-list","modernize-shrink-to-fit","modernize-type-traits","modernize-unary-static-assert","modernize-use-*","modernize-use-auto","modernize-use-bool-literals","modernize-use-default","modernize-use-constraints","modernize-use-default-member-init","modernize-use-designated-initializers","modernize-use-emplace","modernize-use-equals-*","modernize-use-equals-default","modernize-use-equals-delete","modernize-use-nodiscard","modernize-use-noexcept","modernize-use-nullptr","modernize-use-override","modernize-use-ranges","modernize-use-starts-ends-with","modernize-use-std-*","modernize-use-std-format","modernize-use-std-numbers","modernize-use-std-print","modernize-use-trailing-return-type","modernize-use-transparent-functors","modernize-use-uncaught-exceptions","modernize-use-using","mpi-*","mpi-buffer-deref","mpi-type-mismatch","objc-*","objc-assert-equals","objc-avoid-nserror-init","objc-dealloc-in-category","objc-forbidden-subclassing","objc-missing-hash","objc-nsdate-formatter","objc-nsinvocation-argument-lifetime","objc-property-declaration","objc-super-self","openmp-*","openmp-exception-escape","openmp-use-default-none","performance-*","performance-avoid-endl","performance-enum-size","performance-faster-string-find","performance-for-range-copy","performance-implicit-conversion-in-loop","performance-inefficient-*","performance-inefficient-algorithm","performance-inefficient-string-concatenation","performance-inefficient-vector-operation","performance-move-*","performance-move-const-arg","performance-move-constructor-init","performance-no-*","performance-no-automatic-move","performance-no-int-to-ptr","performance-noexcept-*","performance-noexcept-destructor","performance-noexcept-move-constructor","performance-noexcept-swap","performance-trivially-destructible","performance-type-promotion-in-math-fn","performance-unnecessary-*","performance-unnecessary-copy-initialization","performance-unnecessary-value-param","portability-*","portability-restrict-system-includes","portability-simd-intrinsics","portability-std-allocator-const","readability-*","readability-avoid-*","readability-avoid-const-params-in-decls","readability-avoid-nested-conditional-operator","readability-avoid-return-with-void-value","readability-avoid-unconditional-preprocessor-if","readability-braces-around-statements","readability-const-return-type","readability-container-*","readability-container-contains","readability-container-data-pointer","readability-container-size-empty","readability-convert-member-functions-to-static","readability-delete-null-pointer","readability-duplicate-include","readability-else-after-return","readability-enum-initial-value","readability-function-*","readability-function-cognitive-complexity","readability-function-size","readability-identifier-*","readability-identifier-length","readability-identifier-naming","readability-implicit-bool-conversion","readability-inconsistent-declaration-parameter-name","readability-isolate-declaration","readability-magic-numbers","readability-make-member-function-const","readability-math-missing-parentheses","readability-misleading-indentation","readability-misplaced-array-index","readability-named-parameter","readability-non-const-parameter","readability-operators-representation","readability-qualified-auto","readability-redundant-*","readability-redundant-access-specifiers","readability-redundant-casting","readability-redundant-control-flow","readability-redundant-declaration","readability-redundant-function-ptr-dereference","readability-redundant-inline-specifier","readability-redundant-member-init","readability-redundant-preprocessor","readability-redundant-smartptr-get","readability-redundant-string-*","readability-redundant-string-cstr","readability-redundant-string-init","readability-reference-to-constructed-temporary","readability-simplify-*","readability-simplify-boolean-expr","readability-simplify-subscript-expr","readability-static-*","readability-static-accessed-through-instance","readability-static-definition-in-anonymous-namespace","readability-string-compare","readability-suspicious-call-argument","readability-uniqueptr-delete-release","readability-uppercase-literal-suffix","readability-use-*","readability-use-anyofallof","readability-use-std-min-max","zircon-temporary-objects"]},"uniqueItems":true,"markdownDescription":"List of enabled `clang-tidy` checks. The values are appended to the `Checks` in a `.clang-tidy` file or `#C_Cpp.codeAnalysis.clangTidy.config#`, if any. The default check `clang-analyzer-*` is always used unless it is explicitly disabled.","scope":"resource"},"C_Cpp.codeAnalysis.clangTidy.checks.disabled":{"type":"array","items":{"type":"string","enum":["*","abseil-*","abseil-cleanup-ctad","abseil-duration-*","abseil-duration-addition","abseil-duration-comparison","abseil-duration-conversion-cast","abseil-duration-division","abseil-duration-factory-*","abseil-duration-factory-float","abseil-duration-factory-scale","abseil-duration-subtraction","abseil-duration-unnecessary-conversion","abseil-faster-strsplit-delimiter","abseil-no-*","abseil-no-internal-dependencies","abseil-no-namespace","abseil-redundant-strcat-calls","abseil-str-cat-append","abseil-string-find-*","abseil-string-find-startswith","abseil-string-find-str-contains","abseil-time-*","abseil-time-comparison","abseil-time-subtraction","abseil-upgrade-duration-conversions","altera-*","altera-id-dependent-backward-branch","altera-kernel-name-restriction","altera-single-work-item-barrier","altera-struct-pack-align","altera-unroll-loops","android-*","android-cloexec-*","android-cloexec-accept","android-cloexec-accept4","android-cloexec-creat","android-cloexec-dup","android-cloexec-epoll-*","android-cloexec-epoll-create","android-cloexec-epoll-create1","android-cloexec-fopen","android-cloexec-inotify-*","android-cloexec-inotify-init","android-cloexec-inotify-init1","android-cloexec-memfd-create","android-cloexec-open","android-cloexec-pipe","android-cloexec-pipe2","android-cloexec-socket","android-comparison-in-temp-failure-retry","boost-use-*","boost-use-ranges","boost-use-to-string","bugprone-*","bugprone-argument-comment","bugprone-assert-side-effect","bugprone-assignment-in-if-condition","bugprone-bad-signal-to-kill-thread","bugprone-bool-pointer-implicit-conversion","bugprone-branch-clone","bugprone-casting-through-void","bugprone-chained-comparison","bugprone-compare-pointer-to-member-virtual-function","bugprone-copy-constructor-init","bugprone-crtp-constructor-accessibility","bugprone-dangling-handle","bugprone-dynamic-static-initializers","bugprone-easily-swappable-parameters","bugprone-empty-catch","bugprone-exception-escape","bugprone-fold-init-type","bugprone-forward-declaration-namespace","bugprone-forwarding-reference-overload","bugprone-implicit-widening-of-multiplication-result","bugprone-inaccurate-erase","bugprone-inc-dec-in-conditions","bugprone-incorrect-*","bugprone-incorrect-enable-if","bugprone-incorrect-roundings","bugprone-infinite-loop","bugprone-integer-division","bugprone-lambda-function-name","bugprone-macro-parentheses","bugprone-macro-repeated-side-effects","bugprone-misplaced-*","bugprone-misplaced-operator-in-strlen-in-alloc","bugprone-misplaced-pointer-arithmetic-in-alloc","bugprone-misplaced-widening-cast","bugprone-move-forwarding-reference","bugprone-multi-level-implicit-pointer-conversion","bugprone-multiple-*","bugprone-multiple-new-in-one-expression","bugprone-multiple-statement-macro","bugprone-narrowing-conversions","bugprone-no-escape","bugprone-non-zero-enum-to-bool-conversion","bugprone-not-null-terminated-result","bugprone-optional-value-conversion","bugprone-parent-virtual-call","bugprone-pointer-arithmetic-on-polymorphic-object","bugprone-posix-return","bugprone-redundant-branch-condition","bugprone-reserved-identifier","bugprone-return-const-ref-from-parameter","bugprone-shared-ptr-array-mismatch","bugprone-signal-handler","bugprone-signed-char-misuse","bugprone-sizeof-*","bugprone-sizeof-container","bugprone-sizeof-expression","bugprone-spuriously-wake-up-functions","bugprone-standalone-empty","bugprone-string-*","bugprone-string-constructor","bugprone-string-integer-assignment","bugprone-string-literal-with-embedded-nul","bugprone-stringview-nullptr","bugprone-suspicious-*","bugprone-suspicious-enum-usage","bugprone-suspicious-include","bugprone-suspicious-memory-comparison","bugprone-suspicious-memset-usage","bugprone-suspicious-missing-comma","bugprone-suspicious-realloc-usage","bugprone-suspicious-semicolon","bugprone-suspicious-string-compare","bugprone-suspicious-stringview-data-usage","bugprone-swapped-arguments","bugprone-switch-missing-default-case","bugprone-terminating-continue","bugprone-throw-keyword-missing","bugprone-too-small-loop-variable","bugprone-unchecked-optional-access","bugprone-undefined-memory-manipulation","bugprone-undelegated-constructor","bugprone-unhandled-*","bugprone-unhandled-exception-at-new","bugprone-unhandled-self-assignment","bugprone-unique-ptr-array-mismatch","bugprone-unsafe-functions","bugprone-unused-*","bugprone-unused-local-non-trivial-variable","bugprone-unused-raii","bugprone-unused-return-value","bugprone-use-after-move","bugprone-virtual-near-miss","cert-*","cert-con*","cert-con36-c","cert-con54-cpp","cert-ctr56-cpp","cert-dcl*","cert-dcl03-c","cert-dcl16-c","cert-dcl37-c","cert-dcl50-cpp","cert-dcl51-cpp","cert-dcl54-cpp","cert-dcl58-cpp","cert-dcl59-cpp","cert-env33-c","cert-err*","cert-err09-cpp","cert-err33-c","cert-err34-c","cert-err52-cpp","cert-err58-cpp","cert-err60-cpp","cert-err61-cpp","cert-exp42-c","cert-fio38-c","cert-flp*","cert-flp30-c","cert-flp37-c","cert-int09-c","cert-mem57-cpp","cert-msc*","cert-msc30-c","cert-msc32-c","cert-msc33-c","cert-msc50-cpp","cert-msc51-cpp","cert-msc54-cpp","cert-oop*","cert-oop11-cpp","cert-oop54-cpp","cert-oop57-cpp","cert-oop58-cpp","cert-pos*","cert-pos44-c","cert-pos47-c","cert-sig30-c","cert-str34-c","clang-analyzer-*","clang-analyzer-core.*","clang-analyzer-core.BitwiseShift","clang-analyzer-core.CallAndMessage","clang-analyzer-core.DivideZero","clang-analyzer-core.DynamicTypePropagation","clang-analyzer-core.NonNullParamChecker","clang-analyzer-core.NullDereference","clang-analyzer-core.StackAddressEscape","clang-analyzer-core.UndefinedBinaryOperatorResult","clang-analyzer-core.uninitialized.*","clang-analyzer-core.uninitialized.ArraySubscript","clang-analyzer-core.uninitialized.Assign","clang-analyzer-core.uninitialized.Branch","clang-analyzer-core.uninitialized.CapturedBlockVariable","clang-analyzer-core.uninitialized.NewArraySize","clang-analyzer-core.uninitialized.UndefReturn","clang-analyzer-core.VLASize","clang-analyzer-cplusplus.*","clang-analyzer-cplusplus.ArrayDelete","clang-analyzer-cplusplus.InnerPointer","clang-analyzer-cplusplus.Move","clang-analyzer-cplusplus.NewDelete","clang-analyzer-cplusplus.NewDeleteLeaks","clang-analyzer-cplusplus.PlacementNew","clang-analyzer-cplusplus.PureVirtualCall","clang-analyzer-cplusplus.StringChecker","clang-analyzer-deadcode.DeadStores","clang-analyzer-fuchsia.HandleChecker","clang-analyzer-nullablity.*","clang-analyzer-nullability.NullableDereferenced","clang-analyzer-nullability.NullablePassedToNonnull","clang-analyzer-nullability.NullableReturnedFromNonnull","clang-analyzer-nullability.NullPassedToNonnull","clang-analyzer-nullability.NullReturnedFromNonnull","clang-analyzer-optin.*","clang-analyzer-optin.core.EnumCastOutOfRange","clang-analyzer-optin.cplusplus.*","clang-analyzer-optin.cplusplus.UninitializedObject","clang-analyzer-optin.cplusplus.VirtualCall","clang-analyzer-optin.mpi.MPI-Checker","clang-analyzer-optin.osx.*","clang-analyzer-optin.osx.cocoa.localizability.*","clang-analyzer-optin.osx.cocoa.localizability.EmptyLocalizationContextChecker","clang-analyzer-optin.osx.cocoa.localizability.NonLocalizedStringChecker","clang-analyzer-optin.osx.OSObjectCStyleCast","clang-analyzer-optin.performance.*","clang-analyzer-optin.performance.GCDAntipattern","clang-analyzer-optin.performance.Padding","clang-analyzer-optin.portability.UnixAPI","clang-analyzer-optin.taint.TaintedAlloc","clang-analyzer-osx.*","clang-analyzer-osx.API","clang-analyzer-osx.cocoa.*","clang-analyzer-osx.cocoa.AtSync","clang-analyzer-osx.cocoa.AutoreleaseWrite","clang-analyzer-osx.cocoa.ClassRelease","clang-analyzer-osx.cocoa.Dealloc","clang-analyzer-osx.cocoa.IncompatibleMethodTypes","clang-analyzer-osx.cocoa.Loops","clang-analyzer-osx.cocoa.MissingSuperCall","clang-analyzer-osx.cocoa.NilArg","clang-analyzer-osx.cocoa.NonNilReturnValue","clang-analyzer-osx.cocoa.NSAutoreleasePool","clang-analyzer-osx.cocoa.NSError","clang-analyzer-osx.cocoa.ObjCGenerics","clang-analyzer-osx.cocoa.RetainCount","clang-analyzer-osx.cocoa.RetainCountBase","clang-analyzer-osx.cocoa.RunLoopAutoreleaseLeak","clang-analyzer-osx.cocoa.SelfInit","clang-analyzer-osx.cocoa.SuperDealloc","clang-analyzer-osx.cocoa.UnusedIvars","clang-analyzer-osx.cocoa.VariadicMethodTypes","clang-analyzer-osx.coreFoundation.*","clang-analyzer-osx.coreFoundation.CFError","clang-analyzer-osx.coreFoundation.CFNumber","clang-analyzer-osx.coreFoundation.CFRetainRelease","clang-analyzer-osx.coreFoundation.containers.*","clang-analyzer-osx.coreFoundation.containers.OutOfBounds","clang-analyzer-osx.coreFoundation.containers.PointerSizedValues","clang-analyzer-osx.MIG","clang-analyzer-osx.NumberObjectConversion","clang-analyzer-osx.ObjCProperty","clang-analyzer-osx.OSObjectRetainCount","clang-analyzer-osx.SecKeychainAPI","clang-analyzer-security.*","clang-analyzer-security.cert.env.InvalidPtr","clang-analyzer-security.FloatLoopCounter","clang-analyzer-security.insecureAPI.*","clang-analyzer-security.insecureAPI.bcmp","clang-analyzer-security.insecureAPI.bcopy","clang-analyzer-security.insecureAPI.bzero","clang-analyzer-security.insecureAPI.decodeValueOfObjCType","clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling","clang-analyzer-security.insecureAPI.getpw","clang-analyzer-security.insecureAPI.gets","clang-analyzer-security.insecureAPI.mkstemp","clang-analyzer-security.insecureAPI.mktemp","clang-analyzer-security.insecureAPI.rand","clang-analyzer-security.insecureAPI.strcpy","clang-analyzer-security.insecureAPI.UncheckedReturn","clang-analyzer-security.insecureAPI.vfork","clang-analyzer-security.PutenvStackArray","clang-analyzer-security.SetgidSetuidOrder","clang-analyzer-unix.*","clang-analyzer-unix.API","clang-analyzer-unix.BlockInCriticalSection","clang-analyzer-unix.cstring.*","clang-analyzer-unix.cstring.BadSizeArg","clang-analyzer-unix.cstring.NullArg","clang-analyzer-unix.Errno","clang-analyzer-unix.Malloc","clang-analyzer-unix.MallocSizeof","clang-analyzer-unix.MismatchedDeallocator","clang-analyzer-unix.StdCLibraryFunctions","clang-analyzer-unix.Stream","clang-analyzer-unix.Vfork","clang-analyzer-valist.*","clang-analyzer-valist.CopyToSelf","clang-analyzer-valist.Uninitialized","clang-analyzer-valist.Unterminated","clang-analyzer-webkit.NoUncountedMemberChecker","clang-analyzer-webkit.RefCntblBaseVirtualDtor","clang-analyzer-webkit.UncountedLambdaCapturesChecker","concurrency-*","concurrency-mt-unsafe","concurrency-thread-canceltype-asynchronous","cppcoreguidelines-*","cppcoreguidelines-avoid-*","cppcoreguidelines-avoid-c-arrays","cppcoreguidelines-avoid-capturing-lambda-coroutines","cppcoreguidelines-avoid-const-or-ref-data-members","cppcoreguidelines-avoid-do-while","cppcoreguidelines-avoid-goto","cppcoreguidelines-avoid-magic-numbers","cppcoreguidelines-avoid-non-const-global-variables","cppcoreguidelines-avoid-reference-coroutine-parameters","cppcoreguidelines-c-copy-assignment-signature","cppcoreguidelines-explicit-virtual-functions","cppcoreguidelines-init-variables","cppcoreguidelines-interfaces-global-init","cppcoreguidelines-macro-to-enum","cppcoreguidelines-macro-usage","cppcoreguidelines-misleading-capture-default-by-value","cppcoreguidelines-missing-std-forward","cppcoreguidelines-narrowing-conversions","cppcoreguidelines-no-*","cppcoreguidelines-no-malloc","cppcoreguidelines-no-suspend-with-lock","cppcoreguidelines-noexcept-*","cppcoreguidelines-noexcept-destructor","cppcoreguidelines-noexcept-move-operations","cppcoreguidelines-noexcept-swap","cppcoreguidelines-non-private-member-variables-in-classes","cppcoreguidelines-owning-memory","cppcoreguidelines-prefer-member-initializer","cppcoreguidelines-pro-bounds-*","cppcoreguidelines-pro-bounds-array-to-pointer-decay","cppcoreguidelines-pro-bounds-constant-array-index","cppcoreguidelines-pro-bounds-pointer-arithmetic","cppcoreguidelines-pro-type-*","cppcoreguidelines-pro-type-const-cast","cppcoreguidelines-pro-type-cstyle-cast","cppcoreguidelines-pro-type-member-init","cppcoreguidelines-pro-type-reinterpret-cast","cppcoreguidelines-pro-type-static-cast-downcast","cppcoreguidelines-pro-type-union-access","cppcoreguidelines-pro-type-vararg","cppcoreguidelines-rvalue-reference-param-not-moved","cppcoreguidelines-slicing","cppcoreguidelines-special-member-functions","cppcoreguidelines-use-default-member-init","cppcoreguidelines-virtual-class-destructor","darwin-*","darwin-avoid-spinlock","darwin-dispatch-once-nonstatic","fuchsia-*","fuchsia-default-*","fuchsia-default-arguments-calls","fuchsia-default-arguments-declarations","fuchsia-header-anon-namespaces","fuchsia-multiple-inheritance","fuchsia-overloaded-operator","fuchsia-statically-constructed-objects","fuchsia-trailing-return","fuchsia-virtual-inheritance","google-*","google-build-*","google-build-explicit-make-pair","google-build-namespaces","google-build-using-namespace","google-default-arguments","google-explicit-constructor","google-global-names-in-headers","google-objc-*","google-objc-avoid-*","google-objc-avoid-nsobject-new","google-objc-avoid-throwing-exception","google-objc-function-naming","google-objc-global-variable-declaration","google-readability-*","google-readability-avoid-underscore-in-googletest-name","google-readability-braces-around-statements","google-readability-casting","google-readability-function-size","google-readability-namespace-comments","google-readability-todo","google-runtime-*","google-runtime-int","google-runtime-operator","google-upgrade-googletest-case","hicpp-*","hicpp-avoid-*","hicpp-avoid-c-arrays","hicpp-avoid-goto","hicpp-braces-around-statements","hicpp-deprecated-headers","hicpp-exception-baseclass","hicpp-explicit-conversions","hicpp-function-size","hicpp-ignored-remove-result","hicpp-invalid-access-moved","hicpp-member-init","hicpp-move-const-arg","hicpp-multiway-paths-covered","hicpp-named-parameter","hicpp-new-delete-operators","hicpp-no-*","hicpp-no-array-decay","hicpp-no-assembler","hicpp-no-malloc","hicpp-noexcept-move","hicpp-signed-bitwise","hicpp-special-member-functions","hicpp-static-assert","hicpp-undelegated-constructor","hicpp-uppercase-literal-suffix","hicpp-use-*","hicpp-use-auto","hicpp-use-emplace","hicpp-use-equals-*","hicpp-use-equals-default","hicpp-use-equals-delete","hicpp-use-noexcept","hicpp-use-nullptr","hicpp-use-override","hicpp-vararg","linuxkernel-must-check-errs","llvm-*","llvm-else-after-return","llvm-header-guard","llvm-include-order","llvm-namespace-comment","llvm-prefer-*","llvm-prefer-isa-or-dyn-cast-in-conditionals","llvm-prefer-register-over-unsigned","llvm-qualified-auto","llvm-twine-local","llvmlibc-*","llvmlibc-callee-namespace","llvmlibc-implementation-in-namespace","llvmlibc-inline-function-decl","llvmlibc-restrict-system-libc-headers","misc-*","misc-confusable-identifiers","misc-const-correctness","misc-coroutine-hostile-raii","misc-definitions-in-headers","misc-header-include-cycle","misc-include-cleaner","misc-misleading-*","misc-misleading-bidirectional","misc-misleading-identifier","misc-misplaced-const","misc-new-delete-overloads","misc-no-recursion","misc-non-*","misc-non-copyable-objects","misc-non-private-member-variables-in-classes","misc-redundant-expression","misc-static-assert","misc-throw-by-value-catch-by-reference","misc-unconventional-assign-operator","misc-uniqueptr-reset-release","misc-unused-*","misc-unused-alias-decls","misc-unused-parameters","misc-unused-using-decls","misc-use-*","misc-use-anonymous-namespace","misc-use-internal-linkage","modernize-*","modernize-avoid-*","modernize-avoid-bind","modernize-avoid-c-arrays","modernize-concat-nested-namespaces","modernize-deprecated-*","modernize-deprecated-headers","modernize-deprecated-ios-base-aliases","modernize-loop-convert","modernize-macro-to-enum","modernize-make-*","modernize-make-shared","modernize-make-unique","modernize-min-max-use-initializer-list","modernize-pass-by-value","modernize-raw-string-literal","modernize-redundant-void-arg","modernize-replace-*","modernize-replace-auto-ptr","modernize-replace-disallow-copy-and-assign-macro","modernize-replace-random-shuffle","modernize-return-braced-init-list","modernize-shrink-to-fit","modernize-type-traits","modernize-unary-static-assert","modernize-use-*","modernize-use-auto","modernize-use-bool-literals","modernize-use-default","modernize-use-constraints","modernize-use-default-member-init","modernize-use-designated-initializers","modernize-use-emplace","modernize-use-equals-*","modernize-use-equals-default","modernize-use-equals-delete","modernize-use-nodiscard","modernize-use-noexcept","modernize-use-nullptr","modernize-use-override","modernize-use-ranges","modernize-use-starts-ends-with","modernize-use-std-*","modernize-use-std-format","modernize-use-std-numbers","modernize-use-std-print","modernize-use-trailing-return-type","modernize-use-transparent-functors","modernize-use-uncaught-exceptions","modernize-use-using","mpi-*","mpi-buffer-deref","mpi-type-mismatch","objc-*","objc-assert-equals","objc-avoid-nserror-init","objc-dealloc-in-category","objc-forbidden-subclassing","objc-missing-hash","objc-nsdate-formatter","objc-nsinvocation-argument-lifetime","objc-property-declaration","objc-super-self","openmp-*","openmp-exception-escape","openmp-use-default-none","performance-*","performance-avoid-endl","performance-enum-size","performance-faster-string-find","performance-for-range-copy","performance-implicit-conversion-in-loop","performance-inefficient-*","performance-inefficient-algorithm","performance-inefficient-string-concatenation","performance-inefficient-vector-operation","performance-move-*","performance-move-const-arg","performance-move-constructor-init","performance-no-*","performance-no-automatic-move","performance-no-int-to-ptr","performance-noexcept-*","performance-noexcept-destructor","performance-noexcept-move-constructor","performance-noexcept-swap","performance-trivially-destructible","performance-type-promotion-in-math-fn","performance-unnecessary-*","performance-unnecessary-copy-initialization","performance-unnecessary-value-param","portability-*","portability-restrict-system-includes","portability-simd-intrinsics","portability-std-allocator-const","readability-*","readability-avoid-*","readability-avoid-const-params-in-decls","readability-avoid-nested-conditional-operator","readability-avoid-return-with-void-value","readability-avoid-unconditional-preprocessor-if","readability-braces-around-statements","readability-const-return-type","readability-container-*","readability-container-contains","readability-container-data-pointer","readability-container-size-empty","readability-convert-member-functions-to-static","readability-delete-null-pointer","readability-duplicate-include","readability-else-after-return","readability-enum-initial-value","readability-function-*","readability-function-cognitive-complexity","readability-function-size","readability-identifier-*","readability-identifier-length","readability-identifier-naming","readability-implicit-bool-conversion","readability-inconsistent-declaration-parameter-name","readability-isolate-declaration","readability-magic-numbers","readability-make-member-function-const","readability-math-missing-parentheses","readability-misleading-indentation","readability-misplaced-array-index","readability-named-parameter","readability-non-const-parameter","readability-operators-representation","readability-qualified-auto","readability-redundant-*","readability-redundant-access-specifiers","readability-redundant-casting","readability-redundant-control-flow","readability-redundant-declaration","readability-redundant-function-ptr-dereference","readability-redundant-inline-specifier","readability-redundant-member-init","readability-redundant-preprocessor","readability-redundant-smartptr-get","readability-redundant-string-*","readability-redundant-string-cstr","readability-redundant-string-init","readability-reference-to-constructed-temporary","readability-simplify-*","readability-simplify-boolean-expr","readability-simplify-subscript-expr","readability-static-*","readability-static-accessed-through-instance","readability-static-definition-in-anonymous-namespace","readability-string-compare","readability-suspicious-call-argument","readability-uniqueptr-delete-release","readability-uppercase-literal-suffix","readability-use-*","readability-use-anyofallof","readability-use-std-min-max","zircon-temporary-objects"]},"uniqueItems":true,"markdownDescription":"List of disabled `clang-tidy` checks. The values are appended to the `Checks` in a `.clang-tidy` file or `#C_Cpp.codeAnalysis.clangTidy.config#`, if any.","scope":"resource"}}},{"title":"Debugging","properties":{"C_Cpp.debugger.useBacktickCommandSubstitution":{"type":"boolean","default":false,"markdownDescription":"If `true`, debugger shell command substitution will use obsolete backtick ``(`)``.","scope":"window"},"C_Cpp.sshTargetsView":{"type":"string","enum":["enabled","disabled","default"],"default":"default","description":"Controls whether the SSH Targets view is visible. By default, enable the view when an SSH command is invoked.","scope":"window"},"C_Cpp.debugShortcut":{"type":"boolean","default":true,"description":"Show the \"Run and Debug\" play button and \"Add Debug Configuration\" gear in the editor title bar for C++ files.","scope":"resource"}}},{"title":"Resource Management","properties":{"C_Cpp.references.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for 'Find All References' and 'Rename'. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxConcurrentThreads#`.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.references.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of processes to keep in memory for 'Find All References' and 'Rename'. The default of `0` disables this feature. The value of `null` (empty) uses the value inherited from `#C_Cpp.maxCachedProcesses#`.","default":0,"minimum":0,"maximum":32,"scope":"machine"},"C_Cpp.references.maxMemory":{"type":["integer","null"],"markdownDescription":"Fewer 'Find All References' and 'Rename' processes will be cached and run concurrently after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.intelliSenseCachePath":{"type":"string","markdownDescription":"Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is `%LocalAppData%/Microsoft/vscode-cpptools` on Windows, `$XDG_CACHE_HOME/vscode-cpptools/` on Linux (or `$HOME/.cache/vscode-cpptools/` if `XDG_CACHE_HOME` is not defined), and `$HOME/Library/Caches/vscode-cpptools/` on macOS. The default path will be used if no path is specified or if a specified path is invalid.","scope":"machine-overridable"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"markdownDescription":"Maximum size of the per-workspace hard drive space in megabytes (MB) for cached precompiled headers; the actual usage may fluctuate around this value. The default size is `5120` MB. Precompiled header caching is disabled when the size is `0`.","scope":"machine-overridable","minimum":0},"C_Cpp.intelliSenseMemoryLimit":{"type":"number","default":4096,"markdownDescription":"Memory usage limit in megabytes (MB) of an IntelliSense process. The default is `4096` and the maximum is `16384`. The extension will shutdown and restart an IntelliSense process when it exceeds the limit.","scope":"machine-overridable","minimum":256,"maximum":16384},"C_Cpp.maxConcurrentThreads":{"type":["integer","null"],"markdownDescription":"The maximum number of concurrent threads to use for language service processing. The value is a hint and may not always be used. The default of `null` (empty) uses the number of logical processors available.","default":null,"minimum":1,"maximum":32,"scope":"machine"},"C_Cpp.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of cached processes to use for language service processing. The default of `null` (empty) uses twice the number of logical processors available.","default":null,"minimum":0,"maximum":256,"scope":"machine"},"C_Cpp.maxMemory":{"type":["integer","null"],"markdownDescription":"The maximum memory (in MB) available for language service processing. Fewer processes will be cached and run concurrently after this memory usage is exceeded. The default of `null` (empty) uses the system's free memory.","default":null,"minimum":256,"maximum":65536,"scope":"machine"},"C_Cpp.maxSymbolSearchResults":{"type":"integer","markdownDescription":"The maximum number of results to show for 'Go to Symbol in Workspace'. The default is `5000`.","default":5000,"minimum":500,"maximum":10000,"scope":"window"},"C_Cpp.intelliSense.maxCachedProcesses":{"type":["integer","null"],"markdownDescription":"The maximum number of IntelliSense processes to keep running. The default of `null` (empty) uses value inherited from `#C_Cpp.maxCachedProcesses#`.","default":null,"minimum":2,"maximum":128,"scope":"machine"},"C_Cpp.intelliSense.maxMemory":{"type":["integer","null"],"markdownDescription":"Older IntelliSense processes will shut down before new processes are created after this memory usage (in MB) is exceeded. The default of `null` (empty) uses the value inherited from `#C_Cpp.maxMemory#`.","default":null,"minimum":256,"maximum":65536,"scope":"machine"}}},{"title":"Miscellaneous","properties":{"C_Cpp.vcpkg.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable integration services for the [vcpkg dependency manager](https://aka.ms/vcpkg/).","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","markdownDescription":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: `None` < `Error` < `Warning` < `Information` < `Debug`.","scope":"window"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"markdownDescription":"Controls whether files are automatically added to `#files.associations#` when they are the target of a navigation operation from a C/C++ file.","scope":"window"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","markdownDescription":"The character used as a path separator for generated user paths.","scope":"machine-overridable"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","markdownDescription":"Set to `Insiders` to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"application","deprecationMessage":"This setting is deprecated. Pre-release extensions are now available via the Marketplace."},"C_Cpp.experimentalFeatures":{"type":"string","enum":["enabled","disabled"],"default":"disabled","description":"Controls whether \"experimental\" features are usable.","scope":"window"},"C_Cpp.caseSensitiveFileSupport":{"type":"string","enum":["default","enabled"],"default":"default","markdownDescription":"If set to `default`, the file system of the workspace is assumed to be case insensitive on Windows and case sensitive on macOS or Linux. If set to `enabled`, the file system of the workspace is assumed to be case sensitive on Windows.","scope":"window"},"C_Cpp.addNodeAddonIncludePaths":{"type":"boolean","default":false,"markdownDescription":"Add include paths from `nan` and `node-addon-api` when they are dependencies.","scope":"application"},"C_Cpp.copilotHover":{"type":"string","enum":["default","disabled"],"default":"default","markdownDescription":"If `disabled`, no Copilot information will appear in Hover.","scope":"window"}}}],"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditJSON","title":"Edit Configurations (JSON)","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditUI","title":"Edit Configurations (UI)","category":"C/C++"},{"command":"C_Cpp.SelectIntelliSenseConfiguration","title":"Select IntelliSense Configuration...","category":"C/C++"},{"command":"C_Cpp.InstallCompiler","title":"Install a C++ Compiler","category":"C/C++"},{"command":"C_Cpp.RescanCompilers","title":"Rescan for Compilers","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.EnableErrorSquiggles","title":"Enable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.DisableErrorSquiggles","title":"Disable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/C++"},{"command":"C_Cpp.RestartIntelliSenseForFile","title":"Restart IntelliSense for Active File","category":"C/C++"},{"command":"C_Cpp.LogDiagnostics","title":"Log Diagnostics","category":"C/C++"},{"command":"C_Cpp.RescanWorkspace","title":"Rescan Workspace","category":"C/C++"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","title":"Copy vcpkg install command to clipboard","category":"C/C++"},{"command":"C_Cpp.VcpkgOnlineHelpSuggested","title":"Visit the vcpkg help page","category":"C/C++"},{"command":"C_Cpp.GenerateEditorConfig","title":"Generate EditorConfig contents from VC Format settings","category":"C/C++"},{"command":"C_Cpp.referencesViewGroupByType","category":"C/C++","title":"Group by Reference Type","icon":{"light":"assets/ref-group-by-type-light.svg","dark":"assets/ref-group-by-type-dark.svg"}},{"command":"C_Cpp.referencesViewUngroupByType","category":"C/C++","title":"Ungroup by Reference Type","icon":{"light":"assets/ref-ungroup-by-type-light.svg","dark":"assets/ref-ungroup-by-type-dark.svg"}},{"command":"C_Cpp.GoToNextDirectiveInGroup","title":"Go to next preprocessor directive in conditional group","category":"C/C++"},{"command":"C_Cpp.GoToPrevDirectiveInGroup","title":"Go to previous preprocessor directive in conditional group","category":"C/C++"},{"command":"C_Cpp.CreateDeclarationOrDefinition","title":"Create Declaration / Definition","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnActiveFile","title":"Run Code Analysis on Active File","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnOpenFiles","title":"Run Code Analysis on Open Files","category":"C/C++"},{"command":"C_Cpp.RunCodeAnalysisOnAllFiles","title":"Run Code Analysis on All Files","category":"C/C++"},{"command":"C_Cpp.RemoveAllCodeAnalysisProblems","title":"Clear All Code Analysis Problems","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugFile","title":"Debug C/C++ File","category":"C/C++","icon":"$(debug-alt)"},{"command":"C_Cpp.BuildAndRunFile","title":"Run C/C++ File","category":"C/C++","icon":"$(run)"},{"command":"C_Cpp.AddDebugConfiguration","title":"Add Debug Configuration","category":"C/C++","icon":"$(debug-configure)"},{"command":"C_Cpp.GenerateDoxygenComment","title":"Generate Doxygen Comment","category":"C/C++"},{"command":"C_Cpp.addSshTarget","category":"C/C++","title":"Add SSH target","icon":"$(plus)"},{"command":"C_Cpp.removeSshTarget","category":"C/C++","title":"Remove SSH target","icon":"$(remove)"},{"command":"C_Cpp.setActiveSshTarget","category":"C/C++","title":"Set this SSH target as the active target","icon":"$(check)"},{"command":"C_Cpp.selectActiveSshTarget","category":"C/C++","title":"Select an active SSH target"},{"command":"C_Cpp.selectSshTarget","category":"C/C++","title":"Select SSH target"},{"command":"C_Cpp.activeSshTarget","category":"C/C++","title":"Get the active SSH target"},{"command":"C_Cpp.refreshCppSshTargetsView","category":"C/C++","title":"Refresh","icon":"$(refresh)"},{"command":"C_Cpp.sshTerminal","category":"C/C++","title":"Connect to this SSH target in a new terminal","icon":"$(terminal)"}],"keybindings":[{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"editor.action.codeAction","key":"ctrl+shift+r ctrl+i","args":{"kind":"refactor.inline.macro","apply":"first"},"when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"editor.action.codeAction","key":"ctrl+shift+r ctrl+e","args":{"kind":"refactor.extract.function","apply":"first"},"when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && editorTextFocus && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","languages":["ada","c","cpp","cuda-cpp","rust"],"_aiKeyComment":"Ignore 'Property aiKey is not allowed'. See https://github.com/microsoft/vscode/issues/76493","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target.","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"postRemoteConnectCommands":{"type":"array","description":"One or more commands that execute after remote connection to a debug server.","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"anyOf":[{"type":"string","default":""},{"type":"array","default":[],"items":{"type":"string"}}],"description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting."},"svdPath":{"type":"string","description":"%c_cpp.debuggers.cppdbg.visualizerFile.description","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE.","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"useExtendedRemote":{"type":"boolean","description":"Connect to the MI Debugger Server with target extended-remote mode.","default":false},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to the debug server to launch. Defaults to null. It is used in conjunction with either \"miDebugServerAddress\" or your own server with a \"customSetupCommand\" that runs \"-target-select remote <server:port>\".","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}]},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false},"natvisDiagnostics":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":false}]}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'.","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'."},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\".","default":""}}},"stopAtConnect":{"type":"boolean","description":"If true, the debugger should stop after connecting to the target. If false, the debugger will continue after connecting. Defaults to false.","default":false},"hardwareBreakpoints":{"description":"Explicit control of hardware breakpoint behavior for remote targets.","default":{},"type":"object","properties":{"require":{"type":"boolean","description":"If true, always use hardware breakpoints. Defaults to false.","default":false},"limit":{"type":"integer","description":"Optional limit on the number of available hardware breakpoints to use. Only enforced when \"require\" is true and \"limit\" is greater than 0. Defaults to 0.","default":0}}},"unknownBreakpointHandling":{"type":"string","enum":["throw","stop"],"default":"throw","description":"Controls how breakpoints set externally (usually via raw GDB commands) are handled when hit.\nAllowed values are \"throw\", which acts as if an exception was thrown by the application, and \"stop\", which only pauses the debug session. The default value is \"throw\"."},"variables":{"type":"object","description":"Variables for recursive substitution in this launch configuration. Each variable may refer to others.","default":{"<variable-name>":"<variable-value>"},"properties":{},"additionalProperties":{"type":"string","description":"Variable for recursive substitution in this launch configuration. The value may refer to other variables.","default":""}},"deploySteps":{"type":"array","description":"Steps needed to deploy the application. Order matters.","items":{"anyOf":[{"type":"object","description":"Copy files using SCP or rsync.","default":{},"required":["type","files","host","targetDir"],"properties":{"type":{"type":"string","description":"Copy files using SCP or rsync.","default":"","enum":["scp","rsync"]},"files":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Files to be copied. Supports path pattern.","default":""},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"targetDir":{"type":"string","description":"Target directory.","default":""},"recursive":{"type":"boolean","description":"If true, copies folders recursively.","default":"true"},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}},"allOf":[{"if":{"properties":{"type":{"const":"scp"}}},"then":{"properties":{"scpPath":{"type":"string","description":"Optional full path to SCP. Assumes SCP is on PATH if not specified","default":""}}}},{"if":{"properties":{"type":{"const":"rsync"}}},"then":{"properties":{"rsyncPath":{"type":"string","description":"Optional full path to rsync. Assumes rsync is on PATH if not specified","default":""}}}}]},{"type":"object","description":"SSH command step.","default":{},"required":["type","host","command"],"properties":{"type":{"type":"string","description":"SSH command step.","default":"","enum":["ssh"]},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"command":{"type":"string","description":"Command to be executed via SSH. The command after '-c' in SSH command.","default":""},"sshPath":{"type":"string","description":"Optional full path to SSH. Assumes SSH is on PATH if not specified","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"Shell command step.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"Shell command step.","default":"","enum":["shell"]},"command":{"type":"string","description":"Shell command to be executed.","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":"","enum":["command"]},"command":{"type":"string","description":"VS Code command to be invoked.","default":""},"args":{"type":"array","description":"Arguments to the VS Code command.","items":{"type":"string"}}}}]},"default":[]}}},"attach":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"useExtendedRemote":{"type":"boolean","description":"Connect to the MI Debugger Server with target extended-remote mode.","default":false},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}]},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false},"natvisDiagnostics":{"anyOf":[{"type":"string","enum":["verbose","warning","error","none"],"enumDescriptions":["Logs that are used for interactive investigation during development. These logs should primarily contain information useful for debugging and have no long-term value.","Logs that highlight an abnormal or unexpected event in the application flow, but do not otherwise cause the application execution to stop.","Logs that highlight when the current flow of execution is stopped due to a failure. These should indicate a failure in the current activity, not an application-wide failure.","Not used for writing log messages. Specifies that a logging category should not write any messages."],"description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":"none"},{"type":"boolean","description":"Optional flag to determine whether diagnostic natvis messages should be logged to the Debug Console. Defaults to None.","default":false}]}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'.","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'."},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\".","default":""}}},"variables":{"type":"object","description":"Variables for recursive substitution in this launch configuration. Each variable may refer to others.","default":{"<variable-name>":"<variable-value>"},"properties":{},"additionalProperties":{"type":"string","description":"Variable for recursive substitution in this launch configuration. The value may refer to other variables.","default":""}},"deploySteps":{"type":"array","description":"Steps needed to deploy the application. Order matters.","items":{"anyOf":[{"type":"object","description":"Copy files using SCP or rsync.","default":{},"required":["type","files","host","targetDir"],"properties":{"type":{"type":"string","description":"Copy files using SCP or rsync.","default":"","enum":["scp","rsync"]},"files":{"anyOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Files to be copied. Supports path pattern.","default":""},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"targetDir":{"type":"string","description":"Target directory.","default":""},"recursive":{"type":"boolean","description":"If true, copies folders recursively.","default":"true"},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}},"allOf":[{"if":{"properties":{"type":{"const":"scp"}}},"then":{"properties":{"scpPath":{"type":"string","description":"Optional full path to SCP. Assumes SCP is on PATH if not specified","default":""}}}},{"if":{"properties":{"type":{"const":"rsync"}}},"then":{"properties":{"rsyncPath":{"type":"string","description":"Optional full path to rsync. Assumes rsync is on PATH if not specified","default":""}}}}]},{"type":"object","description":"SSH command step.","default":{},"required":["type","host","command"],"properties":{"type":{"type":"string","description":"SSH command step.","default":"","enum":["ssh"]},"host":{"anyOf":[{"type":"string","description":"Host information.","default":"hello@microsoft.com"},{"type":"object","description":"Host information.","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22},"jumpHosts":{"type":"array","description":"Connect to the target host by first making a connection to the jump hosts.","items":{"type":"object","default":{},"required":["hostName"],"properties":{"user":{"type":"string","description":"User logging into the host.","default":""},"hostName":{"type":"string","description":"Host name.","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"SSH port on the host. Default is 22.","default":22}}}},"localForwards":{"type":"array","description":"Forward connections to the given TCP port or Unix socket on the local (client) host to the given host and port, or Unix socket, on the remote side","items":{"type":"object","default":{},"properties":{"bindAddress":{"type":"string","description":"Local address","default":""},"port":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Local port"},"host":{"type":"string","description":"Host name","default":""},"hostPort":{"anyOf":[{"type":"number"},{"type":"string","pattern":"^\\d+$|^\\${.+}$"}],"description":"Host port"},"localSocket":{"type":"string","description":"Local socket","default":""},"remoteSocket":{"type":"string","description":"Remote socket","default":""}}}}}}]},"command":{"type":"string","description":"Command to be executed via SSH. The command after '-c' in SSH command.","default":""},"sshPath":{"type":"string","description":"Optional full path to SSH. Assumes SSH is on PATH if not specified","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"Shell command step.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"Shell command step.","default":"","enum":["shell"]},"command":{"type":"string","description":"Shell command to be executed.","default":""},"continueOn":{"type":"string","description":"An optional finish pattern in output. When this pattern is seen in the output, continue the deploy procedures regardless of whether this step returns.","default":""},"debug":{"type":"boolean","description":"If true, skip when starting without debugging. If false, skip when starting debugging. If undefined, never skip."}}},{"type":"object","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":{},"required":["type","command"],"properties":{"type":{"type":"string","description":"VS Code command to be invoked. Can be a command in VS Code or an active extension.","default":"","enum":["command"]},"command":{"type":"string","description":"VS Code command to be invoked.","default":""},"args":{"type":"array","description":"Arguments to the VS Code command.","items":{"type":"string"}}}}]},"default":[]}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","when":"workspacePlatform == windows","languages":["ada","c","cpp","cuda-cpp","rust"],"_aiKeyComment":"Ignore 'Property aiKey is not allowed'. See https://github.com/microsoft/vscode/issues/76493","aiKey":"0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255","variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target.","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE.","default":"${workspaceFolder}/.env"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"[Deprecated by 'console'] If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:'std::cin' or 'scanf').","VS Code's integrated terminal.","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"description":"Where to launch the debug target. Defaults to 'internalConsole' if not defined.","default":"internalConsole"},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},"enableDebugHeap":{"type":"boolean","description":"If false, the process will be launched with debug heap disabled. This sets the environment variable '_NO_DEBUG_HEAP' to '1'.","default":false},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"threadExit":{"type":"boolean","description":"Optional flag to determine whether thread exit messages should be logged to the Debug Console. Default: false.","default":false},"processExit":{"type":"boolean","description":"Optional flag to determine whether target process exit messages should be logged to the Debug Console. Default: true.","default":true}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache.","default":"%TEMP%\\SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'.","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache.","default":"%TEMP%\\SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}}}}}}],"breakpoints":[{"language":"ada"},{"language":"c"},{"language":"cpp"},{"language":"cuda-cpp"},{"language":"cuda"},{"language":"rust"}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"cpptools-schema:///c_cpp_properties.schema.json"}],"menus":{"view/title":[{"command":"C_Cpp.referencesViewGroupByType","when":"view == CppReferencesView && refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.referencesViewUngroupByType","when":"view == CppReferencesView && !refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.addSshTarget","when":"view == CppSshTargetsView","group":"navigation"},{"command":"C_Cpp.refreshCppSshTargetsView","when":"view == CppSshTargetsView","group":"navigation"}],"view/item/context":[{"command":"C_Cpp.setActiveSshTarget","when":"viewItem == CppSshTargetsView.targetLeafCanSetActive || viewItem == CppSshTargetsView.targetLeafRemovableCanSetActive","group":"inline@0"},{"command":"C_Cpp.sshTerminal","when":"view == CppSshTargetsView","group":"inline@1"},{"command":"C_Cpp.removeSshTarget","when":"viewItem == CppSshTargetsView.targetLeafRemovable || viewItem == CppSshTargetsView.targetLeafRemovableCanSetActive","group":"inline@2"}],"editor/title/run":[{"command":"C_Cpp.BuildAndDebugFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile","group":"navigation@0"},{"command":"C_Cpp.BuildAndRunFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile","group":"navigation@1"}],"editor/title":[{"command":"C_Cpp.AddDebugConfiguration","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile && cpptools.buildAndDebug.isFolderOpen","group":"navigation"}],"editor/context":[{"command":"C_Cpp.SwitchHeaderSource","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom1@1"},{"command":"workbench.action.gotoSymbol","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom1@2"},{"command":"workbench.action.showAllSymbols","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom1@3"},{"command":"C_Cpp.RunCodeAnalysisOnActiveFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/","group":"custom2@1"},{"command":"C_Cpp.RestartIntelliSenseForFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/","group":"custom2@2"},{"command":"C_Cpp.AddDebugConfiguration","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile && cpptools.buildAndDebug.isFolderOpen","group":"custom2@3"},{"command":"C_Cpp.GenerateDoxygenComment","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom2@4"},{"command":"C_Cpp.CreateDeclarationOrDefinition","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)","group":"custom2@5"}],"commandPalette":[{"command":"C_Cpp.ConfigurationSelect","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.ConfigurationProviderSelect","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.ConfigurationEditJSON","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.ConfigurationEditUI","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.SelectIntelliSenseConfiguration","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.SwitchHeaderSource","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.EnableErrorSquiggles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.DisableErrorSquiggles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.ToggleDimInactiveRegions","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.ResetDatabase","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.RestartIntelliSenseForFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.LogDiagnostics","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.RescanWorkspace","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.GenerateEditorConfig","when":"!(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.GoToNextDirectiveInGroup","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.GoToPrevDirectiveInGroup","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.CreateDeclarationOrDefinition","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.RunCodeAnalysisOnActiveFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.RunCodeAnalysisOnOpenFiles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.RunCodeAnalysisOnAllFiles","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.RemoveAllCodeAnalysisProblems","when":"config.C_Cpp.intelliSenseEngine =~ /^[dD]efault$/"},{"command":"C_Cpp.BuildAndDebugFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile"},{"command":"C_Cpp.BuildAndRunFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isSourceFile"},{"command":"C_Cpp.AddDebugConfiguration","when":"config.C_Cpp.debugShortcut && cpptools.buildAndDebug.isFolderOpen"},{"command":"C_Cpp.GenerateDoxygenComment","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)"},{"command":"C_Cpp.referencesViewGroupByType","when":"cpptools.hasReferencesResults"},{"command":"C_Cpp.referencesViewUngroupByType","when":"cpptools.hasReferencesResults"},{"command":"C_Cpp.InstallCompiler","when":"never"},{"command":"C_Cpp.RescanCompilers","when":"never"},{"command":"C_Cpp.addSshTarget","when":"never"},{"command":"C_Cpp.removeSshTarget","when":"never"},{"command":"C_Cpp.setActiveSshTarget","when":"never"},{"command":"C_Cpp.selectSshTarget","when":"never"},{"command":"C_Cpp.activeSshTarget","when":"never"},{"command":"C_Cpp.refreshCppSshTargetsView","when":"never"},{"command":"C_Cpp.sshTerminal","when":"never"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":"off","editor.semanticHighlighting.enabled":true,"editor.stickyScroll.defaultModel":"foldingProviderModel","editor.suggest.insertMode":"replace"},"[cuda-cpp]":{"editor.wordBasedSuggestions":"off","editor.semanticHighlighting.enabled":true,"editor.stickyScroll.defaultModel":"foldingProviderModel","editor.suggest.insertMode":"replace"},"[c]":{"editor.wordBasedSuggestions":"off","editor.semanticHighlighting.enabled":true,"editor.stickyScroll.defaultModel":"foldingProviderModel","editor.suggest.insertMode":"replace"}},"semanticTokenTypes":[{"id":"referenceType","superType":"class","description":"Style for C++/CLI reference types."},{"id":"cliProperty","superType":"property","description":"Style for C++/CLI properties."},{"id":"genericType","superType":"class","description":"Style for C++/CLI generic types."},{"id":"valueType","superType":"class","description":"Style for C++/CLI value types."},{"id":"templateFunction","superType":"function","description":"Style for C++ template functions."},{"id":"templateType","superType":"class","description":"Style for C++ template types."},{"id":"operatorOverload","superType":"operator","description":"Style for C++ overloaded operators."},{"id":"memberOperatorOverload","superType":"operator","description":"Style for C++ overloaded operator member functions."},{"id":"newOperator","superType":"operator","description":"Style for C++ `new` or `delete` operators."},{"id":"customLiteral","superType":"number","description":"Style for C++ user-defined literals."},{"id":"numberLiteral","superType":"number","description":"Style for C++ user-defined literal numbers."},{"id":"stringLiteral","superType":"string","description":"Style for C++ user-defined literal strings."}],"semanticTokenModifiers":[{"id":"global","description":"Style to use for symbols that are global."},{"id":"local","description":"Style to use for symbols that are local."}],"semanticTokenScopes":[{"language":"c","scopes":{"namespace":["entity.name.namespace.c"],"type":["entity.name.type.c"],"type.defaultLibrary":["support.type.c"],"struct":["storage.type.struct.c"],"class":["entity.name.type.class.c"],"class.defaultLibrary":["support.class.c"],"interface":["entity.name.type.interface.c"],"enum":["entity.name.type.enum.c"],"function":["entity.name.function.c"],"function.defaultLibrary":["support.function.c"],"method":["entity.name.function.member.c"],"variable":["variable.other.readwrite.c","entity.name.variable.c"],"variable.readonly":["variable.other.constant.c"],"variable.readonly.defaultLibrary":["support.constant.c"],"parameter":["variable.parameter.c"],"property":["variable.other.property.c"],"property.readonly":["variable.other.constant.property.c"],"enumMember":["variable.other.enummember.c"],"event":["variable.other.event.c"],"label":["entity.name.label.c"],"variable.global":["variable.other.global.c"],"variable.local":["variable.other.local.c"],"property.static":["variable.other.property.static.c"],"method.static":["entity.name.function.member.static.c"],"macro":["entity.name.function.preprocessor.c","entity.name.function.macro.c"],"referenceType":["entity.name.type.class.reference.c"],"cliProperty":["variable.other.property.cli.c"],"genericType":["entity.name.type.class.generic.c"],"valueType":["entity.name.type.class.value.c"],"templateFunction":["entity.name.function.templated.c"],"templateType":["entity.name.type.class.templated.c"],"operatorOverload":["entity.name.function.operator.c"],"memberOperatorOverload":["entity.name.function.operator.member.c"],"newOperator":["keyword.operator.new.c"],"numberLiteral":["entity.name.operator.custom-literal.number.c"],"customLiteral":["entity.name.operator.custom-literal.c"],"stringLiteral":["entity.name.operator.custom-literal.string.c"]}},{"language":"cpp","scopes":{"namespace":["entity.name.namespace.cpp"],"type":["entity.name.type.cpp"],"type.defaultLibrary":["support.type.cpp"],"struct":["storage.type.struct.cpp"],"class":["entity.name.type.class.cpp"],"class.defaultLibrary":["support.class.cpp"],"interface":["entity.name.type.interface.cpp"],"enum":["entity.name.type.enum.cpp"],"function":["entity.name.function.cpp"],"function.defaultLibrary":["support.function.cpp"],"method":["entity.name.function.member.cpp"],"variable":["variable.other.readwrite.cpp","entity.name.variable.cpp"],"variable.readonly":["variable.other.constant.cpp"],"variable.readonly.defaultLibrary":["support.constant.cpp"],"parameter":["variable.parameter.cpp"],"property":["variable.other.property.cpp"],"property.readonly":["variable.other.constant.property.cpp"],"enumMember":["variable.other.enummember.cpp"],"event":["variable.other.event.cpp"],"label":["entity.name.label.cpp"],"variable.global":["variable.other.global.cpp"],"variable.local":["variable.other.local.cpp"],"property.static":["variable.other.property.static.cpp"],"method.static":["entity.name.function.member.static.cpp"],"macro":["entity.name.function.preprocessor.cpp","entity.name.function.macro.cpp"],"referenceType":["entity.name.type.class.reference.cpp"],"cliProperty":["variable.other.property.cli.cpp"],"genericType":["entity.name.type.class.generic.cpp"],"valueType":["entity.name.type.class.value.cpp"],"templateFunction":["entity.name.function.templated.cpp"],"templateType":["entity.name.type.class.templated.cpp"],"operatorOverload":["entity.name.function.operator.cpp"],"memberOperatorOverload":["entity.name.function.operator.member.cpp"],"newOperator":["keyword.operator.new.cpp"],"numberLiteral":["entity.name.operator.custom-literal.number.cpp"],"customLiteral":["entity.name.operator.custom-literal.cpp"],"stringLiteral":["entity.name.operator.custom-literal.string.cpp"]}},{"language":"cuda-cpp","scopes":{"namespace":["entity.name.namespace.cuda-cpp"],"type":["entity.name.type.cuda-cpp"],"type.defaultLibrary":["support.type.cuda-cpp"],"struct":["storage.type.struct.cuda-cpp"],"class":["entity.name.type.class.cuda-cpp"],"class.defaultLibrary":["support.class.cuda-cpp"],"interface":["entity.name.type.interface.cuda-cpp"],"enum":["entity.name.type.enum.cuda-cpp"],"function":["entity.name.function.cuda-cpp"],"function.defaultLibrary":["support.function.cuda-cpp"],"method":["entity.name.function.member.cuda-cpp"],"variable":["variable.other.readwrite.cuda-cpp","entity.name.variable.cuda-cpp"],"variable.readonly":["variable.other.constant.cuda-cpp"],"variable.readonly.defaultLibrary":["support.constant.cuda-cpp"],"parameter":["variable.parameter.cuda-cpp"],"property":["variable.other.property.cuda-cpp"],"property.readonly":["variable.other.constant.property.cuda-cpp"],"enumMember":["variable.other.enummember.cuda-cpp"],"event":["variable.other.event.cuda-cpp"],"label":["entity.name.label.cuda-cpp"],"variable.global":["variable.other.global.cuda-cpp"],"variable.local":["variable.other.local.cuda-cpp"],"property.static":["variable.other.property.static.cuda-cpp"],"method.static":["entity.name.function.member.static.cuda-cpp"],"macro":["entity.name.function.preprocessor.cuda-cpp","entity.name.function.macro.cuda-cpp"],"referenceType":["entity.name.type.class.reference.cuda-cpp"],"cliProperty":["variable.other.property.cli.cuda-cpp"],"genericType":["entity.name.type.class.generic.cuda-cpp"],"valueType":["entity.name.type.class.value.cuda-cpp"],"templateFunction":["entity.name.function.templated.cuda-cpp"],"templateType":["entity.name.type.class.templated.cuda-cpp"],"operatorOverload":["entity.name.function.operator.cuda-cpp"],"memberOperatorOverload":["entity.name.function.operator.member.cuda-cpp"],"newOperator":["keyword.operator.new.cuda-cpp"],"numberLiteral":["entity.name.operator.custom-literal.number.cuda-cpp"],"customLiteral":["entity.name.operator.custom-literal.cuda-cpp"],"stringLiteral":["entity.name.operator.custom-literal.string.cuda-cpp"]}}],"codeActions":[{"languages":["c","cpp","cuda-cpp"],"actions":{"kind":"refactor.inline.macro","title":"Inline macro","description":"Replace the macro invocation with the expanded code."}},{"languages":["c","cpp","cuda-cpp"],"actions":{"kind":"refactor.extract.function","title":"Extract to function","description":"Extract the selected code to a free or member function."}}],"languageModelTools":[{"name":"cpptools-lmtool-configuration","toolReferenceName":"cpp","displayName":"C/C++ configuration","canBeReferencedInPrompt":true,"userDescription":"Configuration of the active C or C++ file, like language standard version and target platform.","modelDescription":"For the active C or C++ file, this tool provides: the language (C, C++, or CUDA), the language standard version (such as C++11, C++14, C++17, or C++20), the compiler (such as GCC, Clang, or MSVC), the target platform (such as x86, x64, or ARM), and the target architecture (such as 32-bit or 64-bit).","icon":"$(file-code)","when":"(config.C_Cpp.experimentalFeatures =~ /^[eE]nabled$/)"}]},"scripts":{"scripts":"ts-node -T .scripts/scripts.ts","show":"ts-node -T .scripts/clean.ts show","clean":"ts-node -T .scripts/clean.ts","test":"yarn install && (yarn verify prep --quiet || yarn prep) && (yarn verify compiled --quiet || yarn build) && ts-node -T .scripts/test.ts","code":"yarn install && (yarn verify compiled --quiet || yarn build) && yarn verify binaries && ts-node -T .scripts/code.ts","verify":"ts-node -T .scripts/verify.ts","prep":"yarn prep:dts && yarn copy-walkthrough-media && yarn generate-native-strings && yarn translations-generate","lint":"yarn install && eslint -c .eslintrc.js --report-unused-disable-directives src test ui .scripts","compile":"yarn install && (yarn verify prep --quiet || yarn prep) && yarn build","watch":"yarn install && (yarn verify prep --quiet || yarn prep) && tsc --build tsconfig.json --watch","rebuild":"yarn install && yarn clean && yarn prep && yarn build","vsix-prepublish":"yarn install && yarn clean && yarn webpack","webpack":"yarn install && (yarn verify prep --quiet || yarn prep) && tsc --build ui.tsconfig.json && webpack --mode production --env vscode_nls","generate-native-strings":"ts-node -T ./.scripts/generateNativeStrings.ts","generate-options-schema":"ts-node -T ./.scripts/generateOptionsSchema.ts","copy-walkthrough-media":"ts-node -T ./.scripts/copyWalkthruMedia.ts","translations-export":"yarn install && yarn prep && yarn generate-native-strings && gulp translations-export","translations-generate":"set NODE_OPTIONS=--no-experimental-fetch && gulp translations-generate","translations-import":"gulp translations-import","import-edge-strings":"ts-node -T ./.scripts/import_edge_strings.ts","prep:dts":"yarn verify dts --quiet || (npx @vscode/dts dev && npx @vscode/dts main)","build":"yarn prep:dts && echo [Building TypeScript code] && tsc --build tsconfig.json"},"devDependencies":{"@octokit/rest":"^20.1.1","@types/glob":"^7.2.0","@types/mocha":"^10.0.6","@types/node":"^20.14.2","@types/node-fetch":"^2.6.11","@types/plist":"^3.0.5","@types/proxyquire":"^1.3.31","@types/semver":"^7.5.8","@types/shell-quote":"^1.7.5","@types/sinon":"^17.0.3","@types/tmp":"^0.2.6","@types/which":"^2.0.2","@types/yauzl":"^2.10.3","@typescript-eslint/eslint-plugin":"^6.1.0","@typescript-eslint/parser":"^6.1.0","@vscode/debugadapter":"^1.65.0","@vscode/debugprotocol":"^1.65.0","@vscode/dts":"^0.4.0","@vscode/test-electron":"^2.3.10","async-child-process":"^1.1.1","await-notify":"^1.0.1","eslint":"^8.45.0","eslint-plugin-header":"^3.1.1","eslint-plugin-import":"^2.29.1","eslint-plugin-jsdoc":"^48.2.8","event-stream":"^4.0.1","fs-extra":"^11.2.0","gulp":"^5.0.0","gulp-env":"^0.4.0","gulp-filter":"^7.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^5.0.1","minimist":"^1.2.8","mocha":"^10.4.0","parse-git-config":"^3.0.0","parse5":"^7.1.2","parse5-traverse":"^1.0.3","proxyquire":"^2.1.3","sinon":"^19.0.2","ts-loader":"^9.5.1","ts-node":"^10.9.2","typescript":"^5.4.5","vscode-nls-dev":"^4.0.4","webpack":"^5.94.0","webpack-cli":"^5.1.4","xml2js":"^0.6.2"},"dependencies":{"@vscode/extension-telemetry":"^0.9.6","chokidar":"^3.6.0","comment-json":"^4.2.3","escape-string-regexp":"^2.0.0","glob":"^7.2.3","minimatch":"^4.2.0","mkdirp":"^3.0.1","node-fetch":"^2.7.0","node-loader":"^2.0.0","node-stream-zip":"^1.15.0","plist":"^3.1.0","posix-getopt":"^1.2.1","shell-quote":"^1.8.1","ssh-config":"^4.4.4","tmp":"^0.2.3","vscode-cpptools":"^6.1.0","vscode-languageclient":"^8.1.0","vscode-nls":"^5.2.0","vscode-tas-client":"^0.1.84","which":"^2.0.2"},"resolutions":{"postcss":"^8.4.31","gulp-typescript/**/glob-parent":"^5.1.2"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ms-vscode.cpptools-1.23.6-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"690b692e-e8a9-493f-b802-8089d50ac1b2","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":307395314},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-vscode.cpptools-extension-pack","uuid":"3957b2f6-f086-49b5-a7b4-5da772123130"},"manifest":{"name":"cpptools-extension-pack","displayName":"C/C++ Extension Pack","description":"Popular extensions for C++ development in Visual Studio Code.","publisher":"ms-vscode","icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","version":"1.3.1","engines":{"vscode":"^1.48.0"},"categories":["Extension Packs","Programming Languages"],"activationEvents":["onCommand:ms-vscode.cpptools-extension-pack.unavailableCommand"],"main":"main.js","repository":{"type":"git","url":"https://github.com/microsoft/vscode-cpptools.git","directory":"ExtensionPack"},"keywords":["C","C++","IntelliSense","Microsoft","color-theme","build","cmake"],"extensionPack":["ms-vscode.cpptools","ms-vscode.cpptools-themes","ms-vscode.cmake-tools"]},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ms-vscode.cpptools-extension-pack-1.3.1","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"3957b2f6-f086-49b5-a7b4-5da772123130","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":10807},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"usernamehw.errorlens","uuid":"9d8c32ab-354c-4daf-a9bf-20b633734435"},"manifest":{"name":"errorlens","displayName":"Error Lens","description":"Improve highlighting of errors, warnings and other language diagnostics.","version":"3.24.0","publisher":"usernamehw","license":"MIT","engines":{"vscode":"^1.85.0","npm":">=7.0.0"},"extensionKind":["ui","workspace"],"categories":["Other"],"qna":false,"keywords":["highlight","problem","problems","error","warning","inline","message","diagnostic","status bar","gutter"],"icon":"img/icon.png","repository":{"type":"git","url":"https://github.com/usernamehw/vscode-error-lens"},"activationEvents":["onStartupFinished"],"main":"./dist/extension.js","browser":"./dist/extension.js","contributes":{"commands":[{"command":"errorLens.toggle","title":"Toggle (Enable/Disable) Everything","description":"Toggle (Enable/Disable) Everything (toggle global setting `\"errorLens.enabled\"`)","category":"Error Lens"},{"command":"errorLens.toggleError","title":"Toggle Errors","description":"Enable/Disable Errors in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleWarning","title":"Toggle Warnings","description":"Enable/Disable Warnings in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleInfo","title":"Toggle Info","description":"Enable/Disable Info in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleHint","title":"Toggle Hint","description":"Enable/Disable Hint in `\"errorLens.enabledDiagnosticLevels\"` setting.","category":"Error Lens"},{"command":"errorLens.toggleInlineMessage","title":"Toggle Inline Message","description":"Toggle global setting `\"errorLens.messageEnabled\"`.","category":"Error Lens"},{"command":"errorLens.searchForProblem","title":"Search for problem","description":"Open problem in default browser (controlled by `errorLens.searchForProblemQuery` setting).","category":"Error Lens"},{"command":"errorLens.selectProblem","title":"Select Problem","description":"Set editor selection to the problem range (controlled by `errorLens.selectProblemType` setting).","category":"Error Lens"},{"command":"errorlens.toggleWorkspace","title":"Toggle Workspace in Disabled List","description":"Exclude/Include current workspace by fs path.","category":"Error Lens"},{"command":"errorLens.disableLine","title":"Disable line","description":"Add a comment to disable line for linter rule. Comment format is controlled by `\"errorLens.disableLineComments\"` setting.","category":"Error Lens"},{"command":"errorLens.findLinterRuleDefinition","title":"Find Linter Rule Definition","description":"Search in local linter files (like `.eslintrc.json`) for the rule definition. Target files are controlled by \"errorLens.lintFilePaths\" setting.","category":"Error Lens"},{"command":"errorLens.copyProblemMessage","title":"Copy Problem Message","description":"Copy problem message to the clipboard (at the active cursor).","category":"Error Lens"},{"command":"errorLens.excludeProblem","title":"Exclude Problem","description":"Exclude problem (at the active cursor) (write into settings).","category":"Error Lens"},{"command":"errorLens.copyProblemCode","title":"Copy Problem Code","description":"Copy problem code to the clipboard (at the active cursor).","category":"Error Lens"},{"command":"errorLens.updateEverything","title":"Update Everything","description":"Update all decorations. Supports args {\"kind\": \"update\" | \"clear\"}","category":"Error Lens"}],"configuration":{"properties":{"errorLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Controls all decorations and features (except commands)."},"errorLens.respectUpstreamEnabled":{"type":"object","properties":{"enabled":{"type":"boolean","description":"When true - extension will honour VSCode setting `#problems.visibility#` and not show errors if `#problems.visibility#` is false.","default":true},"inlineMessage":{"type":"boolean","default":true},"gutter":{"type":"boolean","default":true},"statusBar":{"type":"boolean","default":false}},"default":{"enabled":true,"inlineMessage":true,"gutter":true,"statusBar":false},"markdownDescription":"When enabled - extension will take into account global VSCode setting `#problems.visibility#`. ([1.85.0 changelog](https://code.visualstudio.com/updates/v1_85#_hide-problem-decorations)).","additionalProperties":false},"errorLens.enabledInMergeConflict":{"type":"boolean","default":true,"markdownDescription":"Controls if decorations are shown if the editor has git merge conflict indicators `<<<<<<<` or `=======` or `>>>>>>>`."},"errorLens.fontFamily":{"type":"string","default":"","markdownDescription":"Font family of inline message. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontfamily). May break `#errorLens.alignMessage#`"},"errorLens.fontWeight":{"type":"string","enum":["100","200","300","400","normal","500","600","700","bold","800","900"],"default":"normal","markdownDescription":"Font weight of inline message. `\"normal\"` is alias for 400, `\"bold\"` is alias for 700). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontweight)"},"errorLens.fontStyleItalic":{"type":"boolean","default":false,"markdownDescription":"When enabled - shows inline message in italic font style. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontstyleitalic)"},"errorLens.fontSize":{"type":"string","default":"","markdownDescription":"Font size of inline message ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/length)). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfontsize). May break `#errorLens.alignMessage#`"},"errorLens.margin":{"type":"string","default":"4ch","markdownDescription":"Distance between the last word on the line and the start of inline message ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/length)). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmargin)"},"errorLens.alignMessage":{"type":"object","properties":{"start":{"type":"integer","minimum":0,"description":"Starting column where to align decorations."},"end":{"type":"integer","minimum":0,"description":"Ending column where to align decorations."},"minimumMargin":{"type":"integer","description":"Minimal space between line end and decoration. Very similar to the global setting `errorLens.margin`, but can only be a number of characters.","minimum":0},"padding":{"type":"array","items":{"type":"number","default":0,"minimum":0},"minItems":2,"maxItems":2,"default":[0,0],"description":"Very similar to the global setting `errorLens.padding`, but it can only be a number (not any CSS unit like pixels). First number is top+bottom padding; Second number - left+right padding."},"useFixedPosition":{"type":"boolean","default":true,"description":"Use fixed position for decoration that has stuttering/twitching on the active line (e.g. when typing). Will prevent hover over decoration text."}},"default":{"start":0,"end":0,"minimumMargin":0,"padding":[0,0],"useFixedPosition":true},"markdownDescription":"Align inline error message (either by starting position or ending position). Only works for monospace fonts. Set \"start\" and \"end\" to **0** to disable. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensalignmessage)","additionalProperties":false},"errorLens.padding":{"type":"string","default":"","markdownDescription":"Padding of the inline message. Visible when `#errorLens.messageBackgroundMode#` is set to \"message\". [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenspadding)","examples":["2px 1ch"]},"errorLens.borderRadius":{"type":"string","default":"0.2em","markdownDescription":"Border radius of the inline message. Visible when `#errorLens.messageBackgroundMode#` is set to \"message\". [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensborderradius)","examples":["5px","5em 0px","0px 5em 5em 0px"]},"errorLens.enabledDiagnosticLevels":{"type":"array","items":{"type":"string","enum":["error","warning","info","hint"]},"uniqueItems":true,"markdownDescription":"Customize which diagnostic levels(severity) to highlight. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensenableddiagnosticlevels)","default":["error","warning","info"]},"errorLens.messageTemplate":{"type":"string","default":"$message","markdownDescription":"Template used for all inline messages. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessagetemplate)"},"errorLens.messageMaxChars":{"type":"integer","default":500,"minimum":0,"markdownDescription":"Cut off inline message if it's longer than this value. (Improves performance when the diagnostic message is long). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessagemaxchars)"},"errorLens.severityText":{"type":"array","items":{"type":"string"},"markdownDescription":"Replaces `$severity` variable in `#errorLens.messageTemplate#`. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensseveritytext)","default":["⛔","⚠","ℹ","🍏"],"minItems":4,"maxItems":4},"errorLens.messageEnabled":{"type":"boolean","default":true,"markdownDescription":"Controls whether inline message is shown or not (Including background highlight). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessageenabled)"},"errorLens.messageBackgroundMode":{"type":"string","default":"line","enum":["line","message","none"],"enumDescriptions":["The entire line is highlighted.","Inline message is highlighted.","Message is not highlighted (only has foreground colors)."],"markdownDescription":"Controls how inline message is highlighted in the editor (entire line / only message / none). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensmessagebackgroundmode)"},"errorLens.problemRangeDecorationEnabled":{"type":"boolean","default":false,"markdownDescription":"When checked - highlight the entire problem range. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensproblemrangedecorationenabled)"},"errorLens.editorHoverPartsEnabled":{"type":"object","properties":{"messageEnabled":{"type":"boolean","default":false},"sourceCodeEnabled":{"type":"boolean","default":false},"buttonsEnabled":{"type":"boolean","default":false}},"additionalProperties":false,"default":{"messageEnabled":false,"sourceCodeEnabled":false,"buttonsEnabled":false},"markdownDescription":"Controls which parts of the editor hover tooltip to show."},"errorLens.statusBarIconsEnabled":{"type":"boolean","markdownDescription":"When enabled - shows highlighted error/warning icons in status bar. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensstatusbariconsenabled)","default":false},"errorLens.statusBarIconsPriority":{"type":"integer","markdownDescription":"Move status bar icons left or right by adjusting the number priority.","default":-9000},"errorLens.statusBarIconsAlignment":{"type":"string","markdownDescription":"Choose on which side the icons status bar is on: left or right.","enum":["left","right"],"default":"left"},"errorLens.statusBarIconsTargetProblems":{"type":"string","enum":["all","activeEditor","visibleEditors"],"enumDescriptions":["Should be the same as native status bar icons - counts all known problems from all files.","Count only problems from the active text editor.","Count only problems from the visible text editors."],"default":"all","markdownDescription":"Which problems to use for counting problems at icons status bar."},"errorLens.statusBarIconsUseBackground":{"type":"boolean","markdownDescription":"When enabled - highlights status bar icons with background, when disabled - with foreground.","default":true},"errorLens.statusBarIconsAtZero":{"type":"string","markdownDescription":"What to do when there are 0 errors/warnings - hide the item or strip its background color.","enum":["hide","removeBackground"],"default":"removeBackground"},"errorLens.statusBarMessageEnabled":{"type":"boolean","markdownDescription":"When enabled - shows message in status bar. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensstatusbarmessageenabled)","default":false},"errorLens.statusBarMessagePriority":{"type":"integer","markdownDescription":"Move status bar message left or right by adjusting the number priority.","default":-10000},"errorLens.statusBarMessageAlignment":{"type":"string","markdownDescription":"Choose on which side the message status bar is on: left or right.","enum":["left","right"],"default":"left"},"errorLens.statusBarColorsEnabled":{"type":"boolean","markdownDescription":"When enabled - use message decoration foreground as color of Status Bar text. Uses colors `errorLens.statusBarErrorForeground`, `errorLens.statusBarWarningForeground`, `errorLens.statusBarInfoForeground`, `errorLens.statusBarHintForeground`. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensstatusbarcolorsenabled)","default":false},"errorLens.statusBarMessageType":{"type":"string","markdownDescription":"Pick what to show in Status Bar: closest message or only message for the active line.","enum":["closestProblem","closestSeverity","activeLine","activeCursor"],"enumDescriptions":["Show closest to the cursor diagnostic.","Show closest to the cursor diagnostic sorted by severity (e.g. error will be shown before warning even if it's farther from the cursor).","Show only diagnostic that is on the same line as the cursor.","Similar to \"activeLine\" but follows the cursor movement inside the line."],"default":"activeLine"},"errorLens.statusBarCommand":{"type":"string","markdownDescription":"Command that executes on click for Status Bar.","enum":["goToProblem","goToLine","copyMessage"],"default":"goToProblem"},"errorLens.statusBarMessageTemplate":{"type":"string","default":"","markdownDescription":"Template for status bar message. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic"},"errorLens.replace":{"type":"array","default":[],"items":{"type":"object","properties":{"matcher":{"type":"string","description":"The RegExp pattern against which to match diagnostic messages"},"message":{"type":"string","description":"The entire replacement for messages matching matcher. Can reference match groups like $0 (entire expression), $1 (first capture group), etc."}},"required":["matcher","message"]},"markdownDescription":"Specify message to transform. E.g. if this is configured to [{ matcher: 'foo (.*)', message: 'just $1' }], the message 'foo bar' would be displayed as 'just bar'. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensreplace)"},"errorLens.exclude":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specify messages that should not be highlighted (RegExp). Strings passed to the RegExp constructor: `new RegExp(EXCLUDE_ITEM, 'iu');`"},"errorLens.excludeBySource":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specify `source` or `source(code)` pair to exclude. Examples: \n\n```json\n[\n\t\"eslint\",// exclude all problems from eslint linter\n\t\"eslint(padded-blocks)\",// exclude padded-blocks rule from eslint linter\n\t\"Pylance(reportUndefinedVariable)\",// exlude reportUndefinedVariable rule from Pylance linter\n]\n```"},"errorLens.excludePatterns":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Exclude files by using [glob](https://code.visualstudio.com/docs/editor/glob-patterns) pattern. Example `[\"**/*.{ts,js}\"]`"},"errorLens.excludeWorkspaces":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Exclude workspaces by path."},"errorLens.disableLineComments":{"type":"object","markdownDescription":"Used for `errorLens.disableLine` command that adds a comment disabling linter rule for a line.\nTo force comment on the same line - add `SAME_LINE` to the message: `\"eslint\": \"// eslint-disable-line $code SAME_LINE\"`","patternProperties":{".*":{"type":"string"}},"default":{"eslint":"// eslint-disable-next-line $code","Stylelint":"/* stylelint-disable-next-line $code */"}},"errorLens.lintFilePaths":{"type":"object","default":{"eslint":["**/*.eslintrc.{js,cjs,yaml,yml,json}","**/*package.json"],"Stylelint":["**/*.stylelintrc","**/*.stylelintrc.{cjs,js,json,yaml,yml}","**/*stylelint.config.{cjs,js}","**/*package.json"]},"patternProperties":{".*":{"oneOf":[{"type":"array","items":{"type":"string"}},{"type":"string","enum":["none"]}]}},"markdownDescription":"Specify where to search for linter rule definitions by diagnostic source ([glob](https://code.visualstudio.com/docs/editor/glob-patterns) for local linter files). `node_modules` folder is excluded."},"errorLens.searchForProblemQuery":{"type":"string","default":"https://duckduckgo.com/?q=$message","markdownDescription":"Pick query to open in default browser when searching for problem with `errorLens.searchForProblem` command."},"errorLens.selectProblemType":{"type":"string","default":"closestProblem","enum":["closestProblem","closestSeverity","activeLine"],"enumDescriptions":["Show closest to the cursor diagnostic.","Show closest to the cursor diagnostic (sorted by severity e.g. error will be shown before warning even if it's farther from the cursor).","Show only diagnostic that is on the same line as the cursor."],"markdownDescription":"Which problem to select (closest / active line) when executing `errorLens.selectProblem` command."},"errorLens.light":{"type":"object","markdownDescription":"Specify color of decorations for when the light color theme is active.","properties":{"errorGutterIconPath":{"type":"string","description":"Absolute path to error gutter icon for light themes.","default":""},"warningGutterIconPath":{"type":"string","description":"Absolute path to warning gutter icon for light themes.","default":""},"infoGutterIconPath":{"type":"string","description":"Absolute path to info gutter icon for light themes.","default":""},"hintGutterIconPath":{"type":"string","description":"Absolute path to hint gutter icon for light themes.","default":""},"errorGutterIconColor":{"type":"string","default":"","markdownDescription":"Error color of simple gutter icons (shapes and letters) for light themes.","format":"color"},"warningGutterIconColor":{"type":"string","default":"","markdownDescription":"Warning color of simple gutter icons (shapes and letters) for light themes.","format":"color"},"infoGutterIconColor":{"type":"string","default":"","markdownDescription":"Info color of simple gutter icons (shapes and letters) for light themes.","format":"color"},"hintGutterIconColor":{"type":"string","default":"","markdownDescription":"Hint color of simple gutter icons (shapes and letters) for light themes.","format":"color"}}},"errorLens.delay":{"type":"integer","markdownDescription":"Delay (ms) before showing problem decorations (**0** to disable). Minimum delay of **500** is enforced by the extension. `#errorLens.delayMode#` controls how to handle the delay.","default":0},"errorLens.delayMode":{"type":"string","default":"new","enum":["new","old","debounce"],"markdownEnumDescriptions":["New problems appear according to `errorLens.delay` setting. Fixed problems disappear faster.","Decorations for problems are debounced according to `errorLens.delay` setting.","Decorations disappear when document changes (typing)."],"markdownDescription":"Pick which version of the delay to use."},"errorLens.onSave":{"type":"boolean","markdownDescription":"When enabled - updates decorations only on document save (manual).","default":false},"errorLens.onSaveTimeout":{"type":"number","markdownDescription":"Time period (ms) that used for showing decorations after the document save (manual, not auto save).","default":1000,"minimum":500},"errorLens.onSaveUpdateOnActiveEditorChange":{"type":"boolean","markdownDescription":"When `#errorLens.onSave#` enabled - extension still draws decorations when active/visible editors change.","default":true},"errorLens.enableOnDiffView":{"type":"boolean","markdownDescription":"Enable decorations when viewing a diff view in the editor (e.g. Git diff). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensenableondiffview)","default":false},"errorLens.followCursor":{"type":"string","enum":["allLines","allLinesExceptActive","activeLine","closestProblem","closestProblemMultiline","closestProblemMultilineInViewport","closestProblemMultilineBySeverity"],"enumDescriptions":["Highlight all problems in file","Highlight all problems in file (except the line at the cursor)","Highlight only the problem at the cursor","Highlight only closest to the cursor problem","Highlight only closest to the cursor problem (only in visible lines) (decoration spans multiple lines)","Highlight only closest to the cursor problem (error before warning, ...) (decoration spans multiple lines)"],"markdownDescription":"Highlight only portion of the problems. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfollowcursor)","default":"allLines"},"errorLens.followCursorMore":{"type":"number","markdownDescription":"Augments `#errorLens.followCursor#`.\nAdds number of lines to top and bottom when `#errorLens.followCursor#` is set to `activeLine`.\n Adds number of closest problems when `#errorLens.followCursor#` is `closestProblem` [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensfollowcursormore)","default":0},"errorLens.gutterIconsEnabled":{"type":"boolean","markdownDescription":"When enabled - shows gutter icons (In place of the debug breakpoint icon). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonsenabled)","default":false},"errorLens.gutterIconsFollowCursorOverride":{"type":"boolean","markdownDescription":"When enabled and `#errorLens.followCursor#` setting is not `allLines`, then gutter icons would be rendered for all problems. But line decorations (background, message) only for active line. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonsfollowcursoroverride)","default":true},"errorLens.gutterIconSize":{"type":"string","markdownDescription":"Change gutter icon size. Examples: `auto`, `contain`, `cover`, `50%`, `150%` ([CSS units](https://developer.mozilla.org/en-US/docs/Web/CSS/background-size)). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonsize)","examples":["auto","contain","cover","50%","150%"],"default":"100%"},"errorLens.gutterIconSet":{"type":"string","markdownDescription":"Change gutter icon style. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensguttericonset)","enum":["default","defaultOutline","borderless","circle","square","squareRounded","letter","emoji"],"enumDescriptions":["Similar to vscode icons in Problems Panel (old).","Similar to vscode icons in Problems Panel (new).","Similar to vscode icons in Problems Panel, only without a border.","Simple filled circle.","Simple filled square.","Simple filled square with rounded corners.","Simple one letter icon (E,W,I,H).","Emoji. (`errorLens.gutterEmoji` to control which emoji to show.)"],"default":"default"},"errorLens.gutterEmoji":{"type":"object","properties":{"error":{"type":"string","minLength":0,"default":"💀"},"warning":{"type":"string","minLength":0,"default":"😞"},"info":{"type":"string","minLength":0,"default":"🆗"},"hint":{"type":"string","minLength":0,"default":"🍏"}},"default":{"error":"💀","warning":"😞","info":"🆗","hint":"🍏"},"additionalProperties":false,"markdownDescription":"Pick emoji symbol for gutter icon when `#errorLens.gutterIconSet#` is `emoji`. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensgutteremoji)"},"errorLens.errorGutterIconPath":{"type":"string","markdownDescription":"Absolute path to error gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.warningGutterIconPath":{"type":"string","markdownDescription":"Absolute path to warning gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.infoGutterIconPath":{"type":"string","markdownDescription":"Absolute path to info gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.hintGutterIconPath":{"type":"string","markdownDescription":"Absolute path to hint gutter icon. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericonpath)","default":""},"errorLens.errorGutterIconColor":{"type":"string","default":"#e45454","markdownDescription":"Error color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.warningGutterIconColor":{"type":"string","default":"#ff942f","markdownDescription":"Warning color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.infoGutterIconColor":{"type":"string","default":"#00b7e4","markdownDescription":"Info color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.hintGutterIconColor":{"type":"string","default":"#2faf64","markdownDescription":"Hint color of simple gutter icons (shapes and letters). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenserrorguttericoncolor)","format":"color"},"errorLens.removeLinebreaks":{"type":"boolean","default":true,"markdownDescription":"When enabled - replaces line breaks in inline diagnostic message with whitespaces."},"errorLens.replaceLinebreaksSymbol":{"type":"string","default":"⏎","markdownDescription":"Symbol to replace linebreaks. Requires enabling `#errorLens.removeLinebreaks#`."},"errorLens.scrollbarHackEnabled":{"type":"boolean","default":false,"markdownDescription":"When enabled - prevents showing horizontal scrollbar in editor (caused by inline decorations). Also prevents mouse hover at inline message. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensscrollbarhackenabled)"},"errorLens.decorations":{"type":"object","markdownDescription":"Advanced decoration tweaking. Possible keys: `errorRange`, `warningRange`, `infoRange`, `hintRange`, `errorMessage, `warningMessage`, `infoMessage`, `hintMessage`.\n\n Possible properties: `backgroundColor`, `color`, `outline`, `border`, ... [api](https://code.visualstudio.com/api/references/vscode-api#ThemableDecorationAttachmentRenderOptions). [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlensdecorations)","default":{"errorRange":{},"warningRange":{},"infoRange":{},"hintRange":{},"errorMessage":{},"warningMessage":{},"infoMessage":{},"hintMessage":{}},"patternProperties":{"^(errorRange|warningRange|infoRange|hintRange|errorMessage|warningMessage|infoMessage|hintMessage)$":{"type":"object","markdownDescription":"☑️ Key exists.","properties":{}}},"additionalProperties":false},"errorLens.ignoreUntitled":{"type":"boolean","default":false,"markdownDescription":"Controls whether to run on untitled (unsaved) files."},"errorLens.ignoreDirty":{"type":"boolean","default":false,"markdownDescription":"Controls whether to run on dirty (modified unsaved) files."},"errorLens.codeLensEnabled":{"type":"boolean","default":false,"markdownDescription":"Controls whether to show the Error Lens as a Code Lens above the code. [demo](https://github.com/usernamehw/vscode-error-lens/blob/master/docs/docs.md#errorlenscodelensenabled)"},"errorLens.codeLensLength":{"type":"object","properties":{"min":{"type":"integer","minimum":0,"default":0},"max":{"type":"integer","minimum":10,"default":200}},"additionalProperties":false,"default":{"min":0,"max":200},"markdownDescription":"Enforce minimum and maximum length of code lens messages."},"errorLens.codeLensTemplate":{"type":"string","default":"$severity $message","markdownDescription":"Template used for all messages appearing in the `#errorLens.codeLensEnabled#`. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic"},"errorLens.codeLensOnClick":{"type":"string","enum":["none","showProblemsView","showQuickFix","searchForProblem"],"enumDescriptions":["Does nothing.","Shows problems view.","Shows quick fix menu.","Search for the problem."],"default":"showQuickFix","markdownDescription":"Controls what do on clicking the `#errorLens.codeLensEnabled#`."},"errorLens.experimental":{"type":"object","properties":{},"tags":["experimental"],"additionalProperties":false,"markdownDescription":"Experimental / temporary settings.","default":{}}}},"colors":[{"id":"errorLens.errorBackground","defaults":{"dark":"#e454541b","light":"#e4545420","highContrast":"#e454541b"},"description":"Background color of the entire line containing error."},{"id":"errorLens.errorMessageBackground","defaults":{"dark":"#e4545419","light":"#e4545419","highContrast":"#e4545419"},"description":"Background color of the error message."},{"id":"errorLens.errorRangeBackground","defaults":{"dark":"#e4545419","light":"#e4545419","highContrast":"#e4545419"},"description":"Background color of the error range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.errorBackgroundLight","defaults":{"dark":"#e4545420","light":"#e4545420","highContrast":"#e4545420"},"description":"Background color of the entire line containing error (Only in light themes)."},{"id":"errorLens.errorForeground","defaults":{"dark":"#ff6464","light":"#e45454","highContrast":"#ff6464"},"description":"Text color used to highlight lines containing errors."},{"id":"errorLens.errorForegroundLight","defaults":{"dark":"#e45454","light":"#e45454","highContrast":"#e45454"},"description":"Text color used to highlight lines containing errors (Only in light themes)."},{"id":"errorLens.warningBackground","defaults":{"dark":"#ff942f1b","light":"#ff942f20","highContrast":"#ff942f1b"},"description":"Background color used to highlight lines containing warnings."},{"id":"errorLens.warningMessageBackground","defaults":{"dark":"#ff942f19","light":"#ff942f19","highContrast":"#ff942f19"},"description":"Background color of the warning message."},{"id":"errorLens.warningRangeBackground","defaults":{"dark":"#ff942f19","light":"#ff942f19","highContrast":"#ff942f19"},"description":"Background color of the warning range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.warningBackgroundLight","defaults":{"dark":"#ff942f20","light":"#ff942f20","highContrast":"#ff942f20"},"description":"Background color used to highlight lines containing warnings (Only in light themes)."},{"id":"errorLens.warningForeground","defaults":{"dark":"#fa973a","light":"#ff942f","highContrast":"#fa973a"},"description":"Text color used to highlight lines containing warnings."},{"id":"errorLens.warningForegroundLight","defaults":{"dark":"#ff942f","light":"#ff942f","highContrast":"#ff942f"},"description":"Text color used to highlight lines containing warnings (Only in light themes)."},{"id":"errorLens.infoBackground","defaults":{"dark":"#00b7e420","light":"#00b7e420","highContrast":"#00b7e420"},"description":"Background color used to highlight lines containing info."},{"id":"errorLens.infoMessageBackground","defaults":{"dark":"#00b7e419","light":"#00b7e419","highContrast":"#00b7e419"},"description":"Background color of the info message."},{"id":"errorLens.infoRangeBackground","defaults":{"dark":"#00b7e419","light":"#00b7e419","highContrast":"#00b7e419"},"description":"Background color of the info range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.infoBackgroundLight","defaults":{"dark":"#00b7e420","light":"#00b7e420","highContrast":"#00b7e420"},"description":"Background color used to highlight lines containing info (Only in light themes)."},{"id":"errorLens.infoForeground","defaults":{"dark":"#00b7e4","light":"#00b7e4","highContrast":"#00b7e4"},"description":"Text color used to highlight lines containing info."},{"id":"errorLens.infoForegroundLight","defaults":{"dark":"#00b7e4","light":"#00b7e4","highContrast":"#00b7e4"},"description":"Text color used to highlight lines containing info (Only in light themes)."},{"id":"errorLens.hintBackground","defaults":{"dark":"#17a2a220","light":"#17a2a220","highContrast":"#17a2a220"},"description":"Background color used to highlight lines containing hints."},{"id":"errorLens.hintMessageBackground","defaults":{"dark":"#17a2a219","light":"#17a2a219","highContrast":"#17a2a219"},"description":"Background color of the hint message."},{"id":"errorLens.hintRangeBackground","defaults":{"dark":"#17a2a219","light":"#17a2a219","highContrast":"#17a2a219"},"description":"Background color of the hint range (when errorLens.problemRangeDecorationEnabled setting enabled)."},{"id":"errorLens.hintBackgroundLight","defaults":{"dark":"#17a2a220","light":"#17a2a220","highContrast":"#17a2a220"},"description":"Background color used to highlight lines containing hints (Only in light themes)."},{"id":"errorLens.hintForeground","defaults":{"dark":"#2faf64","light":"#2faf64","highContrast":"#2faf64"},"description":"Text color used to highlight lines containing hints."},{"id":"errorLens.hintForegroundLight","defaults":{"dark":"#2faf64","light":"#2faf64","highContrast":"#2faf64"},"description":"Text color used to highlight lines containing hints (Only in light themes)."},{"id":"errorLens.statusBarIconErrorForeground","defaults":{"dark":"#ff6464","light":"#e45454","highContrast":"#ff6464"},"description":"Status bar icon item error color. Foreground is used when the `errorLens.statusBarIconsUseBackground` setting is disabled."},{"id":"errorLens.statusBarIconWarningForeground","defaults":{"dark":"#fa973a","light":"#ff942f","highContrast":"#fa973a"},"description":"Status bar icon item error color. Foreground is used when the `errorLens.statusBarIconsUseBackground` setting is disabled."},{"id":"errorLens.statusBarErrorForeground","defaults":{"dark":"#ff6464","light":"#e45454","highContrast":"#ff6464"},"description":"Status bar item error color."},{"id":"errorLens.statusBarWarningForeground","defaults":{"dark":"#fa973a","light":"#ff942f","highContrast":"#fa973a"},"description":"Status bar item warning color."},{"id":"errorLens.statusBarInfoForeground","defaults":{"dark":"#00b7e4","light":"#00b7e4","highContrast":"#00b7e4"},"description":"Status bar item info color."},{"id":"errorLens.statusBarHintForeground","defaults":{"dark":"#2faf64","light":"#2faf64","highContrast":"#2faf64"},"description":"Status bar item hint color."}]},"scripts":{"vscode:prepublish":"webpack --mode production --color --devtool hidden-source-map","watch":"webpack --mode development --watch --stats minimal"},"devDependencies":{"@soda/friendly-errors-webpack-plugin":"^1.8.1","@types/lodash":"^4.17.5","@types/node":"^18.19.36","@types/vscode":"^1.85.0","@typescript-eslint/eslint-plugin":"^5.62.0","@typescript-eslint/parser":"^5.62.0","eslint":"^8.57.0","ts-loader":"^9.5.1","typescript":"^5.4.5","webpack":"^5.92.0","webpack-cli":"^5.1.4"},"dependencies":{"lodash":"^4.17.21"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/usernamehw.errorlens-3.24.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Alexander","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"9d8c32ab-354c-4daf-a9bf-20b633734435","publisherId":"151820df-5dc5-4c97-8751-eb84643203fa","publisherDisplayName":"Alexander","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":180755},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"enkia.tokyo-night","uuid":"1cac7443-911e-48b9-8341-49f3880c288a"},"manifest":{"name":"tokyo-night","displayName":"Tokyo Night","description":"A clean Visual Studio Code theme that celebrates the lights of Downtown Tokyo at night.","version":"1.1.2","publisher":"enkia","license":"MIT","keywords":["theme","contrast","dark","light","tokyo","clean"],"icon":"icon.png","homepage":"https://github.com/enkia/tokyo-night-vscode-theme","repository":{"url":"https://github.com/enkia/tokyo-night-vscode-theme","type":"git"},"bugs":{"url":"https://github.com/enkia/tokyo-night-vscode-theme/issues"},"galleryBanner":{"color":"#1f2335","theme":"dark"},"engines":{"vscode":"^1.17.0"},"categories":["Themes","Other"],"contributes":{"themes":[{"label":"Tokyo Night","uiTheme":"vs-dark","path":"./themes/tokyo-night-color-theme.json"},{"label":"Tokyo Night Storm","uiTheme":"vs-dark","path":"./themes/tokyo-night-storm-color-theme.json"},{"label":"Tokyo Night Light","uiTheme":"vs","path":"./themes/tokyo-night-light-color-theme.json"}]},"scripts":{"package":"vsce package","publish":"vsce publish"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/enkia.tokyo-night-1.1.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"enkia","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"1cac7443-911e-48b9-8341-49f3880c288a","publisherId":"745c7670-02e7-4a27-b662-e1b5719f2ba7","publisherDisplayName":"enkia","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":237289},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ftsamoyed.theme-pink-cat-boo","uuid":"71f8bc18-fb5f-401f-aa46-5a5484e605a7"},"manifest":{"name":"theme-pink-cat-boo","displayName":"Pink-Cat-Boo Theme","version":"1.3.0","publisher":"ftsamoyed","description":"A sweet and cute theme especially for coder girls.","icon":"icon.png","engines":{"vscode":"*"},"auth":{"name":"ftsamoyed(Fiona Fan)","email":"ftsamoyed@gmail.com","url":"https://github.com/ftsamoyed"},"repository":{"type":"git","url":"https://github.com/ftsamoyed/PinkCatBoo"},"bugs":{"url":"https://github.com/ftsamoyed/PinkCatBoo/issues"},"galleryBanner":{"color":"#202330","theme":"dark"},"categories":["Themes","Other"],"keywords":["theme","pink","cute","dark"],"contributes":{"themes":[{"label":"Pink Cat Boo","uiTheme":"vs-dark","path":"./themes/pink-cat-boo.json"}]}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ftsamoyed.theme-pink-cat-boo-1.3.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Fiona Fan","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"71f8bc18-fb5f-401f-aa46-5a5484e605a7","publisherId":"0a86ea74-efd9-481a-bd8b-a12757203595","publisherDisplayName":"Fiona Fan","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":215103},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-vscode.cpptools-themes","uuid":"99b17261-8f6e-45f0-9ad5-a69c6f509a4f"},"manifest":{"name":"cpptools-themes","displayName":"C/C++ Themes","description":"UI Themes for C/C++ extension.","version":"2.0.0","publisher":"ms-vscode","preview":false,"icon":"assets/LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.30.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","Microsoft","Theme","Themes"],"categories":["Themes"],"contributes":{"themes":[{"id":"Visual Studio Dark - C++","label":"Dark (Visual Studio - C/C++)","uiTheme":"vs-dark","path":"./themes/cpptools_dark_vs_new.json"},{"id":"Visual Studio 2017 Dark - C++","label":"2017 Dark (Visual Studio - C/C++)","uiTheme":"vs-dark","path":"./themes/cpptools_dark_vs.json"},{"id":"Visual Studio Light - C++","label":"Light (Visual Studio - C/C++)","uiTheme":"vs","path":"./themes/cpptools_light_vs_new.json"},{"id":"Visual Studio 2017 Light - C++","label":"2017 Light (Visual Studio - C/C++)","uiTheme":"vs","path":"./themes/cpptools_light_vs.json"}]}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ms-vscode.cpptools-themes-2.0.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"99b17261-8f6e-45f0-9ad5-a69c6f509a4f","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":300791},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"zhuangtongfa.material-theme","uuid":"26a529c9-2654-4b95-a63f-02f6a52429e6"},"manifest":{"name":"material-theme","displayName":"One Dark Pro","description":"Atom's iconic One Dark theme for Visual Studio Code","version":"3.19.0","publisher":"zhuangtongfa","license":"MIT","bugs":{"url":"https://github.com/Binaryify/OneDark-Pro/issues"},"homepage":"https://binaryify.github.io/OneDark-Pro/","repository":{"type":"git","url":"https://github.com/Binaryify/OneDark-Pro"},"engines":{"vscode":"^1.76.0"},"activationEvents":["onStartupFinished"],"main":"./out/extension.js","browser":"./out/web/extension.js","categories":["Themes"],"extensionKind":["ui","workspace"],"eslintConfig":{"extends":["@mskelton","@mskelton/eslint-config/typescript"],"plugins":["html"],"rules":{"sort/imports":"off"}},"scripts":{"docs":"docsify serve docs","build:theme":"ts-node --project scripts/tsconfig.json scripts/generate-theme.ts","build:ts":"tsc -p src","build":"yarn build:sass && yarn build:theme && yarn build:ts","lint":"eslint . --ext .ts","lint:fix":"eslint . --ext .ts --fix","watch:theme":"nodemon ./scripts/generate-theme.ts","watch:ts":"yarn build:ts -w","vscode:prepublish":"yarn build && yarn package-web","package":"vsce package","build:sass":"yarn sass --no-source-map scss:styles && yarn sass --no-source-map scss:styles/origin","compile-web":"webpack --config ./build/web-extension.webpack.config.js","watch-web":"webpack --watch --config ./build/web-extension.webpack.config.js","package-web":"webpack --mode production --devtool hidden-source-map --config ./build/web-extension.webpack.config.js"},"prettier":{"singleQuote":true,"semi":false},"contributes":{"markdown.previewStyles":["./styles/base-inside.css","./styles/markdown-inside.css","./styles/atom-one-dark-inside.css"],"commands":[{"command":"oneDarkPro.showChangelog","title":"Show changelog","category":"OneDark Pro"},{"command":"oneDarkPro.setVivid","title":"Turn on vivid colors","category":"OneDark Pro"},{"command":"oneDarkPro.cancelVivid","title":"Turn off vivid colors","category":"OneDark Pro"},{"command":"oneDarkPro.setItalic","title":"Turn on italic code on some scopes","category":"OneDark Pro"},{"command":"oneDarkPro.cancelItalic","title":"Turn off italic code on some scopes","category":"OneDark Pro"},{"command":"oneDarkPro.setBold","title":"Turn on bold code on some scopes","category":"OneDark Pro"},{"command":"oneDarkPro.cancelBold","title":"Turn off bold code on some scopes","category":"OneDark Pro"}],"themes":[{"label":"One Dark Pro","uiTheme":"vs-dark","path":"./themes/OneDark-Pro.json"},{"label":"One Dark Pro Flat","uiTheme":"vs-dark","path":"./themes/OneDark-Pro-flat.json"},{"label":"One Dark Pro Darker","uiTheme":"vs-dark","path":"./themes/OneDark-Pro-darker.json"},{"label":"One Dark Pro Mix","uiTheme":"vs-dark","path":"./themes/OneDark-Pro-mix.json"},{"label":"One Dark Pro Night Flat","uiTheme":"vs-dark","path":"./themes/OneDark-Pro-night-flat.json"}],"configuration":{"title":"One Dark Pro","properties":{"oneDarkPro.editorTheme":{"type":"string","default":"One Dark Pro","markdownDescription":"Switch to different editor theme","enum":["One Dark Pro","One Dark Pro Flat","Nord","Solarized","Solarized Flat","Shadow","Panda","Ayu","VS Code","Just Black","One Dark Pro Darker","One Dark Pro Mix","Ocean","Tokyo","Retro","Gnome","Dark Modern","One Dark Pro Night Flat"]},"oneDarkPro.italic":{"type":"boolean","default":true,"description":"Toggle italics on some scopes"},"oneDarkPro.vivid":{"type":"boolean","default":false,"markdownDescription":"Toggle vivid colors"},"oneDarkPro.bold":{"type":"boolean","default":false,"markdownDescription":"Toggle bold on some scopes"},"oneDarkPro.markdownStyle":{"type":"boolean","default":true,"description":"Toggle Markdown style"},"oneDarkPro.color":{"type":"object","scope":"resource","default":{"chalky":"","coral":"","dark":"","error":"","fountainBlue":"","green":"","invalid":"","lightDark":"","lightWhite":"","malibu":"","purple":"","whiskey":"","deepRed":""},"properties":{"chalky":{"type":"string","default":""},"coral":{"type":"string","default":""},"dark":{"type":"string","default":""},"error":{"type":"string","default":""},"fountainBlue":{"type":"string","default":""},"green":{"type":"string","default":""},"invalid":{"type":"string","default":""},"lightDark":{"type":"string","default":""},"lightWhite":{"type":"string","default":""},"malibu":{"type":"string","default":""},"purple":{"type":"string","default":""},"whiskey":{"type":"string","default":""},"deepRed":{"type":"string","default":""}},"additionalProperties":false,"markdownDescription":"Code highlight color, read more [docs](https://binaryify.github.io/OneDark-Pro/#/?id=highlight-color-custom)"}}}},"icon":"icon.png","keywords":["one dark","onedark","one dark pro","onedark pro","theme","atom"],"devDependencies":{"@babel/core":"^7.0.0","@babel/eslint-parser":"^7.0.0","@mskelton/eslint-config":"7.1.0","@mskelton/prettier-config":"5.1.1","@types/node":"16.11.33","@types/vscode":"1.76.0","@typescript-eslint/eslint-plugin":"^5.0.0","@typescript-eslint/parser":"^5.0.0","all-contributors-cli":"6.20.0","docsify-cli":"4.4.4","eslint":"8.14.0","eslint-plugin-html":"6.2.0","eslint-plugin-prettier":"4.0.0","eslint-plugin-sort":"2.4.0","nodemon":"2.0.16","path-browserify":"1.0.1","prettier":"2.6.2","process":"0.11.10","sass":"1.50.1","ts-loader":"9.3.0","ts-node":"10.7.0","typescript":"4.6.4","util":"0.12.5","vsce":"2.7.0","webpack":"5.72.0","webpack-cli":"4.9.2"},"galleryBanner":{"color":"#2d323b","theme":"dark"},"dependencies":{"@types/marked":"^4.0.1","marked":"4"},"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"badges":[{"url":"https://vsmarketplacebadges.dev/version/zhuangtongfa.Material-theme.png","href":"https://marketplace.visualstudio.com/items/zhuangtongfa.Material-theme","description":"Extension version"},{"url":"https://vsmarketplacebadges.dev/installs/zhuangtongfa.Material-theme.png","href":"https://marketplace.visualstudio.com/items/zhuangtongfa.Material-theme","description":"Extension installs"},{"url":"https://vsmarketplacebadges.dev/rating/zhuangtongfa.Material-theme.png","href":"https://marketplace.visualstudio.com/items/zhuangtongfa.Material-theme","description":"Extension Rating"}]},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/zhuangtongfa.material-theme-3.19.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"binaryify","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"26a529c9-2654-4b95-a63f-02f6a52429e6","publisherId":"8ae75bda-ec22-4a17-9340-abf1a20beca9","publisherDisplayName":"binaryify","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":1466635},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"pkief.material-icon-theme","uuid":"5db78037-f674-459f-a236-db622c427c5b"},"manifest":{"name":"material-icon-theme","displayName":"Material Icon Theme","description":"Material Design Icons for Visual Studio Code","version":"5.20.0","license":"MIT","scripts":{"precompile":"rimraf dist && bun run verify","compile":"tsc -p ./","compile:declarations":"tsc -p ./tsconfig.declarations.json","postcompile":"bun run compile:declarations && bun run generateJson && bun run generateClones && bun run check","build":"bun run compile && bun ./build/build-with-esbuild.ts","watch":"bun ./build/watch-with-esbuild.ts","check-colors":"bun ./src/scripts/svg/checkSvgColors.ts","check":"bun ./src/scripts/icons/checks/run.ts","contributors":"bun ./src/scripts/contributors/contributors.ts","generateJson":"bun ./src/scripts/icons/generateJson.ts > ./dist/material-icons.json","generateClones":"bun ./src/scripts/icons/generateClones.ts","lint":"biome check","markdownlint":"markdownlint '**/*.md'","format":"biome format --write ./src","preversion":"bun run contributors && bun run preview && bun run svgo && git add images/*.png icons/*.svg","preview":"bun ./src/scripts/preview/run.ts","svgo":"svgo -i icons -o icons -q","test":"bun test","vscode:prepublish":"bun run lint && bun run build","verify":"sheriff verify","prepublishOnly":"bun ./src/scripts/module/prepare.ts","postpublish":"git checkout package.json && git checkout README.md","prepare":"husky"},"publisher":"PKief","author":{"name":"Material Extensions","email":"material-icons-extensions@googlegroups.com","url":"https://github.com/material-extensions"},"funding":"https://github.com/sponsors/material-extensions","sponsor":{"url":"https://github.com/sponsors/material-extensions"},"engines":{"vscode":"^1.55.0"},"homepage":"https://github.com/material-extensions/vscode-material-icon-theme/blob/main/README.md","repository":{"type":"git","url":"git+https://github.com/material-extensions/vscode-material-icon-theme.git"},"bugs":{"url":"https://github.com/material-extensions/vscode-material-icon-theme/issues"},"icon":"logo.png","galleryBanner":{"color":"#1e1e1e","theme":"dark"},"categories":["Themes"],"keywords":["icons","theme","material","icon-theme","customization"],"extensionKind":["ui","workspace"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"activationEvents":["onStartupFinished"],"main":"./dist/extension/desktop/extension.cjs","browser":"./dist/extension/web/extension.cjs","module":"./dist/module/index.cjs","types":"./dist/types/module/index.d.ts","sideEffects":false,"contributes":{"iconThemes":[{"id":"material-icon-theme","label":"Material Icon Theme","path":"./dist/material-icons.json","_watch":true}],"commands":[{"command":"material-icon-theme.activateIcons","title":"Material Icons: Activate Icon Theme","enablement":"!isWeb"},{"command":"material-icon-theme.toggleIconPacks","title":"Material Icons: Configure Icon Packs","enablement":"!isWeb"},{"command":"material-icon-theme.changeFolderTheme","title":"Material Icons: Change Folder Theme","enablement":"!isWeb"},{"command":"material-icon-theme.changeFolderColor","title":"Material Icons: Change Folder Color","enablement":"!isWeb"},{"command":"material-icon-theme.changeRootFolderColor","title":"Material Icons: Change Root Folder Color","enablement":"!isWeb"},{"command":"material-icon-theme.changeFileColor","title":"Material Icons: Change File Color","enablement":"!isWeb"},{"command":"material-icon-theme.restoreDefaultConfig","title":"Material Icons: Restore Default Configuration","enablement":"!isWeb"},{"command":"material-icon-theme.toggleExplorerArrows","title":"Material Icons: Toggle Explorer Arrows","enablement":"!isWeb"},{"command":"material-icon-theme.changeOpacity","title":"Material Icons: Change Opacity","enablement":"!isWeb"},{"command":"material-icon-theme.toggleGrayscale","title":"Material Icons: Toggle Grayscale","enablement":"!isWeb"},{"command":"material-icon-theme.changeSaturation","title":"Material Icons: Change Saturation","enablement":"!isWeb"}],"configuration":{"type":"object","title":"Material Icons","properties":{"material-icon-theme.activeIconPack":{"type":"string","default":"angular","description":"Select an icon pack that enables specific icons.","enumDescriptions":["Icons for Angular.","Icons for Angular and ngrx.","Icons for React.","Icons for React and Redux.","Icons for Roblox.","Icons for Qwik.","Icons for Vue.","Icons for Vue and Vuex.","Icons for NestJS.","No icon pack enabled."],"enum":["angular","angular_ngrx","react","react_redux","roblox","qwik","vue","vue_vuex","nest","none"]},"material-icon-theme.files.associations":{"type":"object","default":{},"description":"Set custom file icon associations."},"material-icon-theme.folders.associations":{"type":"object","default":{},"description":"Set custom folder icon associations."},"material-icon-theme.rootFolders.associations":{"type":"object","default":{},"description":"Set custom root folder icon associations."},"material-icon-theme.languages.associations":{"type":"object","default":{},"description":"Set custom language icon associations."},"material-icon-theme.files.customClones":{"type":"array","default":[],"items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the custom icon"},"base":{"type":"string","description":"Icon used as a base to create the custom cloned icon"},"color":{"type":"string","description":"Color used as a base to recolor the icon"},"lightColor":{"type":"string","description":"Color used as a base to recolor the icon when the theme is light"},"fileNames":{"type":"array","default":[],"description":"File names to associate with the custom icon","items":{"type":"string"}},"fileExtensions":{"type":"array","default":[],"description":"File extensions to associate with the custom icon","items":{"type":"string"}},"activeForPacks":{"type":"array","default":["angular"],"description":"Only generate this clone when the active icon pack is one of these.","items":{"type":"string","enumDescriptions":["Icons for Angular.","Icons for Angular and ngrx.","Icons for React.","Icons for React and Redux.","Icons for Roblox.","Icons for Qwik.","Icons for Vue.","Icons for Vue and Vuex.","Icons for NestJS.","No icon pack enabled."],"enum":["angular","angular_ngrx","react","react_redux","qwik","vue","vue_vuex","nest","none"]}}}},"description":"Clone any existing icon and create a new one with custom colors and associations"},"material-icon-theme.languages.customClones":{"type":"array","default":[],"items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the custom icon"},"base":{"type":"string","description":"Icon used as a base to create the custom cloned icon"},"color":{"type":"string","description":"Color used as a base to recolor the icon"},"lightColor":{"type":"string","description":"Color used as a base to recolor the icon when the theme is light"},"ids":{"type":"array","default":[],"description":"Language IDs to associate with the custom icon","items":{"type":"string"}},"activeForPacks":{"type":"array","default":["angular"],"description":"Only generate this clone when the active icon pack is one of these.","items":{"type":"string","enumDescriptions":["Icons for Angular.","Icons for Angular and ngrx.","Icons for React.","Icons for React and Redux.","Icons for Roblox.","Icons for Qwik.","Icons for Vue.","Icons for Vue and Vuex.","Icons for NestJS.","No icon pack enabled."],"enum":["angular","angular_ngrx","react","react_redux","qwik","vue","vue_vuex","nest","none"]}}}},"description":"Clone any existing icon and create a new one with custom colors and associations"},"material-icon-theme.folders.customClones":{"type":"array","default":[],"items":{"type":"object","properties":{"name":{"type":"string","description":"Name of the custom icon"},"base":{"type":"string","description":"Icon used as a base to create the custom cloned icon"},"color":{"type":"string","description":"Color used as a base to recolor the icon"},"lightColor":{"type":"string","description":"Color used as a base to recolor the icon when the theme is light"},"folderNames":{"type":"array","description":"Folder names to associate with the custom icon","items":{"type":"string"}},"rootFolderNames":{"type":"array","description":"Root folder names to associate with the custom icon","items":{"type":"string"}}}},"description":"Clone any existing icon and create a new one with custom colors and associations"},"material-icon-theme.folders.theme":{"type":"string","default":"specific","description":"Set the type for the folder icons.","enumDescriptions":["Select specific folder icons.","Select classic folder icons.","No folder icons."],"enum":["specific","classic","none"]},"material-icon-theme.folders.color":{"type":"string","default":"#90a4ae","pattern":"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$","description":"Change the color of the folder icons."},"material-icon-theme.rootFolders.color":{"type":"string","default":"#90a4ae","pattern":"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$","description":"Change the color of the root folder icons."},"material-icon-theme.files.color":{"type":"string","default":"#90a4ae","pattern":"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$","description":"Change the color of the file icons."},"material-icon-theme.opacity":{"type":"number","default":1,"minimum":0,"maximum":1,"description":"Change the opacity of the icons."},"material-icon-theme.hidesExplorerArrows":{"type":"boolean","default":false,"description":"Hide explorer arrows before folder."},"material-icon-theme.saturation":{"type":"number","default":1,"minimum":0,"maximum":1,"description":"Change the saturation of the icons."},"material-icon-theme.enableLogging":{"type":"boolean","default":false,"description":"Enable logging to the output channel."},"material-icon-theme.logLevel":{"type":"string","default":"info","enum":["info","error","debug"],"description":"Set the log level for output messages."}}}},"dependencies":{"chroma-js":"^3.0.0","fast-deep-equal":"^3.1.3","svgson":"^5.3.1","events":"^3.3.0"},"devDependencies":{"@biomejs/biome":"1.9.4","@commitlint/config-conventional":"^19.5.0","@softarc/sheriff-core":"^0.18.0","@types/chroma-js":"^3.1.1","@types/puppeteer":"^7.0.0","@types/vscode":"~1.55.0","axios":"^1.7.2","bun-types":"^1.1.20","changelogen":"^0.6.0","commitlint":"^19.5.0","esbuild":"^0.25.0","husky":"^9.1.6","lint-staged":"^15.2.10","markdownlint-cli":"^0.44.0","puppeteer":"^24.0.0","rimraf":"^6.0.1","svg-color-linter":"^3.0.0","svgo":"^3.0.0","typescript":"^5.5.4"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/pkief.material-icon-theme-5.20.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Philipp Kief","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"5db78037-f674-459f-a236-db622c427c5b","publisherId":"f9e5bc2f-fea1-4075-917f-d83e01e69f56","publisherDisplayName":"Philipp Kief","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":1605351},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"bradlc.vscode-tailwindcss","uuid":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5"},"manifest":{"name":"vscode-tailwindcss","version":"0.14.12","displayName":"Tailwind CSS IntelliSense","description":"Intelligent Tailwind CSS tooling for VS Code","author":"Brad Cornes <hello@bradley.dev>","license":"MIT","homepage":"https://github.com/tailwindlabs/tailwindcss-intellisense","bugs":{"url":"https://github.com/tailwindlabs/tailwindcss-intellisense/issues","email":"hello@bradley.dev"},"repository":{"type":"git","url":"https://github.com/tailwindlabs/tailwindcss-intellisense.git"},"publisher":"bradlc","keywords":["tailwind","tailwindcss","css","intellisense","autocomplete","vscode"],"engines":{"vscode":"^1.67.0"},"categories":["Linters","Other"],"galleryBanner":{"color":"#f9fafb"},"icon":"media/icon.png","activationEvents":["onStartupFinished"],"main":"dist/extension.js","capabilities":{"virtualWorkspaces":false},"contributes":{"languages":[{"id":"tailwindcss","aliases":["Tailwind CSS"],"configuration":"./tailwindcss.language.configuration.json","icon":{"light":"media/icon.png","dark":"media/icon.png"}}],"commands":[{"command":"tailwindCSS.showOutput","title":"Tailwind CSS: Show Output","enablement":"tailwindCSS.hasOutputChannel"},{"command":"tailwindCSS.sortSelection","title":"Tailwind CSS: Sort Selection","enablement":"editorHasSelection && (resourceScheme == file || resourceScheme == vscode-remote) && tailwindCSS.activeTextEditorSupportsClassSorting"}],"grammars":[{"language":"tailwindcss","scopeName":"source.css.tailwind","path":"./syntaxes/source.css.tailwind.tmLanguage.json","tokenTypes":{"meta.function.url string.quoted":"other"}},{"scopeName":"tailwindcss.at-rules.injection","path":"./syntaxes/at-rules.tmLanguage.json","injectTo":["source.css","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.at-rules.scss.injection","path":"./syntaxes/at-rules.scss.tmLanguage.json","injectTo":["source.css.scss"]},{"scopeName":"tailwindcss.at-rules.postcss.injection","path":"./syntaxes/at-rules.postcss.tmLanguage.json","injectTo":["source.css.postcss"]},{"scopeName":"tailwindcss.at-apply.injection","path":"./syntaxes/at-apply.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.theme-fn.injection","path":"./syntaxes/theme-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]},{"scopeName":"tailwindcss.screen-fn.injection","path":"./syntaxes/screen-fn.tmLanguage.json","injectTo":["source.css","source.css.postcss","source.vue","source.svelte","text.html","source.gjs","source.gts"]}],"configuration":{"title":"Tailwind CSS IntelliSense","properties":{"tailwindCSS.emmetCompletions":{"type":"boolean","default":false,"markdownDescription":"Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`"},"tailwindCSS.includeLanguages":{"type":"object","additionalProperties":{"type":"string"},"default":{},"markdownDescription":"Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`"},"tailwindCSS.files.exclude":{"type":"array","items":{"type":"string"},"default":["**/.git/**","**/node_modules/**","**/.hg/**","**/.svn/**"],"markdownDescription":"Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting."},"tailwindCSS.classAttributes":{"type":"array","items":{"type":"string"},"default":["class","className","ngClass","class:list"],"markdownDescription":"The HTML attributes for which to provide class completions, hover previews, linting etc."},"tailwindCSS.classFunctions":{"type":"array","items":{"type":"string"},"default":[],"markdownDescription":"The function or tagged template literal names for which to provide class completions, hover previews, linting etc."},"tailwindCSS.suggestions":{"type":"boolean","default":true,"markdownDescription":"Enable autocomplete suggestions.","scope":"language-overridable"},"tailwindCSS.hovers":{"type":"boolean","default":true,"markdownDescription":"Enable hovers.","scope":"language-overridable"},"tailwindCSS.codeActions":{"type":"boolean","default":true,"markdownDescription":"Enable code actions.","scope":"language-overridable"},"tailwindCSS.codeLens":{"type":"boolean","default":true,"markdownDescription":"Enable code lens.","scope":"language-overridable"},"tailwindCSS.colorDecorators":{"type":"boolean","default":true,"markdownDescription":"Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.","scope":"language-overridable"},"tailwindCSS.validate":{"type":"boolean","default":true,"markdownDescription":"Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings","scope":"language-overridable"},"tailwindCSS.lint.cssConflict":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class names on the same HTML element which apply the same CSS property or properties","scope":"language-overridable"},"tailwindCSS.lint.invalidApply":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)","scope":"language-overridable"},"tailwindCSS.lint.invalidScreen":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)","scope":"language-overridable"},"tailwindCSS.lint.invalidVariant":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)","scope":"language-overridable"},"tailwindCSS.lint.invalidConfigPath":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)","scope":"language-overridable"},"tailwindCSS.lint.invalidTailwindDirective":{"type":"string","enum":["ignore","warning","error"],"default":"error","markdownDescription":"Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)","scope":"language-overridable"},"tailwindCSS.lint.recommendedVariantOrder":{"type":"string","enum":["ignore","warning","error"],"default":"warning","markdownDescription":"Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)","scope":"language-overridable"},"tailwindCSS.experimental.classRegex":{"type":"array","scope":"language-overridable"},"tailwindCSS.experimental.configFile":{"type":["null","string","object"],"default":null,"markdownDescription":"Manually specify the Tailwind config file or files that should be read to provide IntelliSense features. Can either be a single string value, or an object where each key is a config file path and each value is a glob or array of globs representing the set of files that the config file applies to."},"tailwindCSS.showPixelEquivalents":{"type":"boolean","default":true,"markdownDescription":"Show `px` equivalents for `rem` CSS values."},"tailwindCSS.rootFontSize":{"type":"number","default":16,"markdownDescription":"Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`."},"tailwindCSS.inspectPort":{"type":["number","null"],"default":null,"markdownDescription":"Enable the Node.js inspector agent for the language server and listen on the specified port."},"tailwindcss-intellisense.trace.server":{"scope":"window","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Tailwind CSS Language Server."}}}},"scripts":{"_esbuild":"node ../../esbuild.mjs src/extension.ts src/server.ts src/cssServer.ts --outdir=dist","dev":"concurrently --raw --kill-others \"pnpm run watch\" \"pnpm run check --watch\"","watch":"pnpm run clean && pnpm run _esbuild --watch","build":"pnpm run check && pnpm run clean && pnpm run _esbuild --minify && move-file dist/server.js dist/tailwindServer.js && move-file dist/cssServer.js dist/tailwindModeServer.js","package":"vsce package --no-dependencies","publish":"vsce publish --no-dependencies","copy:notices":"cp ../tailwindcss-language-server/ThirdPartyNotices.txt ./dist/ThirdPartyNotices.txt","vscode:prepublish":"pnpm run build && pnpm run copy:notices","clean":"rimraf dist","check":"tsc --noEmit"},"devDependencies":{"@tailwindcss/language-server":"workspace:*","@tailwindcss/language-service":"workspace:*","@types/braces":"3.0.1","@types/picomatch":"^2.3.3","@types/vscode":"1.65.0","@vscode/vsce":"2.21.1","braces":"3.0.3","color-name":"1.1.4","concurrently":"7.0.0","esbuild":"^0.25.0","minimist":"^1.2.8","move-file-cli":"3.0.0","normalize-path":"3.0.0","picomatch":"^4.0.1","rimraf":"3.0.2","typescript":"5.3.3","vscode-languageclient":"8.0.2"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/bradlc.vscode-tailwindcss-0.14.12","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Tailwind Labs","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"4db62a7c-7d70-419c-96d2-6c3a4dc77ea5","publisherId":"84722833-669b-4c7d-920e-b60e43fae19a","publisherDisplayName":"Tailwind Labs","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":6808039},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"esbenp.prettier-vscode","uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90"},"manifest":{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"Code formatter using prettier","version":"11.0.0","publisher":"esbenp","author":"Prettier <@prettiercode>","galleryBanner":{"color":"#ffe04b","theme":"light"},"sponsor":{"url":"https://opencollective.com/prettier"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.80.0"},"keywords":["multi-root ready","prettier","formatter","javascript","handlebars","js","jsx","flow","typescript","ts","json","css","less","scss","styled-components","styled-jsx","markdown","md","commonmark","mdx","php","pug","ruby","swift","html","vue","ember","glimmer","angular","graphql","yaml","yml"],"categories":["Formatters"],"activationEvents":["onStartupFinished"],"icon":"icon.png","main":"./dist/extension","browser":"./dist/web-extension","scripts":{"clean":"node ./scripts/clean.js","lint":"eslint -c .eslintrc.js --ext .ts .","pretest":"yarn test-compile && cd test-fixtures/plugins && yarn install && cd ../plugins-pnpm && pnpm i && cd ../outdated && yarn install && cd ../module && yarn install && cd ../specific-version && yarn install && cd ../explicit-dep && yarn install && cd implicit-dep && yarn install && cd ../../v3 && yarn install && cd ../plugin-tailwindcss && npm i && cd ../v3-plugins && npm i && cd ../v3-plugin-override && yarn install","prettier":"prettier --write '**/*.{ts,json,md,hbs,yml,js}'","test-compile":"yarn clean && tsc -p ./ && yarn webpack && cp -r ./src/worker ./out","test":"node ./out/test/runTests.js","version":"node ./scripts/version.js && git add CHANGELOG.md","vscode:prepublish":"webpack --mode production","watch":"tsc --watch -p ./","webpack-dev":"webpack --mode development --watch","webpack":"webpack --mode development","chrome":"yarn webpack && vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .","prepare":"husky"},"lint-staged":{"**/*.{ts,json,md,yml,hbs,js}":["prettier --write"],"src/**/*.ts":["eslint -c .eslintrc.js --ext .ts ."]},"devDependencies":{"@types/fs-extra":"^11.0.4","@types/glob":"^7.2.0","@types/mocha":"^10.0.7","@types/node":"20.11.30","@types/prettier":"^2.7.2","@types/resolve":"^1.20.3","@types/semver":"^7.5.8","@types/sinon":"^17.0.3","@types/tmp":"^0.2.6","@types/vscode":"^1.80.0","@typescript-eslint/eslint-plugin":"^5.45.0","@typescript-eslint/parser":"^5.45.0","@vscode/test-electron":"^2.4.1","@vscode/test-web":"^0.0.56","copy-webpack-plugin":"^12.0.2","eslint":"^8.31.0","eslint-config-prettier":"^9.1.0","fs-extra":"^11.2.0","glob":"^7.2.0","husky":"^9.1.4","lint-staged":"^15.2.9","mocha":"^10.7.3","path-browserify":"^1.0.1","process":"^0.11.10","sinon":"^17.0.1","tmp":"^0.2.3","ts-loader":"^9.5.1","typescript":"^4.6.3","util":"^0.12.4","vsce":"^2.15.0","vscode-nls-dev":"^4.0.4","webpack":"^5.93.0","webpack-cli":"^5.0.1"},"dependencies":{"find-up":"5.0.0","prettier":"^2.8.8","resolve":"^1.22.8","semver":"^7.6.3","vscode-nls":"^5.2.0"},"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited","description":"Only the built-in version of Prettier will be used when running in untrusted mode.","restrictedConfigurations":["prettier.documentSelectors","prettier.resolveGlobalModules","prettier.ignorePath","prettier.prettierPath","prettier.configPath","prettier.useEditorConfig","prettier.resolveGlobalModules","prettier.withNodeModules"]}},"contributes":{"configuration":{"type":"object","title":"Prettier","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"deprecationMessage":"This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.","markdownDescription":"A list of languages IDs to disable this extension on.","scope":"window"},"prettier.documentSelectors":{"type":"array","items":{"type":"string"},"markdownDescription":"A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter.","scope":"window"},"prettier.enable":{"type":"boolean","default":true,"markdownDescription":"Controls whether Prettier is enabled or not. Reload required.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"markdownDescription":"Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._","scope":"resource"},"prettier.resolveGlobalModules":{"type":"boolean","default":false,"markdownDescription":"When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._","scope":"resource"},"prettier.withNodeModules":{"type":"boolean","default":false,"markdownDescription":"This extension will process files in `node_modules`.","scope":"resource"},"prettier.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","deprecationMessage":"Package manager is now automatically detected by VS Code. This setting is no longer used.","markdownDescription":"The package manager you use to install node modules."},"prettier.useEditorConfig":{"type":"boolean","default":true,"markdownDescription":"Whether or not to take `.editorconfig` into account when parsing configuration. See the [`prettier.resolveConfig`](https://prettier.io/docs/en/api.html) docs for details.","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","markdownDescription":"Path to a `.prettierignore` file.","scope":"resource"},"prettier.prettierPath":{"type":"string","markdownDescription":"Path to the `prettier` module, eg: `./node_modules/prettier`.","scope":"resource"},"prettier.configPath":{"type":"string","markdownDescription":"Path to the prettier configuration file.","scope":"resource"},"prettier.enableDebugLogs":{"type":"boolean","default":false,"markdownDescription":"Enable debug logs for troubleshooting.","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"markdownDescription":"Fit code within this line limit.","scope":"language-overridable"},"prettier.tabWidth":{"type":"integer","default":2,"markdownDescription":"Number of spaces it should use per tab.","scope":"language-overridable"},"prettier.singleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single instead of double quotes.","scope":"language-overridable"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"es5","markdownDescription":"Controls the printing of trailing commas wherever possible. \nValid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)","scope":"language-overridable"},"prettier.bracketSpacing":{"type":"boolean","default":true,"markdownDescription":"Controls the printing of spaces inside object literals.","scope":"language-overridable"},"prettier.singleAttributePerLine":{"type":"boolean","default":false,"markdownDescription":"Enforces single attribute per line in HTML, JSX, Vue and Angular.","scope":"language-overridable"},"prettier.bracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line HTML (HTML, JSX, Vue, Angular) element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","scope":"language-overridable"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"markdownDescription":"Puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).","deprecationMessage":"This option has been deprecated in v2.4.0, use `bracketSameLine` instead.","scope":"language-overridable"},"prettier.semi":{"type":"boolean","default":true,"markdownDescription":"Whether to add a semicolon at the end of every line.","scope":"language-overridable"},"prettier.requirePragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.","scope":"language-overridable"},"prettier.insertPragma":{"type":"boolean","default":false,"markdownDescription":"Prettier can insert a special `@format` marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the `@format` marker.","scope":"language-overridable"},"prettier.useTabs":{"type":"boolean","default":false,"markdownDescription":"Indent lines with tabs.","scope":"language-overridable"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","markdownDescription":"(Markdown) wrap prose over multiple lines.","scope":"language-overridable"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"always","markdownDescription":"Include parentheses around a sole arrow function parameter.","scope":"language-overridable"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"markdownDescription":"Use single quotes instead of double quotes in JSX.","scope":"language-overridable"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","markdownDescription":"Specify the global [whitespace sensitivity](https://prettier.io/blog/2018/11/07/1.15.0.html#whitespace-sensitive-formatting) for HTML files.\nValid options:\n- `css` - Respect the default value of CSS `display` property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.","scope":"language-overridable"},"prettier.vueIndentScriptAndStyle":{"type":"boolean","default":false,"markdownDescription":"Whether or not to indent the code inside `<script>` and `<style>` tags in Vue SFC files.","scope":"language-overridable"},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"lf","markdownDescription":"Specify the end of line used by prettier.","scope":"language-overridable"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","markdownDescription":"Change when properties in objects are quoted.\nValid options:\n- `\"as-needed\"` - Only add quotes around object properties where required.\n- `\"consistent\"` - If at least one property in an object requires quotes, quote all properties.\n- `\"preserve\"` - Respect the input use of quotes in object properties.","scope":"language-overridable"},"prettier.embeddedLanguageFormatting":{"type":"string","enum":["auto","off"],"default":"auto","markdownDescription":"Control whether Prettier formats quoted code embedded in the file.","scope":"language-overridable"},"prettier.experimentalTernaries":{"type":"boolean","default":false,"markdownDescription":"Try prettier's [new ternary formatting](https://github.com/prettier/prettier/pull/13183) before it becomes the default behavior.","scope":"language-overridable"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"https://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]},{"id":"graphql","extensions":[".graphql"]},{"id":"vue","extensions":[".vue"]},{"id":"handlebars","extensions":[".hbs",".handlebars"]}],"commands":[{"command":"prettier.createConfigFile","title":"Prettier: Create Configuration File"},{"command":"prettier.forceFormatDocument","title":"Format Document (Forced)","when":"editorFocus"}]}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/esbenp.prettier-vscode-11.0.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Prettier","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","publisherId":"d16f4e39-2ffb-44e3-9c0d-79d873570e3a","publisherDisplayName":"Prettier","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":10015788},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"astro-build.astro-vscode","uuid":"1fbbc8b0-7432-4b7e-8774-3336151da2f3"},"manifest":{"name":"astro-vscode","displayName":"Astro","description":"Language support for Astro","categories":["Programming Languages","Formatters","Linters"],"qna":false,"keywords":["astro","node","typescript","javascript","react","vue","svelte","Static site generator"],"icon":"assets/icon.png","type":"commonjs","galleryBanner":{"color":"#17191E","theme":"dark"},"version":"2.15.4","author":"withastro","license":"MIT","publisher":"astro-build","engines":{"vscode":"^1.82.0"},"activationEvents":["onLanguage:astro","workspaceContains:astro.config.*"],"main":"./dist/node/client.js","repository":{"type":"git","url":"https://github.com/withastro/language-tools.git","directory":"packages/vscode"},"contributes":{"snippets":[{"scope":"astro","path":"./languages/astro.code-snippets"}],"typescriptServerPlugins":[{"name":"astro-ts-plugin-bundle","enableForWorkspaceTypeScriptVersions":true}],"commands":[{"command":"astro.reloadProjects","title":"Astro: Reload Projects"},{"command":"astro.findFileReferences","title":"Astro: Find File References"},{"command":"astro.selectTypescriptVersion","title":"Astro: Select Typescript Version..."},{"command":"astro.openTsConfig","title":"Astro: Open TypeScript config"}],"menus":{"commandPalette":[{"command":"astro.reloadProjects","when":"editorLangId == astro"},{"command":"astro.findFileReferences","when":"editorLangId == astro"},{"command":"astro.selectTypescriptVersion","when":"editorLangId == astro"},{"command":"astro.openTsConfig","when":"editorLangId == astro"}],"editor/context":[{"command":"astro.findFileReferences","when":"editorLangId == astro","group":"4_search"}],"editor/title/context":[{"command":"astro.findFileReferences","when":"resourceLangId == astro && resourceScheme == file"}],"explorer/context":[{"command":"astro.findFileReferences","when":"resourceLangId == astro","group":"4_search"}]},"breakpoints":[{"language":"astro"}],"configuration":{"type":"object","title":"Astro configuration","properties":{"astro.language-server.ls-path":{"type":"string","title":"Language Server: Path","description":"Path to the language server executable. You won't need this in most cases, set this only when needing a specific version of the language server"},"astro.language-server.runtime":{"scope":"application","type":"string","title":"Language Server: Runtime","description":"Path to the node executable used to execute the language server. You won't need this in most cases"},"astro.trace.server":{"scope":"window","type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the language server."},"astro.content-intellisense":{"scope":"resource","type":"boolean","default":false,"description":"Enable experimental support for content collection intellisense inside Markdown, MDX and Markdoc. Note that this require also enabling the feature in your Astro config (experimental.contentCollectionIntellisense) (Astro 4.14+)"},"astro.updateImportsOnFileMove.enabled":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether the extension updates imports when a file is moved to a new location. In most cases, you'll want to keep this disabled as TypeScript and the Astro TypeScript plugin already handles this for you. Having multiple tools updating imports at the same time can lead to corrupted files."}}},"languages":[{"id":"astro","extensions":[".astro"],"aliases":["Astro"],"configuration":"./languages/astro-language-configuration.json","icon":{"light":"./assets/lang-icon-light.svg","dark":"./assets/lang-icon-dark.svg"}}],"grammars":[{"language":"astro","scopeName":"source.astro","path":"./syntaxes/astro.tmLanguage.json","embeddedLanguages":{"text.html":"html","text.html.markdown":"markdown","source.css":"css","source.css.less":"less","source.css.scss":"scss","source.sass":"sass","source.stylus":"stylus","source.js":"javascript","source.ts":"typescript","source.json":"json","source.tsx":"typescriptreact","meta.tag.tsx":"jsx-tags","meta.tag.without-attributes.tsx":"jsx-tags","meta.tag.attributes.tsx":"typescriptreact","meta.embedded.expression.tsx":"typescriptreact"},"unbalancedBracketScopes":["keyword.operator.relational","storage.type.function.arrow","keyword.operator.bitwise.shift","meta.brace.angle","punctuation.definition.tag","keyword.operator.assignment.compound.bitwise.ts"]},{"scopeName":"text.html.markdown.astro","path":"./syntaxes/markdown.astro.tmLanguage.json","injectTo":["text.html.markdown","source.astro"],"embeddedLanguages":{"meta.embedded.block.astro":"astro","meta.embedded.block.astro.frontmatter":"typescriptreact"}},{"scopeName":"source.mdx.astro","path":"./syntaxes/mdx.astro.tmLanguage.json","injectTo":["source.mdx"],"embeddedLanguages":{"mdx.embedded.astro":"astro","mdx.embedded.astro.frontmatter":"typescriptreact"}}]},"scripts":{"prebuild":"cd ../ts-plugin && pnpm build","build":"tsc && pnpm prebuild && node scripts/build.mjs -- --minify","dev":"node scripts/build.mjs -- --watch","build:grammar":"node scripts/build-grammar.mjs","dev:grammar":"node scripts/build-grammar.mjs -- --watch","test":"pnpm test:vscode && pnpm test:grammar","test:vscode":"node ./test/runTest.js","test:grammar":"pnpm build:grammar && node ./test/grammar/test.mjs","update-grammar-snapshots":"node ./test/grammar/test.mjs --updateSnapshot"},"devDependencies":{"@astrojs/language-server":"^2.15.4","@astrojs/ts-plugin":"^1.10.4","@types/glob":"^8.1.0","@types/mocha":"^10.0.1","@types/node":"^18.17.8","@types/vscode":"^1.82.0","@volar/language-server":"~2.4.7","@volar/vscode":"~2.4.7","@vscode/test-electron":"^2.3.2","@vscode/vsce":"2.30.0","esbuild":"^0.17.19","esbuild-plugin-copy":"^2.1.1","glob":"^8.0.3","js-yaml":"^4.1.0","kleur":"^4.1.5","mocha":"^10.2.0","vscode-languageclient":"^9.0.1","vscode-tmgrammar-test":"^0.1.2"},"dependencies":{"@astrojs/compiler":"^2.10.3","prettier":"^3.2.5","prettier-plugin-astro":"^0.14.1"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/astro-build.astro-vscode-2.15.4-linux-x64","scheme":"file"},"isBuiltin":false,"targetPlatform":"linux-x64","publisherDisplayName":"Astro","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"1fbbc8b0-7432-4b7e-8774-3336151da2f3","publisherId":"6c30d82f-e0d4-488a-a4a3-860c0c90001f","publisherDisplayName":"Astro","targetPlatform":"linux-x64","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":16635603},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ritwickdey.liveserver","uuid":"46cc5bbd-b098-4568-9b87-f91e07d26f2d"},"manifest":{"name":"LiveServer","displayName":"Live Server","description":"Launch a development local Server with live reload feature for static & dynamic pages","version":"5.7.9","publisher":"ritwickdey","author":{"name":"Ritwick Dey","email":"ritwickdey@outlook.com","url":"http://twitter.com/Dey_Ritwick"},"engines":{"vscode":"^1.51.0"},"categories":["Other"],"keywords":["html preview","live preview","live reload","svg preview","open in browser","multi-root ready"],"preview":false,"galleryBanner":{"color":"#41205f","theme":"dark"},"activationEvents":["onStartupFinished"],"main":"./out/src/extension.js","contributes":{"commands":[{"command":"extension.liveServer.goOffline","title":"Stop Live Server","category":"Live Server"},{"command":"extension.liveServer.goOnline","title":"Open with Live Server","category":"Live Server"},{"command":"extension.liveServer.changeWorkspace","title":"Change Live Server workspace","category":"Live Server"}],"keybindings":[{"command":"extension.liveServer.goOffline","key":"alt+L alt+C","when":"editorTextFocus","mac":"cmd+L cmd+C"},{"command":"extension.liveServer.goOnline","key":"alt+L alt+O","when":"editorTextFocus","mac":"cmd+L cmd+O"}],"menus":{"editor/context":[{"command":"extension.liveServer.goOnline","group":"myGrp@liveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOffline","group":"myGrp@liveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOnline","group":"myGrp@liveServer","when":"resourceLangId == xml"}],"explorer/context":[{"command":"extension.liveServer.goOnline","group":"navigation@-LiveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOnline","group":"navigation@-LiveServer","when":"resourceLangId == xml"}]},"configuration":{"title":"Live Server Config","properties":{"liveServer.settings.port":{"type":["number"],"default":5500,"minimum":0,"maximum":65535,"description":"Set Custom Port Number of Live Server. Set 0 if you want random port."},"liveServer.settings.root":{"type":["string"],"default":"/","pattern":"/|/[^\\/]","description":"Set Custom root of Live Server. \nTo change root the the server to sub folder of workspace, use '/' and relative path from workspace. \nExample: /subfolder1/subfolder2"},"liveServer.settings.CustomBrowser":{"type":["string","null"],"default":null,"enum":["chrome","chrome:PrivateMode","firefox","firefox:PrivateMode","microsoft-edge","blisk",null],"description":"Specify custom browser settings for Live Server. \nBy Default it will open your default favorite browser."},"liveServer.settings.ChromeDebuggingAttachment":{"type":["boolean"],"default":false,"description":"Enable Chrome Debugging Attachment to Live Server at Debuging Port 9222.\n NOTE: You have to install 'Debugger for Chrome' \nIf the value is true, Select 'Attach to Chrome' from Debug Window to start debugging. \n\n CAUTION: If it is true, 'Launch Chrome against localhost' may not work."},"liveServer.settings.AdvanceCustomBrowserCmdLine":{"type":["string","null"],"default":null,"description":"Note: If it is not Null, It will override CustomBrowser and ChromeDebuggingAttachment settings.\n\n Examples : \nchrome --incognito --headless --remote-debugging-port=9222 \n C:\\\\Program Files\\\\Firefox Developer Edition\\\\firefox.exe --private-window"},"liveServer.settings.showOnStatusbar":{"type":"boolean","default":true,"description":"Change this to false if you don't want the button to show in the statusbar"},"liveServer.settings.NoBrowser":{"type":"boolean","default":false,"description":"If it is true live server will start without browser opened."},"liveServer.settings.ignoreFiles":{"type":"array","default":[".vscode/**","**/*.scss","**/*.sass","**/*.ts"],"description":"To ignore specific file changes"},"liveServer.settings.mount":{"type":"array","items":{"type":"array","minItems":2,"maxItems":2,"items":{"type":"string"}},"default":[],"description":"Mount a directory to a route. Such as [['/components', './node_modules']]"},"liveServer.settings.donotShowInfoMsg":{"type":"boolean","default":false,"description":"To disable information pop up messages."},"liveServer.settings.donotVerifyTags":{"type":"boolean","default":false,"description":"To turn off prompt warning message if body or head or other supporting tag is missing in your HTML."},"liveServer.settings.host":{"type":"string","default":"127.0.0.1","description":"To switch between localhost or 127.0.0.1 or anything else. Default is 127.0.0.1"},"liveServer.settings.useLocalIp":{"type":"boolean","default":false,"description":"Use local IP as host"},"liveServer.settings.proxy":{"type":"object","default":{"enable":false,"baseUri":"/","proxyUri":"http://127.0.0.1:80"},"properties":{"enable":{"type":"boolean","default":false,"description":"Make it true to enable the feature."},"baseUri":{"type":"string","default":"/","pattern":""},"proxyUri":{"type":"string","default":"http://127.0.0.1:80","pattern":"(^http[s]?://)(.[^(\\|\\s)]+)$"}},"required":["enable","baseUri","proxyUri"],"additionalProperties":false,"description":"To Setup Proxy"},"liveServer.settings.useWebExt":{"type":"boolean","default":false,"description":"You have to install a browser extension. That will be works for your dynamic pages (like PHP)."},"liveServer.settings.wait":{"type":"number","default":100,"description":"Delay before live reloading. Value in milliseconds. Default is 100"},"liveServer.settings.fullReload":{"type":"boolean","default":false,"description":"By Default Live Server inject CSS changes without full reloading of browser. You can change this behavior by making this setting as `true`"},"liveServer.settings.https":{"type":"object","default":{"enable":false,"cert":"","key":"","passphrase":""},"properties":{"enable":{"type":"boolean","default":false,"description":"Make it true to enable it."},"cert":{"type":"string","default":"","description":"Add full path certificate."},"key":{"type":"string","default":"","description":"Add full path key"},"passphrase":{"type":"string","default":"","description":"Add Pass Phrase."}},"required":["enable","cert","key","passphrase"],"additionalProperties":false,"description":"Setup https configuration"},"liveServer.settings.file":{"type":"string","default":"","description":"When set, serve this file (server root relative) for every 404 (useful for single-page applications)"},"liveServer.settings.multiRootWorkspaceName":{"type":"string","default":null,"description":"This the entry point of server when you're in multiroot workspace"}}}},"license":"MIT","icon":"images/icon.png","bugs":{"url":"https://github.com/ritwickdey/vscode-live-server/issues","email":"ritwickdey@outlook.com"},"repository":{"type":"git","url":"https://github.com/ritwickdey/vscode-live-server.git"},"homepage":"https://ritwickdey.github.io/vscode-live-server/","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -p ./","test":"run-s test:*","test:lint":"tslint --project .","test:unit":"node ./out/test/runTest.js","test:e2e":"wdio run ./test/wdio.conf.ts","precommit":"npm run test:lint","prepush":"npm run test:lint","watch":"tsc -watch -p ./"},"husky":{"hooks":{"pre-commit":"npm run precommit","pre-push":"npm run prepush"}},"devDependencies":{"@types/glob":"^7.1.1","@types/node":"^17.0.6","@types/vscode":"^1.51.0","@vscode/test-electron":"^2.0.1","@wdio/cli":"^7.19.3","@wdio/local-runner":"^7.19.3","@wdio/mocha-framework":"^7.19.3","@wdio/spec-reporter":"^7.19.1","glob":"^7.2.0","husky":"^1.2.1","mocha":"^9.2.2","npm-run-all":"^4.1.5","semver":"^7.3.6","ts-node":"^10.7.0","tslint":"^6.1.3","typescript":"^4.5.4","vsce":"^2.7.0","wdio-vscode-service":"^2.0.1","es5-ext":"0.10.53"},"dependencies":{"http-shutdown":"^1.2.0","ips":"^2.1.3","live-server":"file:lib\\live-server","opn":"^6.0.0","vsls":"^0.3.967"},"overrides":{"es5-ext":"0.10.53"},"announcement":{"onVersion":"5.7.9","message":"[NEW] LiveServer@5.7.9: Activation load time improved"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/ritwickdey.liveserver-5.7.9","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Ritwick Dey","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"46cc5bbd-b098-4568-9b87-f91e07d26f2d","publisherId":"17fd9a78-e430-4a78-add2-ade4a8830352","publisherDisplayName":"Ritwick Dey","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":15661980},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"eamodio.gitlens","uuid":"4de763bd-505d-4978-9575-2b7696ecf94e"},"manifest":{"name":"gitlens","displayName":"GitLens — Git supercharged","description":"Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more","version":"16.3.3","engines":{"node":">= 22.12.0","pnpm":">= 10.0.0","vscode":"^1.82.0"},"license":"SEE LICENSE IN LICENSE","publisher":"eamodio","author":{"name":"Eric Amodio","email":"eamodio@gmail.com"},"homepage":"https://gitkraken.com/gitlens","bugs":{"url":"https://github.com/gitkraken/vscode-gitlens/issues"},"repository":{"type":"git","url":"https://github.com/gitkraken/vscode-gitlens.git"},"main":"./dist/gitlens.js","browser":"./dist/browser/gitlens.js","icon":"images/gitlens-icon.png","preview":false,"badges":[{"url":"https://img.shields.io/badge/gitkraken--community-gitlens-blue.svg?logo=slack&labelColor=555555","href":"https://slack.gitkraken.com/","description":"Join us in the #gitlens channel"}],"categories":["Other","SCM Providers"],"galleryBanner":{"color":"#8647ae","theme":"dark"},"keywords":["gitlens","git","blame","log","annotation","multi-root ready"],"activationEvents":["onFileSystem:gitlens","onUri","onWebviewPanel:gitlens.graph","onWebviewPanel:gitlens.patchDetails","onWebviewPanel:gitlens.settings","onWebviewPanel:gitlens.timeline","onStartupFinished"],"capabilities":{"virtualWorkspaces":true,"untrustedWorkspaces":{"supported":"limited"}},"contributes":{"configuration":[{"id":"current-line-blame","title":"Inline Blame","order":10,"properties":{"gitlens.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an inline blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window","scope":"window","order":10},"gitlens.currentLine.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the inline blame annotation. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.currentLine.format":{"type":"string","default":"${author, }${agoOrDate}${' via  'pullRequest}${ • message|50?}","markdownDescription":"Specifies the format of the inline blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting","scope":"window","order":30},"gitlens.currentLine.uncommittedChangesFormat":{"type":"string","default":null,"markdownDescription":"Specifies the uncommitted changes format of the inline blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting.\n\n**NOTE**: Setting this to an empty string will disable inline blame annotations for uncommitted changes.","scope":"window","order":31},"gitlens.currentLine.fontFamily":{"type":"string","default":"","markdownDescription":"Specifies the font family of the inline blame annotation","scope":"window","order":33},"gitlens.currentLine.fontSize":{"type":"number","default":0,"markdownDescription":"Specifies the font size of the inline blame annotation","scope":"window","order":34},"gitlens.currentLine.fontStyle":{"type":"string","default":"normal","markdownDescription":"Specifies the font style of the inline blame annotation","scope":"window","order":35},"gitlens.currentLine.fontWeight":{"type":"string","default":"normal","markdownDescription":"Specifies the font weight of the inline blame annotation","scope":"window","order":36},"gitlens.currentLine.scrollable":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the inline blame annotation can be scrolled into view when it is outside the viewport. **NOTE**: Setting this to `false` will inhibit the hovers from showing over the annotation; Set `#gitlens.hovers.currentLine.over#` to `line` to enable the hovers to show anywhere over the line.","scope":"window","order":40},"gitlens.currentLine.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) for the inline blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":50}}},{"id":"git-code-lens","title":"Git CodeLens","order":11,"properties":{"gitlens.codeLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any Git CodeLens, by default. Use the `Toggle Git CodeLens` command (`gitlens.toggleCodeLens`) to toggle the Git CodeLens on and off for the current window","scope":"window","order":10},"gitlens.codeLens.authors.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an _authors_ CodeLens, showing number of authors of the file or code block and the most prominent author (if there is more than one)","scope":"window","order":20},"gitlens.codeLens.authors.command":{"type":["boolean","string"],"enum":[false,"gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.diffWithPrevious","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Disables click interaction","Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Compares the current committed file with the previous commit","Reveals the commit in the Side Bar","Searches for commits within the range","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"default":"gitlens.toggleFileBlame","markdownDescription":"Specifies the command to be executed when an _authors_ CodeLens is clicked","scope":"window","order":21},"gitlens.codeLens.recentChange.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _recent change_ CodeLens, showing the author and date of the most recent commit for the file or code block","scope":"window","order":30},"gitlens.codeLens.recentChange.command":{"type":["boolean","string"],"enum":[false,"gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.diffWithPrevious","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Disables click interaction","Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Compares the current committed file with the previous commit","Reveals the commit in the Side Bar","Shows the Inspect","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"default":"gitlens.showQuickCommitFileDetails","markdownDescription":"Specifies the command to be executed when a _recent change_ CodeLens is clicked","scope":"window","order":31},"gitlens.codeLens.scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks"],"enumDescriptions":["Adds CodeLens at the top of the document","Adds CodeLens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds CodeLens at the start of block-like symbols (functions, methods, etc) lines"]},"minItems":0,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where Git CodeLens will be shown in the document","scope":"language-overridable","order":40},"gitlens.codeLens.symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Specifies a set of document symbols where Git CodeLens will or will not be shown in the document. Prefix with `!` to avoid providing a Git CodeLens for the symbol. Must be a member of `SymbolKind`","scope":"language-overridable","order":50},"gitlens.codeLens.includeSingleLineSymbols":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to provide any Git CodeLens on symbols that span only a single line","scope":"window","order":60},"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of both the _recent change_ and _authors_ CodeLens when there are unsaved changes","scope":"window","order":70},"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of the _recent change_ CodeLens when there are unsaved changes","scope":"window","order":71},"gitlens.strings.codeLens.unsavedChanges.authorsOnly":{"type":"string","default":"$(ellipsis)","markdownDescription":"Specifies the string to be shown in place of the _authors_ CodeLens when there are unsaved changes","scope":"window","order":72},"gitlens.codeLens.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates in the Git CodeLens. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":73},"gitlens.codeLens.scopesByLanguage":{"deprecationMessage":"Deprecated. Use per-language `gitlens.codeLens.scopes` and `gitlens.codeLens.symbolScopes` settings instead","markdownDeprecationMessage":"Deprecated. Use the per-language `#gitlens.codeLens.scopes#` and `#gitlens.codeLens.symbolScopes#` settings instead"}}},{"id":"status-bar-blame","title":"Status Bar Blame","order":12,"properties":{"gitlens.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide blame information in the status bar","scope":"window","order":10},"gitlens.statusBar.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the status bar. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.statusBar.format":{"type":"string","default":"${author}, ${agoOrDate}${' via  'pullRequest}","markdownDescription":"Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.statusBar.dateFormat#` setting","scope":"window","order":30},"gitlens.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the blame alignment in the status bar","scope":"window","order":40},"gitlens.statusBar.command":{"type":"string","default":"gitlens.showQuickCommitDetails","enum":["gitlens.toggleFileBlame","gitlens.toggleFileHeatmap","gitlens.toggleFileChanges","gitlens.toggleFileChangesOnly","gitlens.toggleCodeLens","gitlens.diffWithPrevious","gitlens.diffWithWorking","gitlens.revealCommitInView","gitlens.showCommitsInView","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory","gitlens.openCommitOnRemote","gitlens.copyRemoteCommitUrl","gitlens.openFileOnRemote","gitlens.copyRemoteFileUrl"],"enumDescriptions":["Toggles file blame","Toggles file heatmap","Toggles file changes since before the commit","Toggles file changes from the commit","Toggles Git CodeLens","Compares the current line commit with the previous","Compares the current line commit with the working tree","Reveals the commit in the Side Bar","Shows the Inspect","Shows an Inspect quick pick menu","Shows a commit file details quick pick menu","Shows a file history quick pick menu","Shows a branch history quick pick menu","Opens the commit on the remote service (when available)","Copies the remote commit URL to the clipboard (when available)","Opens the file revision on the remote service (when available)","Copies the remote file URL to the clipboard (when available)"],"markdownDescription":"Specifies the command to be executed when the blame status bar item is clicked","scope":"window","order":50},"gitlens.statusBar.tooltipFormat":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_${' via  'pullRequest} ${message}${\n\n---\n\nfootnotes}\n\n${commands}","editPresentation":"multilineText","markdownDescription":"Specifies the format (in markdown) of hover shown over the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":60},"gitlens.statusBar.reduceFlicker":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"","scope":"window","order":70},"gitlens.statusBar.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":80}}},{"id":"hovers","title":"Hovers","order":13,"properties":{"gitlens.hovers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers","scope":"window","order":10},"gitlens.hovers.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in hovers","scope":"window","order":20},"gitlens.hovers.avatarSize":{"type":"number","default":32,"markdownDescription":"Specifies the size of the avatar images in hovers","scope":"window","order":21},"gitlens.hovers.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the hovers. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.hovers.autolinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically link external resources in commit messages","scope":"window","order":31},"gitlens.hovers.autolinks.enhanced":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.hovers.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers for the current line","scope":"window","order":40},"gitlens.hovers.currentLine.over":{"type":"string","default":"annotation","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers for the current line","scope":"window","order":41},"gitlens.hovers.currentLine.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for the current line","scope":"window","order":42},"gitlens.hovers.currentLine.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for the current line","scope":"window","order":43},"gitlens.hovers.annotations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers when showing blame annotations","scope":"window","order":50},"gitlens.hovers.annotations.over":{"type":"string","default":"line","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers when showing blame annotations","scope":"window","order":51},"gitlens.hovers.annotations.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations","scope":"window","order":52},"gitlens.hovers.annotations.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations","scope":"window","order":53},"gitlens.hovers.detailsMarkdownFormat":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_${' via  'pullRequest} ${message}${\n\n---\n\nfootnotes}\n\n${commands}","editPresentation":"multilineText","markdownDescription":"Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":60},"gitlens.hovers.changesDiff":{"type":"string","default":"line","enum":["line","hunk"],"enumDescriptions":["Shows only the changes to the line","Shows the set of related changes"],"markdownDescription":"Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover","scope":"window","order":70}}},{"id":"file-annotations","title":"File Annotations","order":14,"properties":{"gitlens.fileAnnotations.dismissOnEscape":{"type":"boolean","default":true,"markdownDescription":"Specifies whether pressing the `ESC` key dismisses the active file annotations","scope":"window","order":10},"gitlens.fileAnnotations.command":{"type":["string","null"],"default":null,"enum":[null,"blame","heatmap","changes"],"enumDescriptions":["Shows a menu to choose which file annotations to toggle","Toggles file blame annotations","Toggles file heatmap annotations","Toggles file changes annotations"],"markdownDescription":"Specifies whether the file annotations button in the editor title shows a menu or immediately toggles the specified file annotations","scope":"window","order":20},"gitlens.fileAnnotations.preserveWhileEditing":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file annotations will be preserved while editing. Use `#gitlens.advanced.blame.delayAfterEdit#` to control how long to wait before the annotation will update while the file is still dirty","scope":"window","order":30},"gitlens.advanced.blame.delayAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit but before it is saved. Use 0 to specify an infinite wait. Only applies if the file is under the `#gitlens.advanced.sizeThresholdAfterEdit#`","scope":"window","order":90},"gitlens.advanced.blame.sizeThresholdAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum","scope":"window","order":91}}},{"id":"file-blame","title":"File Blame","order":15,"properties":{"gitlens.blame.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file blame annotations will be toggled","scope":"window","order":10},"gitlens.blame.format":{"type":"string","default":"${message|50?} ${agoOrDate|14-}","markdownDescription":"Specifies the format of the file blame annotations. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.blame.dateFormat#` setting","scope":"window","order":20},"gitlens.blame.fontFamily":{"type":"string","default":"","markdownDescription":"Specifies the font family of the file blame annotations","scope":"window","order":22},"gitlens.blame.fontSize":{"type":"number","default":0,"markdownDescription":"Specifies the font size of the file blame annotations","scope":"window","order":23},"gitlens.blame.fontStyle":{"type":"string","default":"normal","markdownDescription":"Specifies the font style of the file blame annotations","scope":"window","order":24},"gitlens.blame.fontWeight":{"type":"string","default":"normal","markdownDescription":"Specifies the font weight of the file blame annotations","scope":"window","order":25},"gitlens.blame.heatmap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a heatmap indicator in the file blame annotations","scope":"window","order":30},"gitlens.blame.heatmap.location":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Adds a heatmap indicator on the left edge of the file blame annotations","Adds a heatmap indicator on the right edge of the file blame annotations"],"markdownDescription":"Specifies where the heatmap indicators will be shown in the file blame annotations","scope":"window","order":31},"gitlens.blame.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in the file blame annotations","scope":"window","order":40},"gitlens.blame.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (deduplicate) matching adjacent file blame annotations","scope":"window","order":50},"gitlens.blame.highlight.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight lines associated with the current line","scope":"window","order":60},"gitlens.blame.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the associated line highlights will be shown","scope":"window","order":61},"gitlens.blame.separateLines":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file blame annotations will be separated by a small gap","scope":"window","order":70},"gitlens.blame.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how to format absolute dates (e.g. using the `${date}` token) in file blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":80}}},{"id":"file-changes","title":"File Changes","order":16,"properties":{"gitlens.changes.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file changes annotations will be toggled","scope":"window","order":10},"gitlens.changes.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the indicators of the file changes annotations will be shown","scope":"window","order":20}}},{"id":"file-heatmap","title":"File Heatmap","order":17,"properties":{"gitlens.heatmap.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the file heatmap annotations will be toggled","scope":"window","order":10},"gitlens.heatmap.locations":{"type":"array","default":["gutter","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds an indicator to the gutter","Adds a full-line highlight background color","Adds an indicator to the scroll bar"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the indicators of the file heatmap annotations will be shown","scope":"window","order":20},"gitlens.heatmap.fadeLines":{"type":"boolean","default":true,"markdownDescription":"Specifies the whether to fade out older lines","scope":"window","order":21},"gitlens.heatmap.ageThreshold":{"type":"number","default":90,"markdownDescription":"Specifies the age of the most recent change (in days) after which the file heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)","scope":"window","order":30},"gitlens.heatmap.coldColor":{"type":"string","default":"#0a60f6","markdownDescription":"Specifies the base color of the file heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window","order":40},"gitlens.heatmap.hotColor":{"type":"string","default":"#f66a0a","markdownDescription":"Specifies the base color of the file heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window","order":50}}},{"id":"graph","title":"Commit Graph (ᴘʀᴏ)","order":50,"properties":{"gitlens.graph.layout":{"type":"string","default":"panel","enum":["editor","panel"],"enumDescriptions":["Prefer showing the Commit Graph in the editor area","Prefer showing the Commit Graph in the bottom panel"],"markdownDescription":"Specifies the preferred layout of the _Commit Graph_","scope":"window","order":1},"gitlens.graph.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Commit Graph_ in the editor area","scope":"window","order":2},"gitlens.graph.multiselect":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to allow selecting multiple commits in the _Commit Graph_","scope":"window","order":10},"gitlens.graph.minimap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a minimap of commit activity above the _Commit Graph_","scope":"window","order":100},"gitlens.graph.minimap.dataType":{"type":"string","default":"commits","enum":["commits","lines"],"enumDescriptions":["Shows the number of commits per day in the minimap","Shows the number of lines changed per day in the minimap"],"markdownDescription":"Specifies the data to show on the minimap in the _Commit Graph_","scope":"window","order":101},"gitlens.graph.minimap.additionalTypes":{"type":"array","default":["localBranches","stashes"],"items":{"type":"string","enum":["localBranches","remoteBranches","pullRequests","stashes","tags"],"enumDescriptions":["Marks the location of local branches","Marks the location of remote branches","Marks the location of pull requests","Marks the location of stashes","Marks the location of tags"]},"minItems":0,"maxItems":5,"uniqueItems":true,"markdownDescription":"Specifies additional markers to show on the minimap in the _Commit Graph_","scope":"window","order":102},"gitlens.graph.scrollMarkers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show markers on the scrollbar in the _Commit Graph_","scope":"window","order":200},"gitlens.graph.scrollMarkers.additionalTypes":{"type":"array","default":["localBranches","stashes"],"items":{"type":"string","enum":["localBranches","remoteBranches","pullRequests","stashes","tags"],"enumDescriptions":["Marks the location of local branches","Marks the location of remote branches","Marks the location of pull requests","Marks the location of stashes","Marks the location of tags"]},"minItems":0,"maxItems":5,"uniqueItems":true,"markdownDescription":"Specifies additional markers to show on the scrollbar in the _Commit Graph_","scope":"window","order":201},"gitlens.graph.sidebar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a sidebar on the _Commit Graph_","scope":"window","order":300},"gitlens.graph.branchesVisibility":{"type":"string","enum":["all","smart","current"],"enumDescriptions":["Shows all branches","Shows only relevant branches","Shows only the current branch"],"default":"all","markdownDescription":"Specifies the visibility of branches on the _Commit Graph_","scope":"window","order":400},"gitlens.graph.showDetailsView":{"type":["boolean","string"],"default":"selection","enum":[false,"open","selection"],"enumDescriptions":["Never shows the _Commit Details_ view automatically","Shows the _Commit Details_ view automatically only when opening the _Commit Graph_","Shows the _Commit Details_ view automatically when selection changes in the _Commit Graph_"],"markdownDescription":"Specifies when to show the _Commit Details_ view for the selected row in the _Commit Graph_","scope":"window","order":500},"gitlens.graph.dateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how absolute dates will be formatted in the _Commit Graph_. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":600},"gitlens.graph.dateStyle":{"type":["string","null"],"default":null,"enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed in the _Commit Graph_","scope":"window","order":601},"gitlens.graph.commitOrdering":{"type":"string","default":"date","enum":["date","author-date","topo"],"enumDescriptions":["Shows commits in reverse chronological order of the commit timestamp","Shows commits in reverse chronological order of the author timestamp","Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history"],"markdownDescription":"Specifies the order by which commits will be shown on the _Commit Graph_","scope":"window","order":602},"gitlens.graph.onlyFollowFirstParent":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to only follow the first parent when showing commits on the _Commit Graph_","order":603},"gitlens.graph.dimMergeCommits":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to dim (deemphasize) merge commit rows in the _Commit Graph_","scope":"window","order":700},"gitlens.graph.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a local branch's upstream status in the _Commit Graph_","scope":"window","order":701},"gitlens.graph.showRemoteNames":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show remote names on remote branches in the _Commit Graph_","scope":"window","order":702},"gitlens.graph.issues.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show associated issues on branches in the _Commit Graph_. Requires a connection to a supported issue service (e.g. GitHub)","scope":"window","order":703},"gitlens.graph.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show associated pull requests on remote branches in the _Commit Graph_. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":704},"gitlens.graph.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of author initials and remote icons in the _Commit Graph_","scope":"window","order":704},"gitlens.graph.showGhostRefsOnRowHover":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a ghost branch / tag when hovering over or selecting a row in the _Commit Graph_","scope":"window","order":750},"gitlens.graph.highlightRowsOnRefHover":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight rows associated with the branch / tag when hovering over it in the _Commit Graph_","scope":"window","order":751},"gitlens.graph.defaultItemLimit":{"type":"number","default":500,"markdownDescription":"Specifies the default number of items to show in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":800},"gitlens.graph.pageItemLimit":{"type":"number","default":200,"markdownDescription":"Specifies the number of additional items to fetch when paginating in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":801},"gitlens.graph.searchItemLimit":{"type":"number","default":100,"markdownDescription":"Specifies the number of results to gather when searching in the _Commit Graph_. Use 0 to specify no limit","scope":"window","order":802},"gitlens.graph.scrollRowPadding":{"type":"number","default":0,"markdownDescription":"Specifies the number of rows from the edge at which the graph will scroll when using keyboard or search to change the selected row","scope":"window","order":900},"gitlens.graph.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Commit Graph_ in the status bar","scope":"window","order":1000}}},{"id":"home","title":"Home","order":55,"properties":{"gitlens.home.preview.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable the new home preview","scope":"window","order":10}}},{"id":"launchpad","title":"Launchpad (ᴘʀᴏ)","order":60,"properties":{"gitlens.launchpad.ignoredRepositories":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specifies the repositories to ignore in the _Launchpad_","scope":"window","order":10},"gitlens.launchpad.includedOrganizations":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specifies the organizations to include in the _Launchpad_. If empty, all organizations are included","scope":"window","order":11},"gitlens.launchpad.ignoredOrganizations":{"type":"array","default":[],"items":{"type":"string"},"markdownDescription":"Specifies the organizations to ignore in the _Launchpad_","scope":"window","order":12},"gitlens.launchpad.staleThreshold":{"type":["number","null"],"default":null,"markdownDescription":"Specifies the number of days after which a pull request is considered stale and moved to Other in the _Launchpad_","scope":"window","order":20},"gitlens.launchpad.indicator.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable status bar indicator for _Launchpad_","scope":"window","order":100},"gitlens.launchpad.indicator.icon":{"type":"string","enum":["default","group"],"enumDescriptions":["Shows the Launchpad icon","Shows the icon of the highest priority group"],"default":"default","markdownDescription":"Specifies the style of the  _Launchpad_ status bar indicator icon","scope":"window","order":110},"gitlens.launchpad.indicator.label":{"type":["boolean","string"],"enum":[false,"item","counts"],"enumDescriptions":["Hides the label","Shows the highest priority item which needs your attention","Shows the status counts of items which need your attention"],"default":"item","markdownDescription":"Specifies the display of the  _Launchpad_ status bar indicator label","scope":"window","order":120},"gitlens.launchpad.indicator.groups":{"type":"array","default":["mergeable","blocked","needs-review","follow-up"],"items":{"type":"string","enum":["mergeable","blocked","needs-review","follow-up"],"enumDescriptions":["Shows mergeable pull requests","Shows blocked pull requests","Shows pull requests needing your review","Shows pull requests needing follow-up"]},"minItems":1,"uniqueItems":true,"markdownDescription":"Specifies the groups of pull requests to show on the _Launchpad_ status bar indicator","scope":"window","order":130},"gitlens.launchpad.indicator.useColors":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to use colors on the _Launchpad_ status bar indicator","scope":"window","order":140},"gitlens.launchpad.indicator.polling.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the status bar indicator will fetch and display pull request data for _Launchpad_","scope":"window","order":150},"gitlens.launchpad.indicator.polling.interval":{"type":"number","default":30,"markdownDescription":"Specifies the rate (in minutes) at which the status bar indicator will fetch pull request data for _Launchpad_. Use 0 to disable automatic polling","scope":"window","order":160},"gitlens.launchpad.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Launchpad_ as an editor tab","scope":"window","order":1000},"gitlens.launchpad.experimental.queryLimit":{"type":"number","default":100,"markdownDescription":"(Experimental) Specifies a limit on the number of pull requests to be queried in the _Launchpad_","scope":"window","order":1100}}},{"id":"cloud-patches","title":"Cloud Patches (ᴘʀᴇᴠɪᴇᴡ)","order":70,"properties":{"gitlens.cloudPatches.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable the preview of _Cloud Patches_, which allow you to privately and securely share code with specific teammates and other developers","scope":"window","order":10,"tags":["preview"]},"gitlens.cloudPatches.experimental.layout":{"type":"string","default":"view","enum":["editor","view"],"enumDescriptions":["Prefer showing Cloud Patches in the editor area","Prefer showing Cloud Patches in a view"],"markdownDescription":"(Experimental) Specifies the preferred layout of for _Cloud Patches_","scope":"window","order":20,"tags":["experimental"]}}},{"id":"views","title":"Views","order":100,"properties":{"gitlens.views.scm.grouped.default":{"type":"string","default":"commits","enum":["commits","branches","remotes","stashes","tags","worktrees","contributors","repositories","searchAndCompare","launchpad"],"enumDescriptions":["Commits view","Branches view","Remotes view","Stashes view","Tags view","Worktrees view","Contributors view","Repositories view","Search & Compare view","Launchpad view"],"markdownDescription":"Specifies the default view to show when the _GitLens_ view is opened","scope":"window","order":2},"gitlens.views.scm.grouped.views":{"type":"object","default":{"commits":true,"branches":true,"remotes":true,"stashes":true,"tags":true,"worktrees":true,"contributors":true,"repositories":false,"searchAndCompare":false,"launchpad":false},"properties":{"commits":{"type":"boolean","default":true,"description":"Group the Commits view"},"branches":{"type":"boolean","default":true,"description":"Group the Branches view"},"remotes":{"type":"boolean","default":true,"description":"Group the Remotes view"},"stashes":{"type":"boolean","default":true,"description":"Group the Stashes view"},"tags":{"type":"boolean","default":true,"description":"Group the Tags view"},"worktrees":{"type":"boolean","default":true,"description":"Group the Worktrees view"},"contributors":{"type":"boolean","default":true,"description":"Group the Contributors view"},"repositories":{"type":"boolean","default":false,"description":"Group the Repositories view"},"searchAndCompare":{"type":"boolean","default":true,"description":"Group the Search & Compare view"},"launchpad":{"type":"boolean","default":false,"description":"Group the Launchpad view"}},"additionalProperties":false,"markdownDescription":"Specifies which views will be grouped into the _GitLens_ view on the Source Control side bar","scope":"window","order":3},"gitlens.views.collapseWorktreesWhenPossible":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to try to collapse the opened worktrees into a single (common) repository in the views when possible","scope":"window","order":4},"gitlens.views.multiselect":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to allow selecting multiple items in the views","scope":"window","order":5},"gitlens.views.showCurrentBranchOnTop":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to always show the current branch at the top of the views","scope":"window","order":6},"gitlens.views.showComparisonContributors":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show a _Contributors_ section on comparison results in the views","scope":"window","order":10},"gitlens.views.showContributorsStatistics":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show contributor statistics in _Contributors_ sections in the views. This can take a while to compute depending on the repository size","scope":"window","order":11},"gitlens.views.showRelativeDateMarkers":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views","scope":"window","order":12},"gitlens.views.defaultItemLimit":{"type":"number","default":10,"markdownDescription":"Specifies the default number of items to show in a view list. Use 0 to specify no limit","scope":"window","order":20},"gitlens.views.pageItemLimit":{"type":"number","default":40,"markdownDescription":"Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit","scope":"window","order":21},"gitlens.views.formats.commits.label":{"type":"string","default":"${❰ tips|11? ❱➤  }${message}","markdownDescription":"Specifies the format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":30},"gitlens.views.formats.commits.description":{"type":"string","default":"${author, }${agoOrDate}","markdownDescription":"Specifies the description format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":31},"gitlens.views.formats.commits.tooltip":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_ \\\n${link}${' via  'pullRequest}${'&nbsp;&nbsp;'changesDetail} ${message}${\n\n---\n\nfootnotes}\n\n${tips}","markdownDescription":"Specifies the tooltip format (in markdown) of commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":32},"gitlens.views.formats.commits.tooltipWithStatus":{"type":"string","default":"${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_ \\\n${link}${' via  'pullRequest}&nbsp;&nbsp;•&nbsp;&nbsp;{{slot-status}} ${message}${\n\n---\n\nfootnotes}\n\n${tips}","markdownDescription":"Specifies the tooltip format (in markdown) of \"file\" commits in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":32},"gitlens.views.formats.files.label":{"type":"string","default":"${working  }${file}","markdownDescription":"Specifies the format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window","order":40},"gitlens.views.formats.files.description":{"type":"string","default":"${directory}${  ←  originalPath}","markdownDescription":"Specifies the description format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs","scope":"window","order":41},"gitlens.views.formats.stashes.label":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":50},"gitlens.views.formats.stashes.description":{"type":"string","default":"${stashOnRef, }${agoOrDate}","markdownDescription":"Specifies the description format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":51},"gitlens.views.formats.stashes.tooltip":{"type":"string","default":"${link}${' on `'stashOnRef`}${'\\\n&nbsp;&nbsp;'changesDetail} \\\n &nbsp;$(history) ${ago} _(${date})_ ${message}${\n\n---\n\nfootnotes}","markdownDescription":"Specifies the tooltip format (in markdown) of stashes in the views. See [_Commit Tokens_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs","scope":"window","order":52},"gitlens.views.openChangesInMultiDiffEditor":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to open multiple changes in the multi-diff editor (single tab) or in individual diff editors (multiple tabs)","scope":"window","order":60},"gitlens.views.commitFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.commitFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"},"gitlens.views.commitFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.commits.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.commits.files.label#` instead"},"gitlens.views.commitDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.commits.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.commits.description#` instead"},"gitlens.views.stashFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.stashFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"},"gitlens.views.stashFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.stashes.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.stashes.files.label#` instead"},"gitlens.views.stashDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.stashes.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.stashes.description#` instead"},"gitlens.views.statusFileFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.label` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.label#` instead"},"gitlens.views.statusFileDescriptionFormat":{"deprecationMessage":"Deprecated. Use `gitlens.views.formats.files.description` instead","markdownDeprecationMessage":"Deprecated. Use `#gitlens.views.formats.files.description#` instead"}}},{"id":"launchpad-view","title":"Launchpad View (ᴘʀᴏ)","order":101,"properties":{"gitlens.views.launchpad.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.launchpad.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Launchpad_ view will display files","scope":"window","order":30},"gitlens.views.launchpad.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Launchpad_ view. Only applies when `#gitlens.views.launchpad.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.launchpad.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Launchpad_ view. Only applies when `#gitlens.views.launchpad.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.launchpad.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Launchpad_ view will display file icons","scope":"window","order":33},"gitlens.views.launchpad.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Launchpad_ view","scope":"window","order":40}}},{"id":"commits-view","title":"Commits View","order":110,"properties":{"gitlens.views.commits.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Commits_ view","scope":"window","order":9},"gitlens.views.commits.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _Commits_ view","scope":"window","order":10},"gitlens.views.commits.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with the current branch and commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.commits.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with the current branch in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.commits.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":23},"gitlens.views.commits.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commits.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Commits_ view will display files","scope":"window","order":30},"gitlens.views.commits.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.commits.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.commits.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Commits_ view will display file icons","scope":"window","order":33},"gitlens.views.commits.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Commits_ view","scope":"window","order":40},"gitlens.views.commits.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal commits in the _Commits_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"commit-details-view","title":"Inspect View","order":120,"properties":{"gitlens.views.commitDetails.autolinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically link external resources in commit messages","scope":"window","order":31},"gitlens.views.commitDetails.autolinks.enhanced":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.views.commitDetails.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for associated pull requests. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.commitDetails.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commitDetails.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Commit Details_ view will display files","scope":"window","order":30},"gitlens.views.commitDetails.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commit Details_ view. Only applies when `#gitlens.views.commitDetails.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.commitDetails.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Commit Details_ view. Only applies when `#gitlens.views.commitDetails.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.commitDetails.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Commit Details_ view will display file icons","scope":"window","order":33},"gitlens.views.commitDetails.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Commit Details_ view","scope":"window","order":40}}},{"id":"pull-request-view","title":"Pull Request View","order":130,"properties":{"gitlens.views.pullRequest.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.pullRequest.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Pull Request_ view will display files","scope":"window","order":30},"gitlens.views.pullRequest.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Pull Request_ view. Only applies when `#gitlens.views.pullRequest.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.pullRequest.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Pull Request_ view. Only applies when `#gitlens.views.pullRequest.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.pullRequest.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Pull Request_ view will display file icons","scope":"window","order":33},"gitlens.views.pullRequest.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Pull Request_ view","scope":"window","order":40}}},{"id":"repositories-view","title":"Repositories View","order":140,"properties":{"gitlens.views.repositories.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _Repositories_ view","scope":"window","order":10},"gitlens.views.repositories.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the upstream status of the current branch for each repository in the _Repositories_ view","scope":"window","order":11},"gitlens.views.repositories.includeWorkingTree":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Repositories_ view","scope":"window","order":12},"gitlens.views.repositories.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.repositories.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with branches in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.repositories.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.repositories.showCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the commits on the current branch for each repository in the _Repositories_ view","scope":"window","order":30},"gitlens.views.repositories.showBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the branches for each repository in the _Repositories_ view","scope":"window","order":31},"gitlens.views.repositories.showRemotes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the remotes for each repository in the _Repositories_ view","scope":"window","order":32},"gitlens.views.repositories.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the stashes for each repository in the _Repositories_ view","scope":"window","order":33},"gitlens.views.repositories.showTags":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tags for each repository in the _Repositories_ view","scope":"window","order":34},"gitlens.views.repositories.showContributors":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the contributors for each repository in the _Repositories_ view","scope":"window","order":35},"gitlens.views.repositories.showWorktrees":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the worktrees for each repository in the _Repositories_ view","scope":"window","order":36},"gitlens.views.repositories.showIncomingActivity":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the experimental incoming activity for each repository in the _Repositories_ view","scope":"window","order":37},"gitlens.views.repositories.autoRefresh":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes","scope":"window","order":40},"gitlens.views.repositories.autoReveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files","scope":"window","order":50},"gitlens.views.repositories.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view","scope":"window","order":60},"gitlens.views.repositories.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Repositories_ view will display branches","scope":"window","order":70},"gitlens.views.repositories.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Repositories_ view will display files","scope":"window","order":80},"gitlens.views.repositories.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`","scope":"window","order":81},"gitlens.views.repositories.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`","scope":"window","order":82},"gitlens.views.repositories.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Repositories_ view will display file icons","scope":"window","order":83},"gitlens.views.repositories.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Repositories_ view in a compact display density","scope":"window","order":90},"gitlens.views.repositories.branches.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Commits_ and _Branches_ sections of the _Repositories_ view","scope":"window","order":95},"gitlens.views.repositories.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) under each branch in the _Repositories_ view","scope":"window","order":100},"gitlens.views.repositories.enabled":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDeprecationMessage":"Deprecated. This setting is no longer used"}}},{"id":"file-history-view","title":"File History View","order":150,"properties":{"gitlens.views.fileHistory.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with commits in the _File History_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.fileHistory.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _File History_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.fileHistory.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.fileHistory.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _File History_ view will display files","scope":"window","order":30},"gitlens.views.fileHistory.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _File History_ view. Only applies when `#gitlens.views.fileHistory.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.fileHistory.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _File History_ view. Only applies when `#gitlens.views.fileHistory.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.fileHistory.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _File History_ view will display file icons","scope":"window","order":33},"gitlens.views.fileHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _File History_ view","scope":"window","order":20},"gitlens.advanced.fileHistoryFollowsRenames":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file histories will follow renames","scope":"window","order":100},"gitlens.advanced.fileHistoryShowAllBranches":{"type":"boolean","default":false,"markdownDescription":"Specifies whether file histories will show commits from all branches","scope":"window","order":101},"gitlens.advanced.fileHistoryShowMergeCommits":{"type":"boolean","default":false,"markdownDescription":"Specifies whether file histories will show merge commits","scope":"window","order":102}}},{"id":"visual-history","title":"Visual File History (ᴘʀᴏ)","order":155,"properties":{"gitlens.visualHistory.allowMultiple":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow opening multiple instances of the _Visual File History_ in the editor area","scope":"window","order":10},"gitlens.visualHistory.queryLimit":{"type":"number","default":20,"markdownDescription":"Specifies the limit on the how many commits can be queried for statistics in the _Visual File History_, because of rate limits. Only applies to virtual workspaces.","scope":"window","order":20}}},{"id":"line-history-view","title":"Line History View","order":160,"properties":{"gitlens.views.lineHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _Line History_ view","scope":"window","order":10},"gitlens.views.lineHistory.enabled":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDeprecationMessage":"Deprecated. This setting is no longer used"}}},{"id":"branches-view","title":"Branches View","order":170,"properties":{"gitlens.views.branches.showRemoteBranches":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show remote branches for the default remote in the _Branches_ view","scope":"window","order":8},"gitlens.views.branches.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Branches_ view","scope":"window","order":9},"gitlens.views.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) in the _Branches_ view","scope":"window","order":10},"gitlens.views.branches.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with each branch and commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.branches.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with each branch in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.branches.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.branches.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Branches_ view will display branches","scope":"window","order":30},"gitlens.views.branches.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.branches.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Branches_ view will display files","scope":"window","order":50},"gitlens.views.branches.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `auto`","scope":"window","order":51},"gitlens.views.branches.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `tree` or `auto`","scope":"window","order":52},"gitlens.views.branches.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Branches_ view will display file icons","scope":"window","order":53},"gitlens.views.branches.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Branches_ view","scope":"window","order":60},"gitlens.views.branches.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal branches in the _Branches_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":70}}},{"id":"remotes-view","title":"Remotes View","order":180,"properties":{"gitlens.views.remotes.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with each branch and commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":10},"gitlens.views.remotes.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with each branch in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":11},"gitlens.views.remotes.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":12},"gitlens.views.remotes.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Remotes_ view will display branches","scope":"window","order":20},"gitlens.views.remotes.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.remotes.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Remotes_ view will display files","scope":"window","order":30},"gitlens.views.remotes.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.remotes.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.remotes.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Remotes_ view will display file icons","scope":"window","order":33},"gitlens.views.remotes.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Remotes_ view","scope":"window","order":40},"gitlens.views.remotes.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal remotes in the _Remotes_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"stashes-view","title":"Stashes View","order":190,"properties":{"gitlens.views.stashes.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.stashes.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Stashes_ view will display files","scope":"window","order":10},"gitlens.views.stashes.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `auto`","scope":"window","order":11},"gitlens.views.stashes.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `tree` or `auto`","scope":"window","order":12},"gitlens.views.stashes.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Stashes_ view will display file icons","scope":"window","order":13},"gitlens.views.stashes.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal stashes in the _Stashes_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":20}}},{"id":"tags-view","title":"Tags View","order":200,"properties":{"gitlens.views.tags.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays tags as a list","Displays tags as a tree when tags names contain slashes `/`"],"markdownDescription":"Specifies how the _Tags_ view will display tags","scope":"window","order":10},"gitlens.views.tags.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.tags.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Tags_ view will display files","scope":"window","order":30},"gitlens.views.tags.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.tags.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.tags.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Tags_ view will display file icons","scope":"window","order":33},"gitlens.views.tags.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Tags_ view","scope":"window","order":40},"gitlens.views.tags.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal tags in the _Tags_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":50}}},{"id":"worktrees-view","title":"Worktrees View (ᴘʀᴏ)","order":210,"properties":{"gitlens.worktrees.promptForLocation":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to prompt for a path when creating new worktrees","scope":"resource","order":10},"gitlens.worktrees.defaultLocation":{"type":"string","default":null,"markdownDescription":"Specifies the default path in which new worktrees will be created","scope":"resource","order":11},"gitlens.worktrees.openAfterCreate":{"type":"string","default":"prompt","enum":["always","alwaysNewWindow","onlyWhenEmpty","never","prompt"],"enumDescriptions":["Always open the new worktree in the current window","Always open the new worktree in a new window","Only open the new worktree in the current window when no folder is opened","Never open the new worktree","Always prompt to open the new worktree"],"markdownDescription":"Specifies how and when to open a worktree after it is created","scope":"resource","order":12},"gitlens.views.worktrees.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Worktrees_ view","scope":"window","order":19},"gitlens.views.worktrees.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the worktree branch with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the worktree branch with a user-selected reference (branch, tag, etc) in the _Worktrees_ view","scope":"window","order":20},"gitlens.views.worktrees.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with the worktree branch and commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.views.worktrees.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with the worktree branch in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":31},"gitlens.views.worktrees.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":32},"gitlens.views.worktrees.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.worktrees.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Worktrees_ view will display files","scope":"window","order":40},"gitlens.views.worktrees.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `auto`","scope":"window","order":41},"gitlens.views.worktrees.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `tree` or `auto`","scope":"window","order":42},"gitlens.views.worktrees.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Worktrees_ view will display file icons","scope":"window","order":43},"gitlens.views.worktrees.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Worktrees_ view","scope":"window","order":50},"gitlens.views.worktrees.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal worktrees in the _Worktrees_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":60}}},{"id":"contributors-view","title":"Contributors View","order":220,"properties":{"gitlens.views.contributors.showAllBranches":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show commits from all branches in the _Contributors_ view","scope":"window","order":10},"gitlens.views.contributors.showStatistics":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show contributor statistics in the _Contributors_ view. This can take a while to compute depending on the repository size","scope":"window","order":20},"gitlens.views.contributors.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":30},"gitlens.views.contributors.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":31},"gitlens.views.contributors.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.contributors.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Contributors_ view will display files","scope":"window","order":50},"gitlens.views.contributors.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `auto`","scope":"window","order":51},"gitlens.views.contributors.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `tree` or `auto`","scope":"window","order":52},"gitlens.views.contributors.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Contributors_ view will display file icons","scope":"window","order":53},"gitlens.views.contributors.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Contributors_ view","scope":"window","order":60},"gitlens.views.contributors.reveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to reveal contributors in the _Contributors_ view, otherwise they revealed in the _Repositories_ view","scope":"window","order":20}}},{"id":"search-compare-view","title":"Search & Compare View","order":230,"properties":{"gitlens.views.searchAndCompare.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":10},"gitlens.views.searchAndCompare.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":11},"gitlens.views.searchAndCompare.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.searchAndCompare.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Search & Compare_ view will display files","scope":"window","order":20},"gitlens.views.searchAndCompare.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `auto`","scope":"window","order":21},"gitlens.views.searchAndCompare.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `tree` or `auto`","scope":"window","order":22},"gitlens.views.searchAndCompare.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Search & Compare_ view will display file icons","scope":"window","order":33},"gitlens.views.searchAndCompare.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Search & Compare_ view","scope":"window","order":30}}},{"id":"cloud-patches-view","title":"Cloud Patches View (ᴘʀᴇᴠɪᴇᴡ)","order":240,"properties":{"gitlens.views.drafts.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.drafts.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Cloud Patches_ view will display files","scope":"window","order":30},"gitlens.views.drafts.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Cloud Patches_ view. Only applies when `#gitlens.views.drafts.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.drafts.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Cloud Patches_ view. Only applies when `#gitlens.views.drafts.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.drafts.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Cloud Patches_ view will display file icons","scope":"window","order":33},"gitlens.views.drafts.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Cloud Patches_ view","scope":"window","order":40}}},{"id":"patch-details-view","title":"Patch Details View (ᴘʀᴇᴠɪᴇᴡ)","order":250,"properties":{"gitlens.views.patchDetails.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.patchDetails.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Patch Details_ view will display files","scope":"window","order":30},"gitlens.views.patchDetails.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Patch Details_ view. Only applies when `#gitlens.views.patchDetails.files.layout#` is set to `auto`","scope":"window","order":31},"gitlens.views.patchDetails.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Patch Details_ view. Only applies when `#gitlens.views.patchDetails.files.layout#` is set to `tree` or `auto`","scope":"window","order":32},"gitlens.views.patchDetails.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Patch Details_ view will display file icons","scope":"window","order":33},"gitlens.views.patchDetails.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Patch Details_ view","scope":"window","order":40}}},{"id":"workspaces-view","title":"Cloud Workspaces View (ᴘʀᴇᴠɪᴇᴡ)","order":260,"properties":{"gitlens.views.workspaces.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch","working"],"enumDescriptions":["Hides the branch comparison","Compares the current branch with a user-selected reference","Compares the working tree with a user-selected reference"],"default":"working","markdownDescription":"Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag, etc) in the _Cloud Workspaces_ view","scope":"window","order":10},"gitlens.views.workspaces.showUpstreamStatus":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the upstream status of the current branch for each repository in the _Cloud Workspaces_ view","scope":"window","order":11},"gitlens.views.workspaces.includeWorkingTree":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Cloud Workspaces_ view","scope":"window","order":12},"gitlens.views.workspaces.pullRequests.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to query for pull requests associated with branches and commits in the _Cloud Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":20},"gitlens.views.workspaces.pullRequests.showForBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with branches in the _Cloud Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":21},"gitlens.views.workspaces.pullRequests.showForCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show pull requests (if any) associated with commits in the _Cloud Workspaces_ view. Requires a connection to a supported remote service (e.g. GitHub)","scope":"window","order":22},"gitlens.views.workspaces.showCommits":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the commits on the current branch for each repository in the _Cloud Workspaces_ view","scope":"window","order":30},"gitlens.views.workspaces.showBranches":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the branches for each repository in the _Cloud Workspaces_ view","scope":"window","order":31},"gitlens.views.workspaces.showRemotes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the remotes for each repository in the _Cloud Workspaces_ view","scope":"window","order":32},"gitlens.views.workspaces.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the stashes for each repository in the _Cloud Workspaces_ view","scope":"window","order":33},"gitlens.views.workspaces.showTags":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tags for each repository in the _Cloud Workspaces_ view","scope":"window","order":34},"gitlens.views.workspaces.showContributors":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the contributors for each repository in the _Cloud Workspaces_ view","scope":"window","order":35},"gitlens.views.workspaces.showWorktrees":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the worktrees for each repository in the _Cloud Workspaces_ view","scope":"window","order":36},"gitlens.views.workspaces.showIncomingActivity":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the experimental incoming activity for each repository in the _Cloud Workspaces_ view","scope":"window","order":37},"gitlens.views.workspaces.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Cloud Workspaces_ view","scope":"window","order":60},"gitlens.views.workspaces.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Cloud Workspaces_ view will display branches","scope":"window","order":70},"gitlens.views.workspaces.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.workspaces.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Cloud Workspaces_ view will display files","scope":"window","order":80},"gitlens.views.workspaces.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Cloud Workspaces_ view. Only applies when `#gitlens.views.workspaces.files.layout#` is set to `auto`","scope":"window","order":81},"gitlens.views.workspaces.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Cloud Workspaces_ view. Only applies when `#gitlens.views.workspaces.files.layout#` is set to `tree` or `auto`","scope":"window","order":82},"gitlens.views.workspaces.files.icon":{"type":"string","default":"type","enum":["status","type"],"enumDescriptions":["Shows the file's status as the icon","Shows the file's type (theme icon) as the icon"],"markdownDescription":"Specifies how the _Cloud Workspaces_ view will display file icons","scope":"window","order":83},"gitlens.views.workspaces.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Cloud Workspaces_ view in a compact display density","scope":"window","order":90},"gitlens.views.workspaces.branches.showStashes":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show stashes in the _Commits_ and _Branches_ sections of the _Cloud Workspaces_ view","scope":"window","order":9},"gitlens.views.workspaces.branches.showBranchComparison":{"type":["boolean","string"],"enum":[false,"branch"],"enumDescriptions":["Hides the branch comparison","Compares the branch with a user-selected reference"],"default":"branch","markdownDescription":"Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag, etc) under each branch in the _Cloud Workspaces_ view","scope":"window","order":100}}},{"id":"rebase-editor","title":"Interactive Rebase Editor","order":600,"properties":{"gitlens.rebaseEditor.ordering":{"type":"string","default":"desc","enum":["asc","desc"],"enumDescriptions":["Shows oldest commit first","Shows newest commit first"],"markdownDescription":"Specifies how Git commits are displayed in the _Interactive Rebase Editor_","scope":"window","order":10},"gitlens.rebaseEditor.showDetailsView":{"type":["boolean","string"],"default":"selection","enum":[false,"open","selection"],"enumDescriptions":["Never shows the _Commit Details_ view automatically","Shows the _Commit Details_ view automatically only when opening the _Interactive Rebase Editor_","Shows the _Commit Details_ view automatically when selection changes in the _Interactive Rebase Editor_"],"markdownDescription":"Specifies when to show the _Commit Details_ view for the selected row in the _Interactive Rebase Editor_","scope":"window","order":20}}},{"id":"git-command-palette","title":"Git Command Palette","order":700,"properties":{"gitlens.gitCommands.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in quick pick menus when applicable","scope":"window","order":5},"gitlens.gitCommands.sortBy":{"type":"string","default":"usage","enum":["name","usage"],"enumDescriptions":["Sorts commands by name","Sorts commands by last used date"],"markdownDescription":"Specifies how Git commands are sorted in the _Git Command Palette_","scope":"window","order":10},"gitlens.gitCommands.skipConfirmations":{"type":"array","default":["fetch:command","stash-push:command"],"items":{"type":"string","enum":["branch-create:command","branch-create:menu","co-authors:command","co-authors:menu","fetch:command","fetch:menu","pull:command","pull:menu","push:command","push:menu","stash-apply:command","stash-apply:menu","stash-pop:command","stash-pop:menu","stash-push:command","stash-push:menu","switch:command","switch:menu","tag-create:command","tag-create:menu"],"enumDescriptions":["Skips branch create confirmations when run from a command, e.g. a view action","Skips branch create confirmations when run from the Git Command Palette","Skips co-author confirmations when run from a command, e.g. a view action","Skips co-author confirmations when run from the Git Command Palette","Skips fetch confirmations when run from a command, e.g. a view action","Skips fetch confirmations when run from the Git Command Palette","Skips pull confirmations when run from a command, e.g. a view action","Skips pull confirmations when run from the Git Command Palette","Skips push confirmations when run from a command, e.g. a view action","Skips push confirmations when run from the Git Command Palette","Skips stash apply confirmations when run from a command, e.g. a view action","Skips stash apply confirmations when run from the Git Command Palette","Skips stash pop confirmations when run from a command, e.g. a view action","Skips stash pop confirmations when run from the Git Command Palette","Skips stash push confirmations when run from a command, e.g. a view action","Skips stash push confirmations when run from the Git Command Palette","Skips switch confirmations when run from a command, e.g. a view action","Skips switch confirmations when run from the Git Command Palette","Skips tag create confirmations when run from a command, e.g. a view action","Skips tag create confirmations when run from the Git Command Palette"]},"minItems":0,"maxItems":14,"uniqueItems":true,"markdownDescription":"Specifies which (and when) Git commands will skip the confirmation step, using the format: `git-command-name:(menu|command)`","scope":"window","order":20},"gitlens.gitCommands.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to dismiss the _Git Command Palette_ when focus is lost (if not, press `ESC` to dismiss)","scope":"window","order":30},"gitlens.gitCommands.search.showResultsInSideBar":{"type":["boolean","null"],"default":null,"markdownDescription":"Specifies whether to show the commit search results directly in the quick pick menu, in the Side Bar, or will be based on the context","scope":"window","order":40},"gitlens.gitCommands.search.matchAll":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to match all or any commit message search patterns","scope":"window","order":50},"gitlens.gitCommands.search.matchCase":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to match commit search patterns with or without regard to casing","scope":"window","order":51},"gitlens.gitCommands.search.matchRegex":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to match commit search patterns using regular expressions","scope":"window","order":52},"gitlens.gitCommands.search.showResultsInView":{"deprecationMessage":"Deprecated. This setting has been renamed to gitlens.gitCommands.search.showResultsInSideBar","markdownDeprecationMessage":"Deprecated. This setting has been renamed to `#gitlens.gitCommands.search.showResultsInSideBar#`"}}},{"id":"integrations","title":"Integrations","order":800,"properties":{"gitlens.autolinks":{"type":["array","null"],"default":null,"items":{"type":"object","required":["prefix","url"],"properties":{"prefix":{"type":"string","description":"Specifies the short prefix to match to generate autolinks for the external resource, e.g. `GH-` or `JIRA-`"},"title":{"type":["string","null"],"default":null,"description":"Specifies an optional title for the generated autolink. Use `<num>` as the variable for the reference number"},"url":{"type":"string","description":"Specifies the URL of the external resource you want to link to. Use `<num>` as the variable for the reference number"},"alphanumeric":{"type":"boolean","description":"Specifies whether alphanumeric characters should be allowed in `<num>`","default":false},"ignoreCase":{"type":"boolean","description":"Specifies whether case should be ignored when matching the prefix","default":false}},"additionalProperties":false},"uniqueItems":true,"markdownDescription":"Specifies autolinks to external resources in commit messages. Use `<num>` as the variable for the reference number","scope":"window","order":10},"gitlens.integrations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable rich integrations with any supported remote services","scope":"window","order":20},"gitlens.cloudIntegrations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to use cloud-based integrations when authenticating with GitHub","scope":"window","order":30},"gitlens.remotes":{"type":["array","null"],"default":null,"items":{"type":"object","required":["type"],"oneOf":[{"required":["domain"]},{"required":["regex"]}],"properties":{"type":{"type":"string","enum":["Custom","AzureDevOps","Bitbucket","BitbucketServer","Gerrit","GoogleSource","Gitea","GitHub","GitLab"],"description":"Specifies the type of the custom remote service"},"domain":{"type":"string","description":"Specifies the domain name used to match this custom configuration to a Git remote"},"regex":{"type":"string","description":"Specifies a regular expression used to match this custom configuration to a Git remote and capture the \"domain name\" and \"path\""},"name":{"type":"string","description":"Specifies an optional friendly name for the custom remote service"},"protocol":{"type":"string","default":"https","description":"Specifies an optional URL protocol for the custom remote service"},"ignoreSSLErrors":{"type":"boolean","default":false,"description":"Specifies whether to ignore invalid SSL certificate errors when connecting to the remote service"},"urls":{"type":"object","required":["repository","branches","branch","commit","file","fileInCommit","fileInBranch","fileLine","fileRange"],"properties":{"repository":{"type":"string","markdownDescription":"Specifies the format of a repository URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path"},"branches":{"type":"string","markdownDescription":"Specifies the format of a branches URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"},"branch":{"type":"string","markdownDescription":"Specifies the format of a branch URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"},"commit":{"type":"string","markdownDescription":"Specifies the format of a commit URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${id}` &mdash; commit SHA"},"file":{"type":"string","markdownDescription":"Specifies the format of a file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${line}` &mdash; formatted line information"},"fileInBranch":{"type":"string","markdownDescription":"Specifies the format of a branch file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${branch}` &mdash; branch\\\n`${line}` &mdash; formatted line information"},"fileInCommit":{"type":"string","markdownDescription":"Specifies the format of a commit file URL for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${id}` &mdash; commit SHA\\\n`${line}` &mdash; formatted line information"},"fileLine":{"type":"string","markdownDescription":"Specifies the format of a line in a file URL for the custom remote service\n\nAvailable tokens\\\n`${line}` &mdash; line"},"fileRange":{"type":"string","markdownDescription":"Specifies the format of a range in a file URL for the custom remote service\n\nAvailable tokens\\\n`${start}` &mdash; starting line\\\n`${end}` &mdash; ending line"}},"additionalProperties":false}}},"uniqueItems":true,"markdownDescription":"Specifies custom remote services to be matched with Git remotes to detect custom domains for built-in remote services or provide support for custom remote services","scope":"resource","order":30},"gitlens.partners":{"type":["object","null"],"additionalProperties":{"type":"object","properties":{"enabled":{"type":"boolean","default":true,"description":"Specifies whether the partner integration should be shown"}},"additionalProperties":true,"description":"Specifies the configuration of a partner integration"},"default":null,"description":"Specifies the configuration of a partner integration","scope":"window","order":40},"gitlens.liveshare.enabled":{"type":"boolean","default":true,"description":"Specifies whether to enable integration with Visual Studio Live Share","scope":"window","order":50},"gitlens.liveshare.allowGuestAccess":{"type":"boolean","default":true,"description":"Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share","scope":"window","order":51}}},{"id":"terminal","title":"Terminal","order":900,"properties":{"gitlens.terminalLinks.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable terminal links &mdash; autolinks in the integrated terminal to quickly jump to more details for commits, branches, tags, and more","scope":"window","order":10},"gitlens.terminalLinks.showDetailsView":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Commit Details_ view when clicking on a commit link in the integrated terminal","scope":"window","order":20},"gitlens.terminal.overrideGitEditor":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to use VS Code as Git's `core.editor` for Gitlens terminal commands","scope":"window","order":100}}},{"id":"ai","title":"AI (ᴘʀᴇᴠɪᴇᴡ)","order":1000,"tags":["preview"],"properties":{"gitlens.ai.model":{"type":["string","null"],"default":null,"pattern":"^((anthropic|deepseek|github|google|huggingface|openai|xai):([\\w.-]+)|vscode)$","markdownDescription":"Specifies the AI model to use for GitLens' AI features. Should be formatted as `provider:model` (e.g. `openai:gpt-4o` or `anthropic:claude-3-5-sonnet-latest`), or `vscode` for models provided by the VS Code extension API (e.g. Copilot)","scope":"window","order":10,"tags":["preview"]},"gitlens.ai.vscode.model":{"type":["string","null"],"default":null,"pattern":"^(.*):(.*)$","markdownDescription":"Specifies the VS Code provided model to use for GitLens' AI features, formatted as `vendor:family`","scope":"window","order":20,"tags":["preview"]},"gitlens.ai.openai.url":{"type":["string","null"],"default":null,"markdownDescription":"Specifies a custom URL to use for access to an OpenAI model via Azure. Azure URLs should be in the following format: https://{your-resource-name}.openai.azure.com/openai/deployments/{deployment-id}/chat/completions?api-version={api-version}","scope":"window","order":30,"tags":["preview"]},"gitlens.ai.modelOptions.temperature":{"type":"number","default":0.7,"minimum":0,"maximum":2,"markdownDescription":"Specifies the temperature, a measure of output randomness, to use for the AI model. Higher values result in more randomness, e.g. creativity, while lower values are more deterministic","scope":"window","order":90,"tags":["preview"]},"gitlens.ai.explainChanges.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a summary of changes","scope":"window","order":100,"tags":["preview"]},"gitlens.ai.generateCommitMessage.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a commit message","scope":"window","order":200,"tags":["preview"]},"gitlens.ai.generateCommitMessage.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable GitLens' AI-powered, on-demand commit message generation","scope":"window","order":210,"tags":["preview"]},"gitlens.ai.generateStashMessage.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a stash message","scope":"window","order":220,"tags":["preview"]},"gitlens.ai.generateCloudPatchMessage.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a cloud patch title and description","scope":"window","order":300,"tags":["preview"]},"gitlens.ai.generateCodeSuggestMessage.customInstructions":{"type":"string","default":null,"markdownDescription":"Specifies custom instructions to provide to the AI provider when generating a code suggest title and description","scope":"window","order":400,"tags":["preview"]}}},{"id":"date-times","title":"Date & Times","order":1100,"properties":{"gitlens.defaultDateStyle":{"type":"string","default":"relative","enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed by default","scope":"window","order":10},"gitlens.defaultDateFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":20},"gitlens.defaultDateLocale":{"type":["string","null"],"default":null,"markdownDescription":"Specifies the locale, a [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag#List_of_major_primary_language_subtags), to use for date formatting, defaults to the VS Code locale. Use `system` to follow the current system locale, or choose a specific locale, e.g `en-US` — US English, `en-GB` — British English, `de-DE` — German, `ja-JP` = Japanese, etc.","scope":"window","order":21},"gitlens.defaultDateShortFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":22},"gitlens.defaultTimeFormat":{"type":["string","null"],"default":null,"markdownDescription":"Specifies how times will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats","scope":"window","order":30},"gitlens.defaultDateSource":{"type":"string","default":"authored","enum":["authored","committed"],"enumDescriptions":["Uses the date when the changes were authored (i.e. originally written)","Uses the date when the changes were committed"],"markdownDescription":"Specifies whether commit dates should use the authored or committed date","scope":"window","order":40}}},{"id":"sorting","title":"Sorting","order":1200,"properties":{"gitlens.sortRepositoriesBy":{"type":"string","default":"discovered","enum":["discovered","lastFetched:desc","lastFetched:asc","name:asc","name:desc"],"enumDescriptions":["Sorts repositories by discovery or workspace order","Sorts repositories by last fetched date in descending order","Sorts repositories by last fetched date in ascending order","Sorts repositories by name in ascending order","Sorts repositories by name in descending order"],"markdownDescription":"Specifies how repositories are sorted in quick pick menus and views","scope":"window","order":10},"gitlens.sortBranchesBy":{"type":"string","default":"date:desc","enum":["date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts branches by the most recent commit date in descending order","Sorts branches by the most recent commit date in ascending order","Sorts branches by name in ascending order","Sorts branches by name in descending order"],"markdownDescription":"Specifies how branches are sorted in quick pick menus and views","scope":"window","order":20},"gitlens.sortTagsBy":{"type":"string","default":"date:desc","enum":["date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts tags by date in descending order","Sorts tags by date in ascending order","Sorts tags by name in ascending order","Sorts tags by name in descending order"],"markdownDescription":"Specifies how tags are sorted in quick pick menus and views","scope":"window","order":30},"gitlens.sortContributorsBy":{"type":"string","default":"count:desc","enum":["count:desc","count:asc","date:desc","date:asc","name:asc","name:desc"],"enumDescriptions":["Sorts contributors by commit count in descending order","Sorts contributors by commit count in ascending order","Sorts contributors by the most recent commit date in descending order","Sorts contributors by the most recent commit date in ascending order","Sorts contributors by name in ascending order","Sorts contributors by name in descending order"],"markdownDescription":"Specifies how contributors are sorted in quick pick menus and views","scope":"window","order":40}}},{"id":"menus-toolbars","title":"Menus & Toolbars","order":1300,"properties":{"gitlens.menus":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"editor":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"editorGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"compare":{"type":"boolean"}}}]},"editorGutter":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"remote":{"type":"boolean"},"share":{"type":"boolean"}}}]},"editorTab":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"explorer":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"ghpr":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"worktree":{"type":"boolean"}}}]},"scm":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"graph":{"type":"boolean"}}}]},"scmRepositoryInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"graph":{"type":"boolean"},"stash":{"type":"boolean"}}}]},"scmRepository":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"authors":{"type":"boolean"},"generateCommitMessage":{"type":"boolean"},"graph":{"type":"boolean"},"patch":{"type":"boolean"}}}]},"scmGroupInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"stash":{"type":"boolean"}}}]},"scmGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"openClose":{"type":"boolean"},"patch":{"type":"boolean"},"stash":{"type":"boolean"}}}]},"scmItemInline":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"stash":{"type":"boolean"}}}]},"scmItem":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"},"share":{"type":"boolean"},"stash":{"type":"boolean"}}}]}},"additionalProperties":false}],"default":{"editor":{"blame":true,"clipboard":true,"compare":true,"history":true,"remote":true},"editorGroup":{"blame":true,"compare":true},"editorGutter":{"compare":true,"remote":true,"share":true},"editorTab":{"clipboard":true,"compare":true,"history":true,"remote":true},"explorer":{"clipboard":true,"compare":true,"history":true,"remote":true},"ghpr":{"worktree":true},"scm":{"graph":true},"scmRepositoryInline":{"graph":true,"stash":false},"scmRepository":{"authors":true,"generateCommitMessage":true,"patch":true,"graph":false},"scmGroupInline":{"stash":true},"scmGroup":{"compare":true,"openClose":true,"patch":true,"stash":true},"scmItemInline":{"stash":false},"scmItem":{"clipboard":true,"compare":true,"history":true,"patch":true,"remote":true,"share":true,"stash":true}},"markdownDescription":"Specifies which commands will be added to which menus","scope":"window","order":10}}},{"id":"keyboard","title":"Keyboard Shortcuts","order":1400,"properties":{"gitlens.keymap":{"type":"string","default":"chorded","enum":["alternate","chorded","none"],"enumDescriptions":["Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)","Adds a chorded set of shortcut keys that start with `Ctrl+Shift+G` (`⌥⌘G` on macOS)","No shortcut keys will be added"],"markdownDescription":"Specifies the keymap to use for GitLens shortcut keys","scope":"window","order":10}}},{"id":"modes","title":"Modes","order":1500,"properties":{"gitlens.mode.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide the active GitLens mode in the status bar","scope":"window","order":10},"gitlens.mode.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the active GitLens mode alignment in the status bar","scope":"window","order":11},"gitlens.mode.active":{"type":"string","markdownDescription":"Specifies the active GitLens mode, if any","scope":"window","order":20},"gitlens.modes":{"type":"object","properties":{"zen":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}},"review":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}}},"additionalProperties":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"annotations":{"type":"string","enum":["blame","changes","heatmap"],"enumDescriptions":["Shows the file blame annotations","Shows the file changes annotations","Shows the file heatmap annotations"],"description":"Specifies which (if any) file annotations will be shown when this user-defined mode is active"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git CodeLens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show an inline blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"}}},"default":{"zen":{"name":"Zen","statusBarItemName":"Zen","description":"for a zen-like experience, disables many visual features","codeLens":false,"currentLine":false,"hovers":false,"statusBar":false},"review":{"name":"Review","statusBarItemName":"Reviewing","description":"for reviewing code, enables many visual features","codeLens":true,"currentLine":true,"hovers":true}},"markdownDescription":"Specifies the user-defined GitLens modes","scope":"window","order":30}}},{"id":"gitkraken","title":"GitKraken","order":9000,"properties":{"gitlens.gitKraken.activeOrganizationId":{"type":"string","markdownDescription":"Specifies the ID of the user's active GitKraken organization in GitLens","scope":"window","order":1}}},{"id":"advanced","title":"Advanced","order":10000,"properties":{"gitlens.detectNestedRepositories":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to attempt to detect nested repositories when opening files","scope":"resource","order":0},"gitlens.telemetry.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to allow GitLens to send product usage telemetry.\n\n_**Note:** For GitLens to send any telemetry BOTH this setting and VS Code telemetry must be enabled. If either one is disabled no telemetry will be sent._","scope":"window","order":1},"gitlens.advanced.messages":{"type":"object","default":{"suppressCommitHasNoPreviousCommitWarning":false,"suppressCommitNotFoundWarning":false,"suppressCreatePullRequestPrompt":false,"suppressDebugLoggingWarning":false,"suppressFileNotUnderSourceControlWarning":false,"suppressGitDisabledWarning":false,"suppressGitMissingWarning":false,"suppressGitVersionWarning":false,"suppressLineUncommittedWarning":false,"suppressNoRepositoryWarning":false,"suppressRebaseSwitchToTextWarning":false,"suppressIntegrationDisconnectedTooManyFailedRequestsWarning":false,"suppressIntegrationRequestFailed500Warning":false,"suppressIntegrationRequestTimedOutWarning":false,"suppressBlameInvalidIgnoreRevsFileWarning":false,"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning":false},"properties":{"suppressCommitHasNoPreviousCommitWarning":{"type":"boolean","default":false,"description":"Commit Has No Previous Commit Warning"},"suppressCommitNotFoundWarning":{"type":"boolean","default":false,"description":"Commit Not Found Warning"},"suppressCreatePullRequestPrompt":{"type":"boolean","default":false,"description":"Create Pull Request Prompt"},"suppressDebugLoggingWarning":{"type":"boolean","default":false,"description":"Debug Logging Warning"},"suppressFileNotUnderSourceControlWarning":{"type":"boolean","default":false,"description":"File Not Under Source Control Warning"},"suppressGitDisabledWarning":{"type":"boolean","default":false,"description":"Git Disabled Warning"},"suppressGitMissingWarning":{"type":"boolean","default":false,"description":"Git Missing Warning"},"suppressGitVersionWarning":{"type":"boolean","default":false,"description":"Git Version Warning"},"suppressLineUncommittedWarning":{"type":"boolean","default":false,"description":"Line Uncommitted Warning"},"suppressNoRepositoryWarning":{"type":"boolean","default":false,"description":"No Repository Warning"},"suppressRebaseSwitchToTextWarning":{"type":"boolean","default":false,"description":"Rebase Switch To Text Warning"},"suppressIntegrationDisconnectedTooManyFailedRequestsWarning":{"type":"boolean","default":false,"description":"Integration Disconnected; Too Many Failed Requests Warning"},"suppressIntegrationRequestFailed500Warning":{"type":"boolean","default":false,"description":"Integration Request Failed (500 status code) Warning"},"suppressIntegrationRequestTimedOutWarning":{"type":"boolean","default":false,"description":"Integration Request Timed Out Warning"},"suppressBlameInvalidIgnoreRevsFileWarning":{"type":"boolean","default":false,"description":"Invalid Blame IgnoreRevs File Warning"},"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning":{"type":"boolean","default":false,"description":"Invalid Revision in Blame IgnoreRevs File Warning"}},"additionalProperties":false,"markdownDescription":"Specifies which messages should be suppressed","scope":"window","order":5},"gitlens.advanced.repositorySearchDepth":{"type":["number","null"],"default":null,"markdownDescription":"Specifies how many folders deep to search for repositories. Defaults to `#git.repositoryScanMaxDepth#`","scope":"resource","order":10},"gitlens.advanced.abbreviatedShaLength":{"type":"number","default":7,"markdownDescription":"Specifies the length of abbreviated commit SHAs","scope":"window","order":20},"gitlens.advanced.abbreviateShaOnCopy":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to copy full or abbreviated commit SHAs to the clipboard. Abbreviates to the length of `#gitlens.advanced.abbreviatedShaLength#`.","scope":"window","order":21},"gitlens.advanced.commitOrdering":{"type":["string","null"],"default":null,"enum":[null,"date","author-date","topo"],"enumDescriptions":["Shows commits in reverse chronological order","Shows commits in reverse chronological order of the commit timestamp","Shows commits in reverse chronological order of the author timestamp","Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history"],"markdownDescription":"Specifies the order by which commits will be shown. If unspecified, commits will be shown in reverse chronological order","scope":"window","order":30},"gitlens.blame.ignoreWhitespace":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to ignore whitespace when comparing revisions during blame operations","scope":"resource","order":40},"gitlens.advanced.blame.customArguments":{"type":["array","null"],"default":null,"items":{"type":"string"},"markdownDescription":"Specifies additional arguments to pass to the `git blame` command","scope":"resource","order":41},"gitlens.advanced.similarityThreshold":{"type":["number","null"],"default":null,"markdownDescription":"Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename","scope":"window","order":50},"gitlens.advanced.externalDiffTool":{"type":["string","null"],"default":null,"markdownDescription":"Specifies an optional external diff tool to use when comparing files. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).","scope":"window","order":60},"gitlens.advanced.externalDirectoryDiffTool":{"type":["string","null"],"default":null,"markdownDescription":"Specifies an optional external diff tool to use when comparing directories. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).","scope":"window","order":61},"gitlens.advanced.quickPick.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to dismiss quick pick menus when focus is lost (if not, press `ESC` to dismiss)","scope":"window","order":70},"gitlens.advanced.maxListItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a list. Use 0 to specify no maximum","scope":"window","order":80},"gitlens.advanced.maxSearchItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a search. Use 0 to specify no maximum","scope":"window","order":81},"gitlens.advanced.caching.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether git output will be cached — changing the default is not recommended","scope":"window","order":90},"gitlens.advanced.caching.gitPath":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to cache (per-workspace) the path to the Git executable to use for GitLens","scope":"window","order":91},"gitlens.debug":{"type":"boolean","default":false,"markdownDescription":"Specifies debug mode","scope":"window","order":100},"gitlens.deepLinks.schemeOverride":{"type":["boolean","string"],"default":false,"markdownDescription":"Specifies whether to override the default deep link scheme (vscode://) with the environment value or a specified value","scope":"window","order":110},"gitlens.advanced.useSymmetricDifferenceNotation":{"deprecationMessage":"Deprecated. This setting is no longer used","markdownDescription":"Deprecated. This setting is no longer used"}}},{"id":"general","title":"General","order":0,"properties":{"gitlens.showWhatsNewAfterUpgrades":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the What's New notification after upgrading to new feature releases","scope":"window","order":20},"gitlens.outputLevel":{"type":"string","default":"warn","enum":["off","error","warn","info","debug"],"enumDescriptions":["Logs nothing","Logs only errors","Logs errors and warnings","Logs errors, warnings, and messages","Logs verbose errors, warnings, and messages. Best for issue reporting."],"markdownDescription":"Specifies how much (if any) output will be sent to the GitLens output channel","scope":"window","order":30},"gitlens.defaultGravatarsStyle":{"type":"string","default":"robohash","enum":["identicon","mp","monsterid","retro","robohash","wavatar"],"enumDescriptions":["A geometric pattern","A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)","A monster with different colors, faces, etc","8-bit arcade-style pixelated faces","A robot with different colors, faces, etc","A face with differing features and backgrounds"],"markdownDescription":"Specifies the style of the gravatar default (fallback) images","scope":"window","order":40},"gitlens.proxy":{"type":["object","null"],"default":null,"items":{"type":"object","required":["url","strictSSL"],"properties":{"url":{"type":["string","null"],"default":null,"description":"Specifies the URL of the proxy server to use"},"strictSSL":{"type":"boolean","description":"Specifies whether the proxy server certificate should be verified against the list of supplied CAs","default":true}},"additionalProperties":false},"uniqueItems":true,"description":"Specifies the proxy configuration to use. If not specified, the proxy configuration will be determined based on VS Code or OS settings","scope":"window","order":55},"gitlens.plusFeatures.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to hide or show features that require a trial or GitLens Pro and are not accessible given the opened repositories and current trial or plan","scope":"window","order":60},"gitlens.virtualRepositories.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable virtual repositories support","scope":"window","order":70},"gitlens.insiders":{"deprecationMessage":"Deprecated. Use the pre-release edition of GitLens instead","markdownDeprecationMessage":"Deprecated. Use the pre-release of GitLens instead"}}}],"configurationDefaults":{"[ansible][azure-pipelines][css][dockerfile][dockercompose][html][json][jsonc][less][postcss][scss][stylus][vue][yaml]":{"gitlens.codeLens.scopes":["document"]},"[python]":{"gitlens.codeLens.symbolScopes":["!Module"]}},"colors":[{"id":"gitlens.gutterBackgroundColor","description":"Specifies the background color of the file blame annotations","defaults":{"dark":"#FFFFFF13","light":"#0000000C","highContrast":"#FFFFFF13"}},{"id":"gitlens.gutterForegroundColor","description":"Specifies the foreground color of the file blame annotations","defaults":{"dark":"#BEBEBE","light":"#747474","highContrast":"#BEBEBE"}},{"id":"gitlens.gutterUncommittedForegroundColor","description":"Specifies the foreground color of an uncommitted line in the file blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF2FF"}},{"id":"gitlens.trailingLineBackgroundColor","description":"Specifies the background color of the inline blame annotation for the current line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"gitlens.trailingLineForegroundColor","description":"Specifies the foreground color of the inline blame annotation for the current line","defaults":{"dark":"#99999959","light":"#99999959","highContrast":"#99999999"}},{"id":"gitlens.lineHighlightBackgroundColor","description":"Specifies the background color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF233","light":"#00BCF233","highContrast":"#00BCF233"}},{"id":"gitlens.lineHighlightOverviewRulerColor","description":"Specifies the scroll bar color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF299"}},{"id":"gitlens.openAutolinkedIssueIconColor","defaults":{"dark":"#3fb950","light":"#1a7f37","highContrast":"#68ff79"},"description":"Specifies the icon color of open issues in the GitLens views"},{"id":"gitlens.closedAutolinkedIssueIconColor","defaults":{"dark":"#a371f7","light":"#8250df","highContrast":"#8945ff"},"description":"Specifies the icon color of closed issues in the GitLens views"},{"id":"gitlens.closedPullRequestIconColor","description":"Specifies the icon color of closed pull requests in the GitLens views","defaults":{"dark":"#f85149","light":"#cf222e","highContrast":"#ff544b"}},{"id":"gitlens.openPullRequestIconColor","description":"Specifies the icon color of open pull requests in the GitLens views","defaults":{"dark":"#3fb950","light":"#1a7f37","highContrast":"#68ff79"}},{"id":"gitlens.mergedPullRequestIconColor","description":"Specifies the icon color of merged pull requests in the GitLens views","defaults":{"dark":"#a371f7","light":"#8250df","highContrast":"#8945ff"}},{"id":"gitlens.unpublishedChangesIconColor","description":"Specifies the icon color of unpublished changes in the GitLens views","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.unpublishedCommitIconColor","description":"Specifies the icon color of unpublished commits in the GitLens views","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.unpulledChangesIconColor","description":"Specifies the icon color of unpulled changes in the GitLens views","defaults":{"dark":"#b15e35","light":"#b15e35","highContrast":"#ff874c"}},{"id":"gitlens.decorations.addedForegroundColor","description":"Specifies the decoration foreground color of added files","defaults":{"light":"gitDecoration.addedResourceForeground","dark":"gitDecoration.addedResourceForeground","highContrast":"gitDecoration.addedResourceForeground"}},{"id":"gitlens.decorations.copiedForegroundColor","description":"Specifies the decoration foreground color of copied files","defaults":{"light":"gitDecoration.renamedResourceForeground","dark":"gitDecoration.renamedResourceForeground","highContrast":"gitDecoration.renamedResourceForeground"}},{"id":"gitlens.decorations.deletedForegroundColor","description":"Specifies the decoration foreground color of deleted files","defaults":{"light":"gitDecoration.deletedResourceForeground","dark":"gitDecoration.deletedResourceForeground","highContrast":"gitDecoration.deletedResourceForeground"}},{"id":"gitlens.decorations.ignoredForegroundColor","description":"Specifies the decoration foreground color of ignored files","defaults":{"light":"gitDecoration.ignoredResourceForeground","dark":"gitDecoration.ignoredResourceForeground","highContrast":"gitDecoration.ignoredResourceForeground"}},{"id":"gitlens.decorations.modifiedForegroundColor","description":"Specifies the decoration foreground color of modified files","defaults":{"light":"gitDecoration.modifiedResourceForeground","dark":"gitDecoration.modifiedResourceForeground","highContrast":"gitDecoration.modifiedResourceForeground"}},{"id":"gitlens.decorations.untrackedForegroundColor","description":"Specifies the decoration foreground color of untracked files","defaults":{"light":"gitDecoration.untrackedResourceForeground","dark":"gitDecoration.untrackedResourceForeground","highContrast":"gitDecoration.untrackedResourceForeground"}},{"id":"gitlens.decorations.renamedForegroundColor","description":"Specifies the decoration foreground color of renamed files","defaults":{"light":"gitDecoration.renamedResourceForeground","dark":"gitDecoration.renamedResourceForeground","highContrast":"gitDecoration.renamedResourceForeground"}},{"id":"gitlens.decorations.branchAheadForegroundColor","description":"Specifies the decoration foreground color of branches that are ahead of their upstream","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.branchBehindForegroundColor","description":"Specifies the decoration foreground color of branches that are behind their upstream","defaults":{"dark":"#b15e35","light":"#b15e35","highContrast":"#ff874c"}},{"id":"gitlens.decorations.branchDivergedForegroundColor","description":"Specifies the decoration foreground color of branches that are both ahead and behind their upstream","defaults":{"dark":"#D8AF1B","light":"#D8AF1B","highContrast":"#D8AF1B"}},{"id":"gitlens.decorations.branchUpToDateForegroundColor","description":"Specifies the decoration foreground color of branches that are up to date with their upstream","defaults":{"dark":"sideBar.foreground","light":"sideBar.foreground","highContrast":"sideBar.foreground"}},{"id":"gitlens.decorations.branchUnpublishedForegroundColor","description":"Specifies the decoration foreground color of branches that are not yet published to an upstream","defaults":{"dark":"sideBar.foreground","light":"sideBar.foreground","highContrast":"sideBar.foreground"}},{"id":"gitlens.decorations.branchMissingUpstreamForegroundColor","description":"Specifies the decoration foreground color of branches that have a missing upstream","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.decorations.statusMergingOrRebasingConflictForegroundColor","description":"Specifies the decoration foreground color of the status during a rebase operation with conflicts","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.decorations.statusMergingOrRebasingForegroundColor","description":"Specifies the decoration foreground color of the status during a rebase operation","defaults":{"dark":"#D8AF1B","light":"#D8AF1B","highContrast":"#D8AF1B"}},{"id":"gitlens.decorations.workspaceRepoMissingForegroundColor","description":"Specifies the decoration foreground color of workspace repos which are missing a local path","defaults":{"dark":"#909090","light":"#949494","highContrast":"#d3d3d3"}},{"id":"gitlens.decorations.workspaceCurrentForegroundColor","description":"Specifies the decoration foreground color of workspaces which are currently open as a Code Workspace file","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.workspaceRepoOpenForegroundColor","description":"Specifies the decoration foreground color of workspace repos which are open in the current workspace","defaults":{"dark":"#35b15e","light":"#35b15e","highContrast":"#4dff88"}},{"id":"gitlens.decorations.worktreeHasUncommittedChangesForegroundColor","description":"Specifies the decoration foreground color for worktrees that have uncommitted changes","defaults":{"light":"#895503","dark":"#E2C08D","highContrast":"#E2C08D"}},{"id":"gitlens.decorations.worktreeMissingForegroundColor","description":"Specifies the decoration foreground color for worktrees cannot be found on disk","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#c74e39"}},{"id":"gitlens.graphLane1Color","description":"Specifies the color for the first commit lane of the _Commit Graph_ visualization","defaults":{"light":"#15a0bf","dark":"#15a0bf","highContrast":"#15a0bf"}},{"id":"gitlens.graphLane2Color","description":"Specifies the color for the second commit lane of the _Commit Graph_ visualization","defaults":{"light":"#0669f7","dark":"#0669f7","highContrast":"#0669f7"}},{"id":"gitlens.graphLane3Color","description":"Specifies the color for the third commit lane of the _Commit Graph_ visualization","defaults":{"light":"#8e00c2","dark":"#8e00c2","highContrast":"#8e00c2"}},{"id":"gitlens.graphLane4Color","description":"Specifies the color for the fourth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#c517b6","dark":"#c517b6","highContrast":"#c517b6"}},{"id":"gitlens.graphLane5Color","description":"Specifies the color for the fifth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#d90171","dark":"#d90171","highContrast":"#d90171"}},{"id":"gitlens.graphLane6Color","description":"Specifies the color for the sixth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#cd0101","dark":"#cd0101","highContrast":"#cd0101"}},{"id":"gitlens.graphLane7Color","description":"Specifies the color for the seventh commit lane of the _Commit Graph_ visualization","defaults":{"light":"#f25d2e","dark":"#f25d2e","highContrast":"#f25d2e"}},{"id":"gitlens.graphLane8Color","description":"Specifies the color for the eighth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#f2ca33","dark":"#f2ca33","highContrast":"#f2ca33"}},{"id":"gitlens.graphLane9Color","description":"Specifies the color for the ninth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#7bd938","dark":"#7bd938","highContrast":"#7bd938"}},{"id":"gitlens.graphLane10Color","description":"Specifies the color for the tenth commit lane of the _Commit Graph_ visualization","defaults":{"light":"#2ece9d","dark":"#2ece9d","highContrast":"#2ece9d"}},{"id":"gitlens.graphChangesColumnAddedColor","description":"Specifies the color for denoting lines added in the _Changes_ column on the _Commit Graph_","defaults":{"light":"#2da44e","highContrastLight":"#2da44e","dark":"#347d39","highContrast":"#347d39"}},{"id":"gitlens.graphChangesColumnDeletedColor","description":"Specifies the color for denoting lines deleted in the _Changes_ column on the _Commit Graph_","defaults":{"light":"#cf222e","highContrastLight":"#cf222e","dark":"#c93c37","highContrast":"#c93c37"}},{"id":"gitlens.graphMinimapMarkerHeadColor","description":"Specifies the color marking HEAD on the minimap of the _Commit Graph_","defaults":{"light":"#04c814","highContrastLight":"#04c814","dark":"#05e617","highContrast":"#05e617"}},{"id":"gitlens.graphScrollMarkerHeadColor","description":"Specifies the color marking HEAD on the scrollbar of the _Commit Graph_","defaults":{"light":"#04c814","highContrastLight":"#04c814","dark":"#05e617","highContrast":"#05e617"}},{"id":"gitlens.graphMinimapMarkerUpstreamColor","description":"Specifies the color marking HEAD's upstream on the minimap of the _Commit Graph_","defaults":{"light":"#8cd993","highContrastLight":"#8cd993","dark":"#09ae17","highContrast":"#09ae17"}},{"id":"gitlens.graphScrollMarkerUpstreamColor","description":"Specifies the color marking HEAD's upstream on the scrollbar of the _Commit Graph_","defaults":{"light":"#8cd993","highContrastLight":"#8cd993","dark":"#09ae17","highContrast":"#09ae17"}},{"id":"gitlens.graphMinimapMarkerHighlightsColor","description":"Specifies the color marking highlights (matches) on the minimap of the _Commit Graph_","defaults":{"light":"#f5cc00","highContrastLight":"#f5cc00","dark":"#fbff0a","highContrast":"#fbff0a"}},{"id":"gitlens.graphScrollMarkerHighlightsColor","description":"Specifies the color marking highlights (matches) on the scrollbar of the _Commit Graph_","defaults":{"light":"#f5cc00","highContrastLight":"#f5cc00","dark":"#fbff0a","highContrast":"#fbff0a"}},{"id":"gitlens.graphMinimapMarkerLocalBranchesColor","description":"Specifies the color marking local branches on the minimap of the _Commit Graph_","defaults":{"light":"#3095e8","highContrastLight":"#3095e8","dark":"#3087cf","highContrast":"#3087cf"}},{"id":"gitlens.graphScrollMarkerLocalBranchesColor","description":"Specifies the color marking local branches on the scrollbar of the _Commit Graph_","defaults":{"light":"#3095e8","highContrastLight":"#3095e8","dark":"#3087cf","highContrast":"#3087cf"}},{"id":"gitlens.graphMinimapMarkerPullRequestsColor","description":"Specifies the color marking pull requests on the minimap of the _Commit Graph_","defaults":{"light":"#ff8f18","highContrastLight":"#ff8f18","dark":"#c76801","highContrast":"#c76801"}},{"id":"gitlens.graphScrollMarkerPullRequestsColor","description":"Specifies the color marking pull requests on the scrollbar of the _Commit Graph_","defaults":{"light":"#ff8f18","highContrastLight":"#ff8f18","dark":"#c76801","highContrast":"#c76801"}},{"id":"gitlens.graphMinimapMarkerRemoteBranchesColor","description":"Specifies the color marking remote branches on the minimap of the _Commit Graph_","defaults":{"light":"#67ace4","highContrastLight":"#67ace4","dark":"#2b5e88","highContrast":"#2b5e88"}},{"id":"gitlens.graphScrollMarkerRemoteBranchesColor","description":"Specifies the color marking remote branches on the scrollbar of the _Commit Graph_","defaults":{"light":"#67ace4","highContrastLight":"#67ace4","dark":"#2b5e88","highContrast":"#2b5e88"}},{"id":"gitlens.graphMinimapMarkerStashesColor","description":"Specifies the color marking stashes on the minimap of the _Commit Graph_","defaults":{"light":"#e467e4","highContrastLight":"#e467e4","dark":"#b34db3","highContrast":"#b34db3"}},{"id":"gitlens.graphScrollMarkerStashesColor","description":"Specifies the color marking stashes on the scrollbar of the _Commit Graph_","defaults":{"light":"#e467e4","highContrastLight":"#e467e4","dark":"#b34db3","highContrast":"#b34db3"}},{"id":"gitlens.graphMinimapMarkerTagsColor","description":"Specifies the color marking tags on the minimap of the _Commit Graph_","defaults":{"light":"#d2a379","highContrastLight":"#d2a379","dark":"#6b562e","highContrast":"#6b562e"}},{"id":"gitlens.graphScrollMarkerTagsColor","description":"Specifies the color marking tags on the scrollbar of the _Commit Graph_","defaults":{"light":"#d2a379","highContrastLight":"#d2a379","dark":"#6b562e","highContrast":"#6b562e"}},{"id":"gitlens.launchpadIndicatorMergeableColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is mergeable","defaults":{"light":"#42c954","dark":"#3fb950","highContrast":"#68ff79"}},{"id":"gitlens.launchpadIndicatorMergeableHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is mergeable","defaults":{"light":"#42c954","dark":"#3fb950","highContrast":"#68ff79"}},{"id":"gitlens.launchpadIndicatorBlockedColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is blocked","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#ff003c"}},{"id":"gitlens.launchpadIndicatorBlockedHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is blocked","defaults":{"light":"#ad0707","dark":"#c74e39","highContrast":"#ff003c"}},{"id":"gitlens.launchpadIndicatorAttentionColor","description":"Specifies the color of the _Launchpad_ indicator icon when the priority is follow-up or needs review","defaults":{"dark":"#D8AF1B","light":"#cc9b15","highContrast":"#D8AF1B"}},{"id":"gitlens.launchpadIndicatorAttentionHoverColor","description":"Specifies the color of the _Launchpad_ indicator icon in the hover when the priority is follow-up or needs review","defaults":{"dark":"#D8AF1B","light":"#cc9b15","highContrast":"#D8AF1B"}}],"commands":[{"command":"gitlens.addAuthors","title":"Add Co-authors...","category":"GitLens","icon":"$(person-add)"},{"command":"gitlens.annotations.nextChange","title":"Next Change","icon":"$(arrow-down)"},{"command":"gitlens.annotations.previousChange","title":"Previous Change","icon":"$(arrow-up)"},{"command":"gitlens.applyPatchFromClipboard","title":"Apply Copied Changes (Patch)","category":"GitLens"},{"command":"gitlens.associateIssueWithBranch","title":"Associate Issue with Branch...","category":"GitLens"},{"command":"gitlens.browseRepoAtRevision","title":"Browse Repository from Revision","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.browseRepoAtRevisionInNewWindow","title":"Browse Repository from Revision in New Window","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.browseRepoBeforeRevision","title":"Browse Repository from Before Revision","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.browseRepoBeforeRevisionInNewWindow","title":"Browse Repository from Before Revision in New Window","category":"GitLens","icon":"$(folder-opened)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.clearFileAnnotations","title":"Clear File Annotations","category":"GitLens","icon":"$(gitlens-gitlens-filled)"},{"command":"gitlens.closeUnchangedFiles","title":"Close Unchanged Files","category":"GitLens"},{"command":"gitlens.compareHeadWith","title":"Compare HEAD with...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.compareWith","title":"Compare References...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.compareWorkingWith","title":"Compare Working Tree with...","category":"GitLens","icon":"$(compare-changes)"},{"command":"gitlens.computingFileAnnotations","title":"Computing File Annotations...","icon":"$(gitlens-gitlens-filled)"},{"command":"gitlens.connectRemoteProvider","title":"Connect Remote Integration","category":"GitLens","icon":"$(plug)"},{"command":"gitlens.copyCurrentBranch","title":"Copy Current Branch Name","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToBranch","title":"Copy Link to Branch","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToCommit","title":"Copy Link to Commit","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToComparison","title":"Copy Link to Comparison","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToFile","title":"Copy Link to File","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToFileAtRevision","title":"Copy Link to File at Revision...","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToLines","title":"Copy Link to Code","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToRepo","title":"Copy Link to Repository","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToTag","title":"Copy Link to Tag","icon":"$(copy)"},{"command":"gitlens.copyDeepLinkToWorkspace","title":"Copy Link to Workspace","icon":"$(copy)"},{"command":"gitlens.copyMessageToClipboard","title":"Copy Message","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyPatchToClipboard","title":"Copy Changes (Patch)","category":"GitLens"},{"command":"gitlens.copyRelativePathToClipboard","title":"Copy Relative Path","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteBranchesUrl","title":"Copy Remote Branches URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteBranchUrl","title":"Copy Remote Branch URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteCommitUrl","title":"Copy Remote Commit URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteComparisonUrl","title":"Copy Remote Comparison URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteFileUrlFrom","title":"Copy Remote File URL From...","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteFileUrlToClipboard","title":"Copy Remote File URL","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","title":"Copy Remote File URL","icon":"$(copy)"},{"command":"gitlens.copyRemotePullRequestUrl","title":"Copy Pull Request URL","icon":"$(copy)"},{"command":"gitlens.copyRemoteRepositoryUrl","title":"Copy Remote Repository URL","icon":"$(copy)"},{"command":"gitlens.copyShaToClipboard","title":"Copy SHA","category":"GitLens","icon":"$(copy)"},{"command":"gitlens.copyWorkingChangesToWorktree","title":"Copy Working Changes to Worktree...","category":"GitLens"},{"command":"gitlens.createCloudPatch","title":"Create Patch...","category":"GitLens"},{"command":"gitlens.createPatch","title":"Create Patch...","category":"GitLens"},{"command":"gitlens.createPullRequestOnRemote","title":"Create Pull Request on Remote","category":"GitLens","icon":"$(git-pull-request-create)"},{"command":"gitlens.diffDirectory","title":"Open Directory Compare (difftool) with...","category":"GitLens"},{"command":"gitlens.diffDirectoryWithHead","title":"Open Directory Compare (difftool)","category":"GitLens"},{"command":"gitlens.diffFolderWithRevision","title":"Open Folder Changes with Revision...","category":"GitLens"},{"command":"gitlens.diffFolderWithRevisionFrom","title":"Open Folder Changes with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffLineWithPrevious","title":"Open Line Changes with Previous Revision","category":"GitLens"},{"command":"gitlens.diffLineWithWorking","title":"Open Line Changes with Working File","category":"GitLens"},{"command":"gitlens.diffWithNext","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithNextInDiffLeft","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithNextInDiffRight","title":"Open Changes with Next Revision","category":"GitLens","icon":"$(gitlens-next-commit)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithPrevious","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffWithPreviousInDiffLeft","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffWithPreviousInDiffRight","title":"Open Changes with Previous Revision","category":"GitLens","icon":"$(gitlens-prev-commit)"},{"command":"gitlens.diffWithRevision","title":"Open Changes with Revision...","category":"GitLens","icon":"$(gitlens-prev-commit-menu)"},{"command":"gitlens.diffWithRevisionFrom","title":"Open Changes with Branch or Tag...","category":"GitLens"},{"command":"gitlens.diffWithWorking","title":"Open Changes with Working File","category":"GitLens","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.diffWithWorkingInDiffLeft","title":"Open Changes with Working File","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.diffWithWorkingInDiffRight","title":"Open Changes with Working File","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.disableDebugLogging","title":"Disable Debug Logging","category":"GitLens"},{"command":"gitlens.disableRebaseEditor","title":"Disable Interactive Rebase Editor","category":"GitLens"},{"command":"gitlens.disconnectRemoteProvider","title":"Disconnect Remote Integration","category":"GitLens","icon":"$(gitlens-unplug)"},{"command":"gitlens.enableDebugLogging","title":"Enable Debug Logging","category":"GitLens"},{"command":"gitlens.enableRebaseEditor","title":"Enable Interactive Rebase Editor","category":"GitLens"},{"command":"gitlens.externalDiff","title":"Open Changes (difftool)","category":"GitLens"},{"command":"gitlens.externalDiffAll","title":"Open All Changes (difftool)","category":"GitLens"},{"command":"gitlens.fetchRepositories","title":"Fetch","category":"GitLens","icon":"$(repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.generateCommitMessage","title":"Generate Commit Message...","category":"GitLens"},{"command":"gitlens.getStarted","title":"Get Started","category":"GitLens"},{"command":"gitlens.ghpr.views.openOrCreateWorktree","title":"Checkout Pull Request in Worktree (GitLens)...","enablement":"!operationInProgress"},{"command":"gitlens.gitCommands","title":"Git Command Palette","category":"GitLens"},{"command":"gitlens.gitCommands.branch","title":"Git Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.create","title":"Git Create Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.delete","title":"Git Delete Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.prune","title":"Git Prune Branches...","category":"GitLens"},{"command":"gitlens.gitCommands.branch.rename","title":"Git Rename Branch...","category":"GitLens"},{"command":"gitlens.gitCommands.checkout","title":"Git Checkout...","category":"GitLens"},{"command":"gitlens.gitCommands.cherryPick","title":"Git Cherry Pick...","category":"GitLens"},{"command":"gitlens.gitCommands.history","title":"Git History (log)...","category":"GitLens"},{"command":"gitlens.gitCommands.merge","title":"Git Merge...","category":"GitLens"},{"command":"gitlens.gitCommands.rebase","title":"Git Rebase...","category":"GitLens"},{"command":"gitlens.gitCommands.remote","title":"Git Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.add","title":"Git Add Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.prune","title":"Git Prune Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.remote.remove","title":"Git Remove Remote...","category":"GitLens"},{"command":"gitlens.gitCommands.reset","title":"Git Reset...","category":"GitLens"},{"command":"gitlens.gitCommands.revert","title":"Git Revert...","category":"GitLens"},{"command":"gitlens.gitCommands.show","title":"Git Show...","category":"GitLens"},{"command":"gitlens.gitCommands.stash","title":"Git Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.drop","title":"Git Drop Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.list","title":"Git Stash List...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.pop","title":"Git Pop Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.push","title":"Git Push Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.stash.rename","title":"Git Rename Stash...","category":"GitLens"},{"command":"gitlens.gitCommands.status","title":"Git Status...","category":"GitLens"},{"command":"gitlens.gitCommands.switch","title":"Git Switch to...","category":"GitLens"},{"command":"gitlens.gitCommands.tag","title":"Git Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.tag.create","title":"Git Create Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.tag.delete","title":"Git Delete Tag...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree","title":"Git Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.create","title":"Git Create Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.delete","title":"Git Delete Worktree...","category":"GitLens"},{"command":"gitlens.gitCommands.worktree.open","title":"Git Open Worktree...","category":"GitLens"},{"command":"gitlens.gk.switchOrganization","title":"Switch Organization...","category":"GitLens"},{"command":"gitlens.graph.addAuthor","title":"Add as Co-author","icon":"$(person-add)"},{"command":"gitlens.graph.associateIssueWithBranch","title":"Associate Issue with Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.cherryPick","title":"Cherry Pick Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.columnAuthorOff","title":"Hide Author Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnAuthorOn","title":"Show Author Column"},{"command":"gitlens.graph.columnChangesOff","title":"Hide Changes Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnChangesOn","title":"Show Changes Column"},{"command":"gitlens.graph.columnDateTimeOff","title":"Hide Date Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnDateTimeOn","title":"Show Date Column"},{"command":"gitlens.graph.columnGraphCompact","title":"Use Compact Graph Column"},{"command":"gitlens.graph.columnGraphDefault","title":"Use Expanded Graph Column"},{"command":"gitlens.graph.columnGraphOff","title":"Hide Graph Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnGraphOn","title":"Show Graph Column"},{"command":"gitlens.graph.columnMessageOff","title":"Hide Commit Message Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnMessageOn","title":"Show Commit Message Column"},{"command":"gitlens.graph.columnRefOff","title":"Hide Branch / Tag Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnRefOn","title":"Show Branch / Tag Column"},{"command":"gitlens.graph.columnShaOff","title":"Hide SHA Column","enablement":"webviewItemValue =~ /\\bcolumns:canHide\\b/"},{"command":"gitlens.graph.columnShaOn","title":"Show SHA Column"},{"command":"gitlens.graph.commitViaSCM","title":"Commit via Source Control..."},{"command":"gitlens.graph.compareAncestryWithWorking","title":"Compare Working Tree to Common Base"},{"command":"gitlens.graph.compareBranchWithHead","title":"Compare with HEAD","icon":"$(compare-changes)"},{"command":"gitlens.graph.compareSelectedCommits.multi","title":"Compare Selected Commits","icon":"$(compare-changes)"},{"command":"gitlens.graph.compareWithHead","title":"Compare to/from HEAD","icon":"$(compare-changes)"},{"command":"gitlens.graph.compareWithMergeBase","title":"Compare with Common Base"},{"command":"gitlens.graph.compareWithUpstream","title":"Compare with Upstream"},{"command":"gitlens.graph.compareWithWorking","title":"Compare Working Tree to Here","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.graph.copy","title":"Copy","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToBranch","title":"Copy Link to Branch","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToCommit","title":"Copy Link to Commit","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToRepo","title":"Copy Link to Repository","icon":"$(copy)"},{"command":"gitlens.graph.copyDeepLinkToTag","title":"Copy Link to Tag","icon":"$(copy)"},{"command":"gitlens.graph.copyMessage","title":"Copy Message","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteBranchUrl","title":"Copy Remote Branch URL","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteCommitUrl","title":"Copy Remote Commit URL","icon":"$(copy)"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","title":"Copy Remote Commit URLs","icon":"$(copy)"},{"command":"gitlens.graph.copySha","title":"Copy SHA","icon":"$(copy)"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","title":"Copy Working Changes to Worktree..."},{"command":"gitlens.graph.createBranch","title":"Create Branch...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.createCloudPatch","title":"Create Patch..."},{"command":"gitlens.graph.createPatch","title":"Create Patch..."},{"command":"gitlens.graph.createPullRequest","title":"Create Pull Request...","icon":"$(git-pull-request-create)"},{"command":"gitlens.graph.createTag","title":"Create Tag...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.createWorktree","title":"Create Worktree...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.graph.deleteBranch","title":"Delete Branch...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.deleteTag","title":"Delete Tag...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.fetch","title":"Fetch","icon":"$(repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.generateCommitMessage","title":"Generate Commit Message..."},{"command":"gitlens.graph.hideLocalBranch","title":"Hide Local Branch"},{"command":"gitlens.graph.hideRefGroup","title":"Hide"},{"command":"gitlens.graph.hideRemote","title":"Hide Remote"},{"command":"gitlens.graph.hideRemoteBranch","title":"Hide Remote Branch"},{"command":"gitlens.graph.hideTag","title":"Hide Tag"},{"command":"gitlens.graph.mergeBranchInto","title":"Merge Branch into Current Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.openBranchOnRemote","title":"Open Branch on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openChangedFileDiffs","title":"Open All Changes","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","title":"Open All Changes Individually"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","title":"Open All Changes with Common Base","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","title":"Open All Changes with Working Tree","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","title":"Open All Changes with Working Tree Individually"},{"command":"gitlens.graph.openChangedFileRevisions","title":"Open Files at Revision"},{"command":"gitlens.graph.openChangedFiles","title":"Open Files"},{"command":"gitlens.graph.openCommitOnRemote","title":"Open Commit on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openCommitOnRemote.multi","title":"Open Commits on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openInWorktree","title":"Open in Worktree","icon":"$(window)"},{"command":"gitlens.graph.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files"},{"command":"gitlens.graph.openPullRequest","title":"Open Pull Request","icon":"$(git-pull-request)"},{"command":"gitlens.graph.openPullRequestChanges","title":"Open Pull Request Changes","icon":"$(diff-multiple)"},{"command":"gitlens.graph.openPullRequestComparison","title":"Compare Pull Request","icon":"$(compare-changes)"},{"command":"gitlens.graph.openPullRequestOnRemote","title":"Open Pull Request on Remote","icon":"$(globe)"},{"command":"gitlens.graph.openWorktree","title":"Open Worktree","icon":"$(window)"},{"command":"gitlens.graph.openWorktreeInNewWindow","title":"Open Worktree in New Window","icon":"$(empty-window)"},{"command":"gitlens.graph.publishBranch","title":"Publish Branch","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.graph.pull","title":"Pull","icon":"$(repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.graph.push","title":"Push","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.graph.pushWithForce","title":"Push (force)","icon":"$(repo-force-push)","enablement":"!operationInProgress"},{"command":"gitlens.graph.rebaseOntoBranch","title":"Rebase Current Branch onto Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.rebaseOntoCommit","title":"Rebase Current Branch onto Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.rebaseOntoUpstream","title":"Rebase Current Branch onto Upstream...","enablement":"!operationInProgress"},{"command":"gitlens.graph.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.graph.renameBranch","title":"Rename Branch...","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetColumnsCompact","title":"Reset Columns to Compact Layout"},{"command":"gitlens.graph.resetColumnsDefault","title":"Reset Columns to Default Layout"},{"command":"gitlens.graph.resetCommit","title":"Reset Current Branch to Previous Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetToCommit","title":"Reset Current Branch to Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetToTag","title":"Reset Current Branch to Tag...","icon":"$(gitlens-reset)","enablement":"!operationInProgress"},{"command":"gitlens.graph.resetToTip","title":"Reset Current Branch to Tip...","enablement":"!operationInProgress"},{"command":"gitlens.graph.revert","title":"Revert Commit...","enablement":"!operationInProgress"},{"command":"gitlens.graph.scrollMarkerLocalBranchOff","title":"Hide Local Branch Markers"},{"command":"gitlens.graph.scrollMarkerLocalBranchOn","title":"Show Local Branch Markers"},{"command":"gitlens.graph.scrollMarkerPullRequestOff","title":"Hide Pull Request Markers"},{"command":"gitlens.graph.scrollMarkerPullRequestOn","title":"Show Pull Request Markers"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","title":"Hide Remote Branch Markers"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","title":"Show Remote Branch Markers"},{"command":"gitlens.graph.scrollMarkerStashOff","title":"Hide Stash Markers"},{"command":"gitlens.graph.scrollMarkerStashOn","title":"Show Stash Markers"},{"command":"gitlens.graph.scrollMarkerTagOff","title":"Hide Tag Markers"},{"command":"gitlens.graph.scrollMarkerTagOn","title":"Show Tag Markers"},{"command":"gitlens.graph.shareAsCloudPatch","title":"Share as Cloud Patch..."},{"command":"gitlens.graph.showInDetailsView","title":"Inspect Details","icon":"$(eye)"},{"command":"gitlens.graph.split","title":"Split Commit Graph","category":"GitLens","icon":"$(split-horizontal)"},{"command":"gitlens.graph.stash.apply","title":"Apply Stash...","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.delete","title":"Drop Stash...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.rename","title":"Rename Stash...","icon":"$(edit)","enablement":"!operationInProgress"},{"command":"gitlens.graph.stash.save","title":"Stash All Changes...","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToAnotherBranch","title":"Switch to Another Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToBranch","title":"Switch to Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToCommit","title":"Switch to Commit...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.switchToEditorLayout","title":"Prefer Commit Graph in Editor","category":"GitLens","enablement":"config.gitlens.graph.layout != editor"},{"command":"gitlens.graph.switchToPanelLayout","title":"Prefer Commit Graph in Panel","category":"GitLens","enablement":"config.gitlens.graph.layout != panel"},{"command":"gitlens.graph.switchToTag","title":"Switch to Tag...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.graph.undoCommit","title":"Undo Commit","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"gitlens.inviteToLiveShare","title":"Invite to Live Share","icon":"$(live-share)"},{"command":"gitlens.launchpad.indicator.toggle","title":"Toggle Launchpad Indicator","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.openAssociatedPullRequestOnRemote","title":"Open Associated Pull Request","category":"GitLens","icon":"$(git-pull-request)"},{"command":"gitlens.openBlamePriorToChange","title":"Open Blame Prior to Change","category":"GitLens","icon":"$(versions)"},{"command":"gitlens.openBranchesOnRemote","title":"Open Branches on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openBranchOnRemote","title":"Open Branch on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openChangedFiles","title":"Open Changed Files","category":"GitLens"},{"command":"gitlens.openCloudPatch","title":"Open Cloud Patch..."},{"command":"gitlens.openCommitOnRemote","title":"Open Commit on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openComparisonOnRemote","title":"Open Comparison on Remote","icon":"$(globe)"},{"command":"gitlens.openCurrentBranchOnRemote","title":"Open Current Branch on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openFileFromRemote","title":"Open File from Remote","category":"GitLens"},{"command":"gitlens.openFileHistory","title":"Open File History","category":"GitLens"},{"command":"gitlens.openFileOnRemote","title":"Open File on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openFileOnRemoteFrom","title":"Open File on Remote From...","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openFileRevision","title":"Open File at Revision...","category":"GitLens","icon":"$(gitlens-open-revision)"},{"command":"gitlens.openFileRevisionFrom","title":"Open File at Revision from...","category":"GitLens","icon":"$(gitlens-open-revision)"},{"command":"gitlens.openFolderHistory","title":"Open Folder History"},{"command":"gitlens.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openPatch","title":"Open Patch...","category":"GitLens"},{"command":"gitlens.openPullRequestOnRemote","title":"Open Pull Request on Remote","icon":"$(globe)"},{"command":"gitlens.openRepoOnRemote","title":"Open Repository on Remote","category":"GitLens","icon":"$(globe)"},{"command":"gitlens.openRevisionFile","title":"Open File at Revision","category":"GitLens","icon":"$(gitlens-open-revision)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.openRevisionFileInDiffLeft","title":"Open File at Revision","icon":"$(gitlens-open-revision)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.openRevisionFileInDiffRight","title":"Open File at Revision","icon":"$(gitlens-open-revision)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ "},{"command":"gitlens.openWorkingFile","title":"Open File","category":"GitLens","icon":"$(go-to-file)"},{"command":"gitlens.openWorkingFileInDiffLeft","title":"Open File","icon":"$(go-to-file)"},{"command":"gitlens.openWorkingFileInDiffRight","title":"Open File","icon":"$(go-to-file)"},{"command":"gitlens.pastePatchFromClipboard","title":"Paste Copied Changes (Patch)","category":"GitLens"},{"command":"gitlens.plus.cloudIntegrations.connect","title":"Connect Integrations..."},{"command":"gitlens.plus.cloudIntegrations.manage","title":"Manage Integrations...","category":"GitLens"},{"command":"gitlens.plus.hide","title":"Hide Pro Features","category":"GitLens"},{"command":"gitlens.plus.login","title":"Sign In to GitKraken...","category":"GitLens"},{"command":"gitlens.plus.logout","title":"Sign Out of GitKraken","category":"GitLens"},{"command":"gitlens.plus.manage","title":"Manage Your Account...","category":"GitLens"},{"command":"gitlens.plus.reactivateProTrial","title":"Reactivate Pro Trial","category":"GitLens"},{"command":"gitlens.plus.refreshRepositoryAccess","title":"Refresh Repository Access","category":"GitLens"},{"command":"gitlens.plus.restore","title":"Restore Pro Features","category":"GitLens"},{"command":"gitlens.plus.signUp","title":"Sign Up for GitKraken...","category":"GitLens"},{"command":"gitlens.plus.simulateSubscription","title":"Simulate Subscription (Debugging)","category":"GitLens"},{"command":"gitlens.plus.startPreviewTrial","title":"Preview Pro","category":"GitLens"},{"command":"gitlens.plus.upgrade","title":"Upgrade to Pro...","category":"GitLens"},{"command":"gitlens.pullRepositories","title":"Pull","category":"GitLens","icon":"$(repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.pushRepositories","title":"Push","category":"GitLens","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.quickOpenFileHistory","title":"Quick Open File History","category":"GitLens"},{"command":"gitlens.reset","title":"Reset Stored Data...","category":"GitLens"},{"command":"gitlens.resetAIKey","title":"Reset Stored AI Keys...","category":"GitLens"},{"command":"gitlens.resetViewsLayout","title":"Reset Views Layout","category":"GitLens"},{"command":"gitlens.revealCommitInView","title":"Reveal Commit in Side Bar","category":"GitLens"},{"command":"gitlens.scm.generateCommitMessage","title":"Generate Commit Message with GitLens..."},{"command":"gitlens.shareAsCloudPatch","title":"Share as Cloud Patch...","category":"GitLens"},{"command":"gitlens.showAccountView","title":"Show Account on Home","category":"GitLens"},{"command":"gitlens.showBranchesView","title":"Show Branches View","category":"GitLens"},{"command":"gitlens.showCommitDetailsView","title":"Show Inspect View","category":"GitLens"},{"command":"gitlens.showCommitInView","title":"Inspect Commit Details","category":"GitLens","icon":"$(eye)"},{"command":"gitlens.showCommitSearch","title":"Search Commits","category":"GitLens","icon":"$(search)"},{"command":"gitlens.showCommitsInView","title":"Search for Commits within Selection","category":"GitLens"},{"command":"gitlens.showCommitsView","title":"Show Commits View","category":"GitLens"},{"command":"gitlens.showContributorsView","title":"Show Contributors View","category":"GitLens"},{"command":"gitlens.showDraftsView","title":"Show Cloud Patches View","category":"GitLens"},{"command":"gitlens.showFileHistoryInView","title":"Open File History"},{"command":"gitlens.showFileHistoryView","title":"Show File History View","category":"GitLens"},{"command":"gitlens.showFileInTimeline","title":"Open Visual File History","category":"GitLens","icon":"$(graph-scatter)"},{"command":"gitlens.showFolderInTimeline","title":"Open Visual Folder History","icon":"$(graph-scatter)"},{"command":"gitlens.showGraph","title":"Show Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showGraphPage","title":"Show Commit Graph in Editor","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showGraphView","title":"Show Commit Graph View","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.showHomeView","title":"Show Home View","category":"GitLens"},{"command":"gitlens.showInCommitGraph","title":"Open in Commit Graph","icon":"$(gitlens-graph)"},{"command":"gitlens.showInCommitGraphView","title":"Open in Commit Graph","icon":"$(gitlens-graph)"},{"command":"gitlens.showInDetailsView","title":"Inspect Details","icon":"$(eye)"},{"command":"gitlens.showLastQuickPick","title":"Show Last Opened Quick Pick","category":"GitLens"},{"command":"gitlens.showLaunchpad","title":"Open Launchpad","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.showLaunchpadView","title":"Show Launchpad View","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.showLineCommitInView","title":"Inspect Line Commit Details","category":"GitLens","icon":"$(eye)"},{"command":"gitlens.showLineHistoryView","title":"Show Line History View","category":"GitLens"},{"command":"gitlens.showPatchDetailsPage","title":"Show Patch Details","category":"GitLens"},{"command":"gitlens.showQuickBranchHistory","title":"Show Branch History","category":"GitLens"},{"command":"gitlens.showQuickCommitDetails","title":"Quick Show Commit"},{"command":"gitlens.showQuickCommitFileDetails","title":"Quick Show Line Commit","category":"GitLens"},{"command":"gitlens.showQuickFileHistory","title":"Show File History","category":"GitLens"},{"command":"gitlens.showQuickRepoHistory","title":"Show Current Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoStatus","title":"Show Repository Status","category":"GitLens"},{"command":"gitlens.showQuickRevisionDetails","title":"Show Revision Commit","category":"GitLens","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","title":"Show Revision Commit","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","title":"Show Revision Commit","icon":"$(gitlens-commit-horizontal)","enablement":"gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"},{"command":"gitlens.showQuickStashList","title":"Show Stashes","category":"GitLens"},{"command":"gitlens.showRemotesView","title":"Show Remotes View","category":"GitLens"},{"command":"gitlens.showRepositoriesView","title":"Show Repositories View","category":"GitLens"},{"command":"gitlens.showSearchAndCompareView","title":"Show Search And Compare Commits View","category":"GitLens"},{"command":"gitlens.showSettingsPage","title":"Open Settings","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!autolinks","title":"Configure Autolinks","category":"GitLens","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!branches-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!commit-graph","title":"Open Commit Graph Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!commits-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!contributors-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!file-annotations","title":"Open File Annotation Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!file-history-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!line-history-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!remotes-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!repositories-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!search-compare-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!stashes-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!tags-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!views","title":"Open Settings","icon":"$(gear)"},{"command":"gitlens.showSettingsPage!worktrees-view","title":"Open View Settings","icon":"$(gear)"},{"command":"gitlens.showStashesView","title":"Show Stashes View","category":"GitLens"},{"command":"gitlens.showTagsView","title":"Show Tags View","category":"GitLens"},{"command":"gitlens.showTimelinePage","title":"Show Visual File History","category":"GitLens","icon":"$(graph-scatter)"},{"command":"gitlens.showTimelineView","title":"Show Visual File History View","category":"GitLens"},{"command":"gitlens.showWorkspacesView","title":"Show Cloud Workspaces View","category":"GitLens"},{"command":"gitlens.showWorktreesView","title":"Show Worktrees View","category":"GitLens"},{"command":"gitlens.startWork","title":"Start Work","category":"GitLens","icon":"$(rocket)"},{"command":"gitlens.stashApply","title":"Apply a Stash...","category":"GitLens","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.stashSave","title":"Stash All Changes...","category":"GitLens","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.stashSaveFiles","title":"Stash Changes...","icon":"$(gitlens-stash-save)","enablement":"!operationInProgress"},{"command":"gitlens.switchAIModel","title":"Switch AI Model","category":"GitLens"},{"command":"gitlens.switchMode","title":"Switch Mode","category":"GitLens"},{"command":"gitlens.timeline.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.timeline.split","title":"Split Visual File History","category":"GitLens","icon":"$(split-horizontal)"},{"command":"gitlens.toggleCodeLens","title":"Toggle Git CodeLens","category":"GitLens"},{"command":"gitlens.toggleFileBlame","title":"Toggle File Blame","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileBlameInDiffLeft","title":"Toggle File Blame","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileBlameInDiffRight","title":"Toggle File Blame","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileChanges","title":"Toggle File Changes","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileChangesOnly","title":"Toggle File Changes","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileHeatmap","title":"Toggle File Heatmap","category":"GitLens","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","title":"Toggle File Heatmap","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleFileHeatmapInDiffRight","title":"Toggle File Heatmap","icon":"$(gitlens-gitlens)"},{"command":"gitlens.toggleGraph","title":"Toggle Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.toggleLineBlame","title":"Toggle Line Blame","category":"GitLens"},{"command":"gitlens.toggleMaximizedGraph","title":"Toggle Maximized Commit Graph","category":"GitLens","icon":"$(gitlens-graph)"},{"command":"gitlens.toggleReviewMode","title":"Toggle Review Mode","category":"GitLens"},{"command":"gitlens.toggleZenMode","title":"Toggle Zen Mode","category":"GitLens"},{"command":"gitlens.views.abortPausedOperation","title":"Abort","icon":"$(circle-slash)"},{"command":"gitlens.views.addAuthor","title":"Add as Co-author","icon":"$(person-add)"},{"command":"gitlens.views.addAuthor.multi","title":"Add as Co-authors","icon":"$(person-add)"},{"command":"gitlens.views.addAuthors","title":"Add Co-authors...","icon":"$(person-add)"},{"command":"gitlens.views.addRemote","title":"Add Remote...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.applyChanges","title":"Apply Changes","enablement":"!operationInProgress"},{"command":"gitlens.views.associateIssueWithBranch","title":"Associate Issue with Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.branches.copy","title":"Copy"},{"command":"gitlens.views.branches.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.branches.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.branches.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.branches.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.branches.setLayoutToList","title":"View as List","icon":"$(list-tree)"},{"command":"gitlens.views.branches.setLayoutToTree","title":"View as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.branches.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.branches.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","title":"Hide Branch Comparisons"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","title":"Show Branch Comparisons"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","title":"Show Branch Pull Requests"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","title":"Hide Remote Branches"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","title":"Show Remote Branches"},{"command":"gitlens.views.branches.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.branches.setShowStashesOn","title":"Show Stashes"},{"command":"gitlens.views.browseRepoAtRevision","title":"Repository from Here","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","title":"Repository from Here in New Window","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoBeforeRevision","title":"Repository from Before Here","icon":"$(folder-opened)"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","title":"Repository from Before Here in New Window","icon":"$(folder-opened)"},{"command":"gitlens.views.cherryPick","title":"Cherry Pick Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.cherryPick.multi","title":"Cherry Pick Commits...","enablement":"!operationInProgress"},{"command":"gitlens.views.clearComparison","title":"Clear Comparison","icon":"$(close)"},{"command":"gitlens.views.clearReviewed","title":"Clear Reviewed Files"},{"command":"gitlens.views.closeRepository","title":"Close Repository"},{"command":"gitlens.views.collapseNode","title":"Collapse"},{"command":"gitlens.views.commitDetails.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.commits.copy","title":"Copy"},{"command":"gitlens.views.commits.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.commits.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","title":"Filter Commits by Author...","icon":"$(filter)"},{"command":"gitlens.views.commits.setCommitsFilterOff","title":"Clear Filter","icon":"$(filter-filled)"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.commits.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.commits.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.commits.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.commits.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","title":"Hide Branch Comparison"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","title":"Show Branch Comparison"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","title":"Hide Current Branch Pull Request"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","title":"Show Current Branch Pull Request"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","title":"Hide Merge Commits"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","title":"Show Merge Commits"},{"command":"gitlens.views.commits.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.commits.setShowStashesOn","title":"Show Stashes"},{"command":"gitlens.views.compareAncestryWithWorking","title":"Compare Working Tree to Common Base"},{"command":"gitlens.views.compareBranchWithHead","title":"Compare with HEAD","icon":"$(compare-changes)"},{"command":"gitlens.views.compareFileWithSelected","title":"Compare with Selected"},{"command":"gitlens.views.compareWithHead","title":"Compare to/from HEAD","icon":"$(compare-changes)"},{"command":"gitlens.views.compareWithMergeBase","title":"Compare with Common Base"},{"command":"gitlens.views.compareWithSelected","title":"Compare with Selected"},{"command":"gitlens.views.compareWithUpstream","title":"Compare with Upstream"},{"command":"gitlens.views.compareWithWorking","title":"Compare Working Tree to Here","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.views.continuePausedOperation","title":"Continue","icon":"$(debug-continue)"},{"command":"gitlens.views.contributors.copy","title":"Copy"},{"command":"gitlens.views.contributors.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.contributors.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.contributors.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","title":"View Current Branch Only"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","title":"View All Branches"},{"command":"gitlens.views.contributors.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.contributors.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","title":"Hide Merge Commits"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","title":"Show Merge Commits"},{"command":"gitlens.views.contributors.setShowStatisticsOff","title":"Hide Statistics"},{"command":"gitlens.views.contributors.setShowStatisticsOn","title":"Show Statistics"},{"command":"gitlens.views.copy","title":"Copy","icon":"$(copy)"},{"command":"gitlens.views.copyAsMarkdown","title":"Copy as Markdown","icon":"$(copy)"},{"command":"gitlens.views.copyRemoteCommitUrl","title":"Copy Remote Commit URL","icon":"$(copy)"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","title":"Copy Remote Commit URLs","icon":"$(copy)"},{"command":"gitlens.views.copyUrl","title":"Copy URL","icon":"$(copy)"},{"command":"gitlens.views.copyUrl.multi","title":"Copy URLs","icon":"$(copy)"},{"command":"gitlens.views.createBranch","title":"Create Branch...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.createPullRequest","title":"Create Pull Request...","icon":"$(git-pull-request-create)"},{"command":"gitlens.views.createTag","title":"Create Tag...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.createWorktree","title":"Create Worktree...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteBranch","title":"Delete Branch...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteBranch.multi","title":"Delete Branches...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteTag","title":"Delete Tag...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteTag.multi","title":"Delete Tags...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteWorktree","title":"Delete Worktree...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.deleteWorktree.multi","title":"Delete Worktrees...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.dismissNode","title":"Dismiss","icon":"$(close)"},{"command":"gitlens.views.draft.open","title":"Open","icon":"$(eye)"},{"command":"gitlens.views.draft.openOnWeb","title":"Open on gitkraken.dev","icon":"$(globe)"},{"command":"gitlens.views.drafts.copy","title":"Copy"},{"command":"gitlens.views.drafts.create","title":"Create Cloud Patch...","icon":"$(add)"},{"command":"gitlens.views.drafts.delete","title":"Delete Cloud Patch...","icon":"$(trash)"},{"command":"gitlens.views.drafts.info","title":"Learn about Cloud Patches...","icon":"$(info)"},{"command":"gitlens.views.drafts.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.drafts.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.drafts.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.editNode","title":"Edit...","icon":"$(edit)"},{"command":"gitlens.views.expandNode","title":"Expand"},{"command":"gitlens.views.fetch","title":"Fetch","icon":"$(repo-fetch)","enablement":"!operationInProgress"},{"command":"gitlens.views.fileHistory.changeBase","title":"Change Base...","icon":"$(history)"},{"command":"gitlens.views.fileHistory.copy","title":"Copy"},{"command":"gitlens.views.fileHistory.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","title":"View File History","icon":"$(list-selection)","enablement":"gitlens:views:fileHistory:editorFollowing || gitlens:views:fileHistory:cursorFollowing"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","title":"View Line History","icon":"$(file)","enablement":"gitlens:views:fileHistory:editorFollowing"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","title":"Pin the Current History","icon":"$(pin)"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","title":"Unpin the Current History","icon":"$(pinned)"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","title":"Don't Follow Renames"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","title":"Follow Renames"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","title":"View History for Current Branch Only"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","title":"View History for All Branches"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","title":"Hide Merge Commits"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","title":"Show Merge Commits"},{"command":"gitlens.views.graph.openInTab","title":"Open in Editor","icon":"$(link-external)"},{"command":"gitlens.views.graph.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.graphDetails.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.highlightChanges","title":"Highlight All Changes Since Before this Commit"},{"command":"gitlens.views.highlightRevisionChanges","title":"Highlight Changes from this Commit"},{"command":"gitlens.views.home.disablePreview","title":"Revert to Old Home View","icon":"$(discard)"},{"command":"gitlens.views.home.discussions","title":"GitHub Discussions","icon":"$(comment-discussion)"},{"command":"gitlens.views.home.enablePreview","title":"Switch to New Home View","icon":"$(redo)"},{"command":"gitlens.views.home.help","title":"Help Center","icon":"$(question)"},{"command":"gitlens.views.home.info","title":"Learn about Home View","icon":"$(question)"},{"command":"gitlens.views.home.issues","title":"GitHub Issues","icon":"$(feedback)"},{"command":"gitlens.views.home.previewFeedback","title":"New Home View Feedback","icon":"$(feedback)"},{"command":"gitlens.views.home.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.home.whatsNew","title":"What's New (Release Notes)","icon":"$(megaphone)"},{"command":"gitlens.views.launchpad.copy","title":"Copy"},{"command":"gitlens.views.launchpad.info","title":"Learn about Launchpad...","icon":"$(info)"},{"command":"gitlens.views.launchpad.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.launchpad.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.lineHistory.changeBase","title":"Change Base...","icon":"$(history)"},{"command":"gitlens.views.lineHistory.copy","title":"Copy"},{"command":"gitlens.views.lineHistory.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","title":"Pin the Current History","icon":"$(pin)"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","title":"Unpin the Current History","icon":"$(pinned)"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.loadAllChildren","title":"Load All","icon":"$(gitlens-expand)"},{"command":"gitlens.views.loadMoreChildren","title":"Load More"},{"command":"gitlens.views.mergeBranchInto","title":"Merge Branch into Current Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.openBranchOnRemote","title":"Open Branch on Remote","icon":"$(globe)"},{"command":"gitlens.views.openBranchOnRemote.multi","title":"Open Branches on Remote","icon":"$(globe)"},{"command":"gitlens.views.openChangedFileDiffs","title":"Open All Changes","icon":"$(diff-multiple)"},{"command":"gitlens.views.openChangedFileDiffsIndividually","title":"Open All Changes, Individually"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","title":"Open All Changes with Common Base","icon":"$(diff-multiple)"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","title":"Open All Changes with Working Tree","icon":"$(diff-multiple)"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","title":"Open All Changes with Working Tree, Individually"},{"command":"gitlens.views.openChangedFileRevisions","title":"Open Files at Revision"},{"command":"gitlens.views.openChangedFiles","title":"Open Files"},{"command":"gitlens.views.openChanges","title":"Open Changes","icon":"$(compare-changes)"},{"command":"gitlens.views.openChangesWithWorking","title":"Open Changes with Working File","icon":"$(gitlens-compare-ref-working)"},{"command":"gitlens.views.openCommitOnRemote","title":"Open Commit on Remote","icon":"$(globe)"},{"command":"gitlens.views.openCommitOnRemote.multi","title":"Open Commits on Remote","icon":"$(globe)"},{"command":"gitlens.views.openDirectoryDiff","title":"Open Directory Comparison"},{"command":"gitlens.views.openDirectoryDiffWithWorking","title":"Directory Compare Working Tree to Here"},{"command":"gitlens.views.openFile","title":"Open File","icon":"$(go-to-file)"},{"command":"gitlens.views.openFileRevision","title":"Open File at Revision","icon":"$(gitlens-open-revision)"},{"command":"gitlens.views.openInIntegratedTerminal","title":"Open in Integrated Terminal"},{"command":"gitlens.views.openInTerminal","title":"Open in Terminal"},{"command":"gitlens.views.openInWorktree","title":"Open in Worktree","icon":"$(empty-window)"},{"command":"gitlens.views.openOnlyChangedFiles","title":"Open Changed & Close Unchanged Files"},{"command":"gitlens.views.openPausedOperationInRebaseEditor","title":"Open in Rebase Editor","icon":"$(edit)"},{"command":"gitlens.views.openPreviousChangesWithWorking","title":"Open Previous Changes with Working File"},{"command":"gitlens.views.openPullRequest","title":"Open Pull Request","icon":"$(git-pull-request)"},{"command":"gitlens.views.openPullRequestChanges","title":"Open Pull Request Changes","icon":"$(diff-multiple)"},{"command":"gitlens.views.openPullRequestComparison","title":"Compare Pull Request","icon":"$(compare-changes)"},{"command":"gitlens.views.openUrl","title":"Open URL","icon":"$(globe)"},{"command":"gitlens.views.openUrl.multi","title":"Open URLs","icon":"$(globe)"},{"command":"gitlens.views.openWorktree","title":"Open Worktree","icon":"$(window)"},{"command":"gitlens.views.openWorktreeInNewWindow","title":"Open Worktree in New Window","icon":"$(empty-window)"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","title":"Open Worktrees in New Window","icon":"$(empty-window)"},{"command":"gitlens.views.patchDetails.close","title":"Close Patch","icon":"$(close)"},{"command":"gitlens.views.patchDetails.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.pruneRemote","title":"Prune","enablement":"!operationInProgress"},{"command":"gitlens.views.publishBranch","title":"Publish Branch","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.views.publishRepository","title":"Publish Repository","icon":"$(cloud-upload)","enablement":"!operationInProgress"},{"command":"gitlens.views.pull","title":"Pull","icon":"$(repo-pull)","enablement":"!operationInProgress"},{"command":"gitlens.views.pullRequest.close","title":"Close","icon":"$(close)"},{"command":"gitlens.views.pullRequest.copy","title":"Copy"},{"command":"gitlens.views.pullRequest.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.push","title":"Push","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.pushToCommit","title":"Push to Commit...","icon":"$(repo-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.pushWithForce","title":"Push (force)","icon":"$(repo-force-push)","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoBranch","title":"Rebase Current Branch onto Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoCommit","title":"Rebase Current Branch onto Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.rebaseOntoUpstream","title":"Rebase Current Branch onto Upstream...","enablement":"!operationInProgress"},{"command":"gitlens.views.refreshNode","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.remotes.copy","title":"Copy"},{"command":"gitlens.views.remotes.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.remotes.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.remotes.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.remotes.setLayoutToList","title":"View as List","icon":"$(list-tree)"},{"command":"gitlens.views.remotes.setLayoutToTree","title":"View as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.remotes.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.remotes.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","title":"Show Branch Pull Requests"},{"command":"gitlens.views.removeRemote","title":"Remove Remote...","enablement":"!operationInProgress"},{"command":"gitlens.views.renameBranch","title":"Rename Branch...","enablement":"!operationInProgress"},{"command":"gitlens.views.repositories.copy","title":"Copy"},{"command":"gitlens.views.repositories.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.repositories.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","title":"Disable Automatic Refresh"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","title":"Enable Automatic Refresh"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","title":"View Branches as List","icon":"$(list-tree)"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","title":"View Branches as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","title":"Hide Branch Comparisons"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","title":"Show Branch Comparisons"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.repositories.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.repositories.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.repositories.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.repositories.setShowBranchComparisonOff","title":"Hide Branch Comparison"},{"command":"gitlens.views.repositories.setShowBranchComparisonOn","title":"Show Branch Comparison"},{"command":"gitlens.views.repositories.setShowBranchesOff","title":"Hide Branches"},{"command":"gitlens.views.repositories.setShowBranchesOn","title":"Show Branches"},{"command":"gitlens.views.repositories.setShowCommitsOff","title":"Hide Commits"},{"command":"gitlens.views.repositories.setShowCommitsOn","title":"Show Commits"},{"command":"gitlens.views.repositories.setShowContributorsOff","title":"Hide Contributors"},{"command":"gitlens.views.repositories.setShowContributorsOn","title":"Show Contributors"},{"command":"gitlens.views.repositories.setShowRemotesOff","title":"Hide Remotes"},{"command":"gitlens.views.repositories.setShowRemotesOn","title":"Show Remotes"},{"command":"gitlens.views.repositories.setShowSectionOff","title":"Hide"},{"command":"gitlens.views.repositories.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.repositories.setShowStashesOn","title":"Show Stashes"},{"command":"gitlens.views.repositories.setShowTagsOff","title":"Hide Tags"},{"command":"gitlens.views.repositories.setShowTagsOn","title":"Show Tags"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","title":"Hide Current Branch Status"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","title":"Show Current Branch Status"},{"command":"gitlens.views.repositories.setShowWorktreesOff","title":"Hide Worktrees"},{"command":"gitlens.views.repositories.setShowWorktreesOn","title":"Show Worktrees"},{"command":"gitlens.views.resetCommit","title":"Reset Current Branch to Previous Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.resetToCommit","title":"Reset Current Branch to Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.resetToTip","title":"Reset Current Branch to Tip...","enablement":"!operationInProgress"},{"command":"gitlens.views.restore","title":"Restore (Checkout)","icon":"$(gitlens-switch)"},{"command":"gitlens.views.revealRepositoryInExplorer","title":"Reveal in File Explorer"},{"command":"gitlens.views.revealWorktreeInExplorer","title":"Reveal in File Explorer"},{"command":"gitlens.views.revert","title":"Revert Commit...","enablement":"!operationInProgress"},{"command":"gitlens.views.scm.grouped.branches","title":"Branches","icon":"$(gitlens-branches-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.branches.detach","title":"Detach Branches View","icon":"$(gitlens-branches-view)"},{"command":"gitlens.views.scm.grouped.branches.regroup","title":"Regroup Branches View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.branches.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.commits","title":"Commits","icon":"$(gitlens-commits-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.commits.detach","title":"Detach Commits View","icon":"$(gitlens-commits-view)"},{"command":"gitlens.views.scm.grouped.commits.regroup","title":"Regroup Commits View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.commits.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.contributors","title":"Contributors","icon":"$(gitlens-contributors-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.contributors.detach","title":"Detach Contributors View","icon":"$(gitlens-contributors-view)"},{"command":"gitlens.views.scm.grouped.contributors.regroup","title":"Regroup Contributors View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.contributors.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.detachAll","title":"Detach All Views","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.launchpad","title":"Launchpad","icon":"$(gitlens-launchpad-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.launchpad.detach","title":"Detach Launchpad View","icon":"$(gitlens-launchpad-view)"},{"command":"gitlens.views.scm.grouped.launchpad.regroup","title":"Regroup Launchpad View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.launchpad.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.refresh","title":"Refresh","icon":"$(refresh)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.regroupAll","title":"Regroup All Views","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.remotes","title":"Remotes","icon":"$(gitlens-remotes-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.remotes.detach","title":"Detach Remotes View","icon":"$(gitlens-remotes-view)"},{"command":"gitlens.views.scm.grouped.remotes.regroup","title":"Regroup Remotes View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.remotes.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.repositories","title":"Repositories","icon":"$(gitlens-repositories-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.repositories.detach","title":"Detach Repositories View","icon":"$(gitlens-repositories-view)"},{"command":"gitlens.views.scm.grouped.repositories.regroup","title":"Regroup Repositories View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.repositories.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.searchAndCompare","title":"Search & Compare","icon":"$(gitlens-search-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","title":"Detach Search & Compare View","icon":"$(gitlens-search-view)"},{"command":"gitlens.views.scm.grouped.searchAndCompare.regroup","title":"Regroup Search & Compare View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.searchAndCompare.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.stashes","title":"Stashes","icon":"$(gitlens-stashes-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.stashes.detach","title":"Detach Stashes View","icon":"$(gitlens-stashes-view)"},{"command":"gitlens.views.scm.grouped.stashes.regroup","title":"Regroup Stashes View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.stashes.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.tags","title":"Tags","icon":"$(gitlens-tags-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.tags.detach","title":"Detach Tags View","icon":"$(gitlens-tags-view)"},{"command":"gitlens.views.scm.grouped.tags.regroup","title":"Regroup Tags View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.tags.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.scm.grouped.worktrees","title":"Worktrees","icon":"$(gitlens-worktrees-view)","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.worktrees.detach","title":"Detach Worktrees View","icon":"$(gitlens-worktrees-view)"},{"command":"gitlens.views.scm.grouped.worktrees.regroup","title":"Regroup Worktrees View","enablement":"!gitlens:views:scm:grouped:welcome"},{"command":"gitlens.views.scm.grouped.worktrees.setAsDefault","title":"Set as Default View"},{"command":"gitlens.views.searchAndCompare.clear","title":"Clear Results","icon":"$(clear-all)"},{"command":"gitlens.views.searchAndCompare.copy","title":"Copy"},{"command":"gitlens.views.searchAndCompare.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.searchAndCompare.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.searchAndCompare.searchCommits","title":"Search Commits...","icon":"$(search)"},{"command":"gitlens.views.searchAndCompare.selectForCompare","title":"Compare References...","icon":"$(compare-changes)"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.searchAndCompare.swapComparison","title":"Swap Comparison","icon":"$(arrow-swap)","enablement":"viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/"},{"command":"gitlens.views.selectFileForCompare","title":"Select for Compare"},{"command":"gitlens.views.selectForCompare","title":"Select for Compare"},{"command":"gitlens.views.setAsDefault","title":"Set as Default"},{"command":"gitlens.views.setBranchComparisonToBranch","title":"Compare with Branch (HEAD)","icon":"$(compare-changes)"},{"command":"gitlens.views.setBranchComparisonToWorking","title":"Compare with Working Tree","icon":"$(compare-changes)"},{"command":"gitlens.views.setContributorsStatisticsOff","title":"Hide Contributors Statistics","icon":"$(graph-line)"},{"command":"gitlens.views.setContributorsStatisticsOn","title":"Show Contributors Statistics","icon":"$(graph-line)"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","title":"Filter Commits by Author...","icon":"$(filter)"},{"command":"gitlens.views.setResultsCommitsFilterOff","title":"Clear Filter","icon":"$(filter-filled)"},{"command":"gitlens.views.setResultsFilesFilterOff","title":"Clear Filter"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","title":"Show Left-side Files Only","enablement":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/"},{"command":"gitlens.views.setResultsFilesFilterOnRight","title":"Show Right-side Files Only","enablement":"viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","title":"Hide Date Markers"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","title":"Show Date Markers"},{"command":"gitlens.views.skipPausedOperation","title":"Skip","icon":"$(debug-step-over)"},{"command":"gitlens.views.stageDirectory","title":"Stage All Changes","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.stageFile","title":"Stage Changes","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.star","title":"Add to Favorites","icon":"$(star-empty)"},{"command":"gitlens.views.star.multi","title":"Add to Favorites","icon":"$(star-empty)"},{"command":"gitlens.views.stash.apply","title":"Apply Stash...","icon":"$(gitlens-stash-pop)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.delete","title":"Drop Stash...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.delete.multi","title":"Drop Stashes...","icon":"$(trash)","enablement":"!operationInProgress"},{"command":"gitlens.views.stash.rename","title":"Rename Stash...","icon":"$(edit)","enablement":"!operationInProgress"},{"command":"gitlens.views.stashes.copy","title":"Copy"},{"command":"gitlens.views.stashes.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.stashes.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.stashes.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.switchToAnotherBranch","title":"Switch to Another Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToBranch","title":"Switch to Branch...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToCommit","title":"Checkout Commit...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.switchToTag","title":"Checkout Tag...","icon":"$(gitlens-switch)","enablement":"!operationInProgress"},{"command":"gitlens.views.tags.copy","title":"Copy"},{"command":"gitlens.views.tags.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.tags.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.tags.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.tags.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.tags.setLayoutToList","title":"View as List","icon":"$(list-tree)"},{"command":"gitlens.views.tags.setLayoutToTree","title":"View as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.tags.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.tags.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.timeline.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.title.createBranch","title":"Create Branch...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.title.createTag","title":"Create Tag...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.title.createWorktree","title":"Create Worktree...","icon":"$(add)","enablement":"!operationInProgress"},{"command":"gitlens.views.undoCommit","title":"Undo Commit","icon":"$(discard)","enablement":"!operationInProgress"},{"command":"gitlens.views.unsetAsDefault","title":"Unset as Default"},{"command":"gitlens.views.unstageDirectory","title":"Unstage All Changes","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"gitlens.views.unstageFile","title":"Unstage Changes","icon":"$(remove)","enablement":"!operationInProgress"},{"command":"gitlens.views.unstar","title":"Remove from Favorites","icon":"$(star-full)"},{"command":"gitlens.views.unstar.multi","title":"Remove from Favorites","icon":"$(star-full)"},{"command":"gitlens.views.workspaces.addRepos","title":"Add Repositories...","icon":"$(add)"},{"command":"gitlens.views.workspaces.addReposFromLinked","title":"Add Repositories from Linked Workspace..."},{"command":"gitlens.views.workspaces.changeAutoAddSetting","title":"Change Linked Workspace Auto-Add Behavior..."},{"command":"gitlens.views.workspaces.convert","title":"Convert to Cloud Workspace...","icon":"$(cloud-upload)"},{"command":"gitlens.views.workspaces.copy","title":"Copy"},{"command":"gitlens.views.workspaces.create","title":"Create Cloud Workspace...","category":"GitLens","icon":"$(add)"},{"command":"gitlens.views.workspaces.createLocal","title":"Create VS Code Workspace...","icon":"$(empty-window)"},{"command":"gitlens.views.workspaces.delete","title":"Delete Workspace...","icon":"$(trash)"},{"command":"gitlens.views.workspaces.info","title":"Learn about Cloud Workspaces...","icon":"$(info)"},{"command":"gitlens.views.workspaces.locateAllRepos","title":"Locate Repositories...","icon":"$(location)"},{"command":"gitlens.views.workspaces.openLocal","title":"Open VS Code Workspace in Current Window...","icon":"$(window)"},{"command":"gitlens.views.workspaces.openLocalNewWindow","title":"Open VS Code Workspace in New Window...","icon":"$(window)"},{"command":"gitlens.views.workspaces.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.workspaces.repo.addToWindow","title":"Add Repository to VS Code Workspace"},{"command":"gitlens.views.workspaces.repo.locate","title":"Locate Repository...","icon":"$(location)"},{"command":"gitlens.views.workspaces.repo.open","title":"Open Repository","icon":"$(window)"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","title":"Open Repository in New Window","icon":"$(empty-window)"},{"command":"gitlens.views.workspaces.repo.remove","title":"Remove from Workspace...","icon":"$(trash)"},{"command":"gitlens.views.worktrees.copy","title":"Copy"},{"command":"gitlens.views.worktrees.refresh","title":"Refresh","icon":"$(refresh)"},{"command":"gitlens.views.worktrees.regroup","title":"Regroup with GitLens View","icon":"$(close)"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","title":"View Files as Auto","icon":"$(list-tree)"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","title":"View Files as List","icon":"$(gitlens-list-auto)"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","title":"View Files as Tree","icon":"$(list-flat)"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","title":"Hide Avatars"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","title":"Show Avatars"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","title":"Hide Branch Comparison"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","title":"Show Branch Comparison"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","title":"Hide Branch Pull Requests"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","title":"Show Branch Pull Requests"},{"command":"gitlens.views.worktrees.setShowStashesOff","title":"Hide Stashes"},{"command":"gitlens.views.worktrees.setShowStashesOn","title":"Show Stashes"}],"icons":{"gitlens-commit-horizontal":{"description":"commit-horizontal icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f101"}},"gitlens-graph":{"description":"graph icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f102"}},"gitlens-next-commit":{"description":"next-commit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f103"}},"gitlens-prev-commit-menu":{"description":"prev-commit-menu icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f104"}},"gitlens-prev-commit":{"description":"prev-commit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f105"}},"gitlens-compare-ref-working":{"description":"compare-ref-working icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f106"}},"gitlens-branches-view":{"description":"branches-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f107"}},"gitlens-commit-view":{"description":"commit-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f108"}},"gitlens-commits-view":{"description":"commits-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f109"}},"gitlens-compare-view":{"description":"compare-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10a"}},"gitlens-contributors-view":{"description":"contributors-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10b"}},"gitlens-history-view":{"description":"history-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10c"}},"gitlens-history":{"description":"history icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10c"}},"gitlens-remotes-view":{"description":"remotes-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10d"}},"gitlens-repositories-view":{"description":"repositories-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10e"}},"gitlens-search-view":{"description":"search-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f10f"}},"gitlens-stashes-view":{"description":"stashes-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f110"}},"gitlens-stashes":{"description":"stashes icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f110"}},"gitlens-tags-view":{"description":"tags-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f111"}},"gitlens-worktrees-view":{"description":"worktrees-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f112"}},"gitlens-gitlens":{"description":"gitlens icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f113"}},"gitlens-stash-pop":{"description":"stash-pop icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f114"}},"gitlens-stash-save":{"description":"stash-save icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f115"}},"gitlens-unplug":{"description":"unplug icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f116"}},"gitlens-open-revision":{"description":"open-revision icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f117"}},"gitlens-switch":{"description":"switch icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f118"}},"gitlens-expand":{"description":"expand icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f119"}},"gitlens-list-auto":{"description":"list-auto icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11a"}},"gitlens-pinned-filled":{"description":"pinned-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11c"}},"gitlens-clock":{"description":"clock icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11d"}},"gitlens-provider-azdo":{"description":"provider-azdo icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11e"}},"gitlens-provider-bitbucket":{"description":"provider-bitbucket icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f11f"}},"gitlens-provider-gerrit":{"description":"provider-gerrit icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f120"}},"gitlens-provider-gitea":{"description":"provider-gitea icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f121"}},"gitlens-provider-github":{"description":"provider-github icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f122"}},"gitlens-provider-gitlab":{"description":"provider-gitlab icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f123"}},"gitlens-gitlens-inspect":{"description":"gitlens-inspect icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f124"}},"gitlens-workspaces-view":{"description":"workspaces-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f125"}},"gitlens-confirm-checked":{"description":"confirm-checked icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f126"}},"gitlens-confirm-unchecked":{"description":"confirm-unchecked icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f127"}},"gitlens-cloud-patch":{"description":"cloud-patch icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f128"}},"gitlens-cloud-patch-share":{"description":"cloud-patch-share icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f129"}},"gitlens-inspect":{"description":"inspect icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12a"}},"gitlens-repository-filled":{"description":"repository-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12b"}},"gitlens-gitlens-filled":{"description":"gitlens-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12c"}},"gitlens-code-suggestion":{"description":"code-suggestion icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f12d"}},"gitlens-provider-jira":{"description":"provider-jira icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f133"}},"gitlens-play-button":{"description":"play-button icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f134"}},"gitlens-rocket-filled":{"description":"rocket-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f135"}},"gitlens-branches-view-filled":{"description":"branches-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f136"}},"gitlens-commits-view-filled":{"description":"commits-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f137"}},"gitlens-contributors-view-filled":{"description":"contributors-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f138"}},"gitlens-remotes-view-filled":{"description":"remotes-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f139"}},"gitlens-repositories-view-filled":{"description":"repositories-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13a"}},"gitlens-search-view-filled":{"description":"search-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13b"}},"gitlens-stashes-view-filled":{"description":"stashes-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13c"}},"gitlens-tags-view-filled":{"description":"tags-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13d"}},"gitlens-worktrees-view-filled":{"description":"worktrees-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13e"}},"gitlens-launchpad-view":{"description":"launchpad-view icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f13f"}},"gitlens-launchpad-view-filled":{"description":"launchpad-view-filled icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f140"}},"gitlens-merge-target":{"description":"merge-target icon","default":{"fontPath":"dist/glicons.woff2","fontCharacter":"\\f141"}}},"menus":{"commandPalette":[{"command":"gitlens.addAuthors","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.annotations.nextChange","when":"false"},{"command":"gitlens.annotations.previousChange","when":"false"},{"command":"gitlens.applyPatchFromClipboard","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.associateIssueWithBranch","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.browseRepoAtRevision","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.browseRepoAtRevisionInNewWindow","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.browseRepoBeforeRevision","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.browseRepoBeforeRevisionInNewWindow","when":"!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.clearFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated || resource in gitlens:tabs:annotated)"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled"},{"command":"gitlens.compareHeadWith","when":"gitlens:enabled"},{"command":"gitlens.compareWith","when":"gitlens:enabled"},{"command":"gitlens.compareWorkingWith","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.computingFileAnnotations","when":"false"},{"command":"gitlens.connectRemoteProvider","when":"config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected"},{"command":"gitlens.copyCurrentBranch","when":"gitlens:enabled"},{"command":"gitlens.copyDeepLinkToBranch","when":"false"},{"command":"gitlens.copyDeepLinkToCommit","when":"false"},{"command":"gitlens.copyDeepLinkToComparison","when":"false"},{"command":"gitlens.copyDeepLinkToFile","when":"false"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"false"},{"command":"gitlens.copyDeepLinkToLines","when":"false"},{"command":"gitlens.copyDeepLinkToRepo","when":"gitlens:enabled"},{"command":"gitlens.copyDeepLinkToTag","when":"false"},{"command":"gitlens.copyDeepLinkToWorkspace","when":"false"},{"command":"gitlens.copyMessageToClipboard","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.copyRelativePathToClipboard","when":"gitlens:enabled"},{"command":"gitlens.copyRemoteBranchesUrl","when":"false"},{"command":"gitlens.copyRemoteBranchUrl","when":"false"},{"command":"gitlens.copyRemoteCommitUrl","when":"gitlens:repos:withRemotes"},{"command":"gitlens.copyRemoteComparisonUrl","when":"false"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"gitlens:repos:withRemotes"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:repos:withRemotes"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"false"},{"command":"gitlens.copyRemotePullRequestUrl","when":"false"},{"command":"gitlens.copyRemoteRepositoryUrl","when":"false"},{"command":"gitlens.copyShaToClipboard","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.copyWorkingChangesToWorktree","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.createCloudPatch","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.createPatch","when":"false && gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.createPullRequestOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.diffDirectory","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffFolderWithRevision","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.diffLineWithPrevious","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.diffLineWithWorking","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.diffWithNext","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor"},{"command":"gitlens.diffWithNextInDiffLeft","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffRight","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor"},{"command":"gitlens.diffWithPrevious","when":"resource in gitlens:tabs:tracked && !isInDiffEditor"},{"command":"gitlens.diffWithPreviousInDiffLeft","when":"resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","when":"resource in gitlens:tabs:tracked && isInDiffRightEditor"},{"command":"gitlens.diffWithRevision","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.diffWithRevisionFrom","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.diffWithWorking","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.diffWithWorkingInDiffLeft","when":"false"},{"command":"gitlens.diffWithWorkingInDiffRight","when":"false"},{"command":"gitlens.disableDebugLogging","when":"config.gitlens.outputLevel == debug"},{"command":"gitlens.disableRebaseEditor","when":"gitlens:enabled"},{"command":"gitlens.disconnectRemoteProvider","when":"config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrationsConnected"},{"command":"gitlens.enableDebugLogging","when":"config.gitlens.outputLevel != debug"},{"command":"gitlens.enableRebaseEditor","when":"gitlens:enabled"},{"command":"gitlens.externalDiff","when":"!gitlens:hasVirtualFolders && resource in gitlens:tabs:tracked"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.fetchRepositories","when":"gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.generateCommitMessage","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:ai:enabled && config.gitlens.ai.generateCommitMessage.enabled"},{"command":"gitlens.ghpr.views.openOrCreateWorktree","when":"false"},{"command":"gitlens.gitCommands","when":"!gitlens:disabled"},{"command":"gitlens.gitCommands.branch","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.prune","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.branch.rename","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.checkout","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.cherryPick","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.history","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.merge","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.rebase","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.add","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.prune","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.remote.remove","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.reset","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.revert","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.show","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.drop","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.list","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.pop","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.push","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.stash.rename","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.status","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.switch","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.tag.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.create","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.delete","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gitCommands.worktree.open","when":"!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.gk.switchOrganization","when":"gitlens:gk:hasOrganizations"},{"command":"gitlens.graph.addAuthor","when":"false"},{"command":"gitlens.graph.associateIssueWithBranch","when":"false"},{"command":"gitlens.graph.cherryPick","when":"false"},{"command":"gitlens.graph.columnAuthorOff","when":"false"},{"command":"gitlens.graph.columnAuthorOn","when":"false"},{"command":"gitlens.graph.columnChangesOff","when":"false"},{"command":"gitlens.graph.columnChangesOn","when":"false"},{"command":"gitlens.graph.columnDateTimeOff","when":"false"},{"command":"gitlens.graph.columnDateTimeOn","when":"false"},{"command":"gitlens.graph.columnGraphCompact","when":"false"},{"command":"gitlens.graph.columnGraphDefault","when":"false"},{"command":"gitlens.graph.columnGraphOff","when":"false"},{"command":"gitlens.graph.columnGraphOn","when":"false"},{"command":"gitlens.graph.columnMessageOff","when":"false"},{"command":"gitlens.graph.columnMessageOn","when":"false"},{"command":"gitlens.graph.columnRefOff","when":"false"},{"command":"gitlens.graph.columnRefOn","when":"false"},{"command":"gitlens.graph.columnShaOff","when":"false"},{"command":"gitlens.graph.columnShaOn","when":"false"},{"command":"gitlens.graph.commitViaSCM","when":"false"},{"command":"gitlens.graph.compareAncestryWithWorking","when":"false"},{"command":"gitlens.graph.compareBranchWithHead","when":"false"},{"command":"gitlens.graph.compareSelectedCommits.multi","when":"false"},{"command":"gitlens.graph.compareWithHead","when":"false"},{"command":"gitlens.graph.compareWithMergeBase","when":"false"},{"command":"gitlens.graph.compareWithUpstream","when":"false"},{"command":"gitlens.graph.compareWithWorking","when":"false"},{"command":"gitlens.graph.copy","when":"false"},{"command":"gitlens.graph.copyDeepLinkToBranch","when":"false"},{"command":"gitlens.graph.copyDeepLinkToCommit","when":"false"},{"command":"gitlens.graph.copyDeepLinkToRepo","when":"false"},{"command":"gitlens.graph.copyDeepLinkToTag","when":"false"},{"command":"gitlens.graph.copyMessage","when":"false"},{"command":"gitlens.graph.copyRemoteBranchUrl","when":"false"},{"command":"gitlens.graph.copyRemoteCommitUrl","when":"false"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","when":"false"},{"command":"gitlens.graph.copySha","when":"false"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","when":"false"},{"command":"gitlens.graph.createBranch","when":"false"},{"command":"gitlens.graph.createCloudPatch","when":"false"},{"command":"gitlens.graph.createPatch","when":"false"},{"command":"gitlens.graph.createPullRequest","when":"false"},{"command":"gitlens.graph.createTag","when":"false"},{"command":"gitlens.graph.createWorktree","when":"false"},{"command":"gitlens.graph.deleteBranch","when":"false"},{"command":"gitlens.graph.deleteTag","when":"false"},{"command":"gitlens.graph.fetch","when":"false"},{"command":"gitlens.graph.generateCommitMessage","when":"false"},{"command":"gitlens.graph.hideLocalBranch","when":"false"},{"command":"gitlens.graph.hideRefGroup","when":"false"},{"command":"gitlens.graph.hideRemote","when":"false"},{"command":"gitlens.graph.hideRemoteBranch","when":"false"},{"command":"gitlens.graph.hideTag","when":"false"},{"command":"gitlens.graph.mergeBranchInto","when":"false"},{"command":"gitlens.graph.openBranchOnRemote","when":"false"},{"command":"gitlens.graph.openChangedFileDiffs","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","when":"false"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","when":"false"},{"command":"gitlens.graph.openChangedFileRevisions","when":"false"},{"command":"gitlens.graph.openChangedFiles","when":"false"},{"command":"gitlens.graph.openCommitOnRemote","when":"false"},{"command":"gitlens.graph.openCommitOnRemote.multi","when":"false"},{"command":"gitlens.graph.openInWorktree","when":"false"},{"command":"gitlens.graph.openOnlyChangedFiles","when":"false"},{"command":"gitlens.graph.openPullRequest","when":"false"},{"command":"gitlens.graph.openPullRequestChanges","when":"false"},{"command":"gitlens.graph.openPullRequestComparison","when":"false"},{"command":"gitlens.graph.openPullRequestOnRemote","when":"false"},{"command":"gitlens.graph.openWorktree","when":"false"},{"command":"gitlens.graph.openWorktreeInNewWindow","when":"false"},{"command":"gitlens.graph.publishBranch","when":"false"},{"command":"gitlens.graph.pull","when":"false"},{"command":"gitlens.graph.push","when":"false"},{"command":"gitlens.graph.pushWithForce","when":"false"},{"command":"gitlens.graph.rebaseOntoBranch","when":"false"},{"command":"gitlens.graph.rebaseOntoCommit","when":"false"},{"command":"gitlens.graph.rebaseOntoUpstream","when":"false"},{"command":"gitlens.graph.refresh","when":"false"},{"command":"gitlens.graph.renameBranch","when":"false"},{"command":"gitlens.graph.resetColumnsCompact","when":"false"},{"command":"gitlens.graph.resetColumnsDefault","when":"false"},{"command":"gitlens.graph.resetCommit","when":"false"},{"command":"gitlens.graph.resetToCommit","when":"false"},{"command":"gitlens.graph.resetToTag","when":"false"},{"command":"gitlens.graph.resetToTip","when":"false"},{"command":"gitlens.graph.revert","when":"false"},{"command":"gitlens.graph.scrollMarkerLocalBranchOff","when":"false"},{"command":"gitlens.graph.scrollMarkerLocalBranchOn","when":"false"},{"command":"gitlens.graph.scrollMarkerPullRequestOff","when":"false"},{"command":"gitlens.graph.scrollMarkerPullRequestOn","when":"false"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","when":"false"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","when":"false"},{"command":"gitlens.graph.scrollMarkerStashOff","when":"false"},{"command":"gitlens.graph.scrollMarkerStashOn","when":"false"},{"command":"gitlens.graph.scrollMarkerTagOff","when":"false"},{"command":"gitlens.graph.scrollMarkerTagOn","when":"false"},{"command":"gitlens.graph.shareAsCloudPatch","when":"false"},{"command":"gitlens.graph.showInDetailsView","when":"false"},{"command":"gitlens.graph.split","when":"gitlens:enabled && config.gitlens.graph.allowMultiple"},{"command":"gitlens.graph.stash.apply","when":"false"},{"command":"gitlens.graph.stash.delete","when":"false"},{"command":"gitlens.graph.stash.rename","when":"false"},{"command":"gitlens.graph.stash.save","when":"false"},{"command":"gitlens.graph.switchToAnotherBranch","when":"false"},{"command":"gitlens.graph.switchToBranch","when":"false"},{"command":"gitlens.graph.switchToCommit","when":"false"},{"command":"gitlens.graph.switchToEditorLayout","when":"gitlens:enabled && config.gitlens.graph.layout != editor"},{"command":"gitlens.graph.switchToPanelLayout","when":"gitlens:enabled && config.gitlens.graph.layout != panel"},{"command":"gitlens.graph.switchToTag","when":"false"},{"command":"gitlens.graph.undoCommit","when":"false"},{"command":"gitlens.inviteToLiveShare","when":"false"},{"command":"gitlens.launchpad.indicator.toggle","when":"gitlens:enabled"},{"command":"gitlens.openAssociatedPullRequestOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openBlamePriorToChange","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openBranchesOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openBranchOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openCloudPatch","when":"false"},{"command":"gitlens.openCommitOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openComparisonOnRemote","when":"false"},{"command":"gitlens.openCurrentBranchOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openFileFromRemote","when":"gitlens:enabled"},{"command":"gitlens.openFileHistory","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openFileOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openFileOnRemoteFrom","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openFileRevision","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openFileRevisionFrom","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.openFolderHistory","when":"false"},{"command":"gitlens.openOnlyChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openPatch","when":"false && gitlens:enabled"},{"command":"gitlens.openPullRequestOnRemote","when":"false"},{"command":"gitlens.openRepoOnRemote","when":"gitlens:repos:withRemotes"},{"command":"gitlens.openRevisionFile","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor"},{"command":"gitlens.openRevisionFileInDiffLeft","when":"false"},{"command":"gitlens.openRevisionFileInDiffRight","when":"false"},{"command":"gitlens.openWorkingFile","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.openWorkingFileInDiffLeft","when":"false"},{"command":"gitlens.openWorkingFileInDiffRight","when":"false"},{"command":"gitlens.pastePatchFromClipboard","when":"gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.plus.cloudIntegrations.connect","when":"false"},{"command":"gitlens.plus.cloudIntegrations.manage","when":"gitlens:plus"},{"command":"gitlens.plus.hide","when":"config.gitlens.plusFeatures.enabled"},{"command":"gitlens.plus.login","when":"!gitlens:plus"},{"command":"gitlens.plus.manage","when":"gitlens:plus"},{"command":"gitlens.plus.reactivateProTrial","when":"gitlens:plus:state == 5"},{"command":"gitlens.plus.refreshRepositoryAccess","when":"gitlens:enabled"},{"command":"gitlens.plus.restore","when":"!config.gitlens.plusFeatures.enabled"},{"command":"gitlens.plus.signUp","when":"!gitlens:plus"},{"command":"gitlens.plus.simulateSubscription","when":"gitlens:enabled && gitlens:debugging"},{"command":"gitlens.plus.startPreviewTrial","when":"false && !gitlens:plus"},{"command":"gitlens.pullRepositories","when":"gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.pushRepositories","when":"gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.quickOpenFileHistory","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.resetAIKey","when":"gitlens:enabled && gitlens:gk:organization:ai:enabled"},{"command":"gitlens.revealCommitInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.scm.generateCommitMessage","when":"false"},{"command":"gitlens.shareAsCloudPatch","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.showBranchesView","when":"gitlens:enabled"},{"command":"gitlens.showCommitDetailsView","when":"gitlens:enabled"},{"command":"gitlens.showCommitInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showCommitSearch","when":"gitlens:enabled"},{"command":"gitlens.showCommitsInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showCommitsView","when":"gitlens:enabled"},{"command":"gitlens.showContributorsView","when":"gitlens:enabled"},{"command":"gitlens.showDraftsView","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled"},{"command":"gitlens.showFileHistoryInView","when":"false"},{"command":"gitlens.showFileHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showFileInTimeline","when":"gitlens:enabled && resource in gitlens:tabs:tracked"},{"command":"gitlens.showFolderInTimeline","when":"false"},{"command":"gitlens.showGraph","when":"gitlens:enabled"},{"command":"gitlens.showGraphPage","when":"gitlens:enabled"},{"command":"gitlens.showGraphView","when":"gitlens:enabled"},{"command":"gitlens.showInCommitGraph","when":"false"},{"command":"gitlens.showInCommitGraphView","when":"false"},{"command":"gitlens.showInDetailsView","when":"false"},{"command":"gitlens.showLastQuickPick","when":"gitlens:enabled"},{"command":"gitlens.showLaunchpad","when":"gitlens:enabled"},{"command":"gitlens.showLaunchpadView","when":"gitlens:enabled"},{"command":"gitlens.showLineCommitInView","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showLineHistoryView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showPatchDetailsPage","when":"gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"},{"command":"gitlens.showQuickBranchHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickCommitDetails","when":"false"},{"command":"gitlens.showQuickCommitFileDetails","when":"resource in gitlens:tabs:blameable"},{"command":"gitlens.showQuickFileHistory","when":"resource in gitlens:tabs:tracked"},{"command":"gitlens.showQuickRepoHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"false"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"false"},{"command":"gitlens.showQuickStashList","when":"gitlens:enabled"},{"command":"gitlens.showRemotesView","when":"gitlens:enabled"},{"command":"gitlens.showRepositoriesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showSearchAndCompareView","when":"gitlens:enabled"},{"command":"gitlens.showSettingsPage!branches-view","when":"false"},{"command":"gitlens.showSettingsPage!commit-graph","when":"false"},{"command":"gitlens.showSettingsPage!commits-view","when":"false"},{"command":"gitlens.showSettingsPage!contributors-view","when":"false"},{"command":"gitlens.showSettingsPage!file-annotations","when":"false"},{"command":"gitlens.showSettingsPage!file-history-view","when":"false"},{"command":"gitlens.showSettingsPage!line-history-view","when":"false"},{"command":"gitlens.showSettingsPage!remotes-view","when":"false"},{"command":"gitlens.showSettingsPage!repositories-view","when":"false"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"false"},{"command":"gitlens.showSettingsPage!stashes-view","when":"false"},{"command":"gitlens.showSettingsPage!tags-view","when":"false"},{"command":"gitlens.showSettingsPage!views","when":"false"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"false"},{"command":"gitlens.showStashesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showTagsView","when":"gitlens:enabled"},{"command":"gitlens.showTimelinePage","when":"gitlens:enabled"},{"command":"gitlens.showTimelineView","when":"gitlens:enabled"},{"command":"gitlens.showWorkspacesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.showWorktreesView","when":"gitlens:enabled && !gitlens:hasVirtualFolders"},{"command":"gitlens.startWork","when":"gitlens:enabled"},{"command":"gitlens.stashApply","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"},{"command":"gitlens.stashSaveFiles","when":"false"},{"command":"gitlens.switchAIModel","when":"gitlens:enabled && gitlens:gk:organization:ai:enabled"},{"command":"gitlens.switchMode","when":"gitlens:enabled"},{"command":"gitlens.timeline.refresh","when":"false"},{"command":"gitlens.timeline.split","when":"gitlens:enabled && config.gitlens.visualHistory.allowMultiple"},{"command":"gitlens.toggleCodeLens","when":"!gitlens:disabled && !gitlens:disabledToggleCodeLens"},{"command":"gitlens.toggleFileBlame","when":"resource in gitlens:tabs:blameable || config.gitlens.blame.toggleMode == window"},{"command":"gitlens.toggleFileBlameInDiffLeft","when":"false"},{"command":"gitlens.toggleFileBlameInDiffRight","when":"false"},{"command":"gitlens.toggleFileChanges","when":"(resource in gitlens:tabs:blameable  || config.gitlens.changes.toggleMode == window) && !gitlens:hasVirtualFolders"},{"command":"gitlens.toggleFileChangesOnly","when":"false"},{"command":"gitlens.toggleFileHeatmap","when":"resource in gitlens:tabs:blameable || config.gitlens.heatmap.toggleMode == window"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","when":"false"},{"command":"gitlens.toggleFileHeatmapInDiffRight","when":"false"},{"command":"gitlens.toggleGraph","when":"gitlens:enabled"},{"command":"gitlens.toggleLineBlame","when":"!gitlens:disabled"},{"command":"gitlens.toggleMaximizedGraph","when":"gitlens:enabled"},{"command":"gitlens.toggleReviewMode","when":"gitlens:enabled"},{"command":"gitlens.toggleZenMode","when":"gitlens:enabled"},{"command":"gitlens.views.abortPausedOperation","when":"false"},{"command":"gitlens.views.addAuthor","when":"false"},{"command":"gitlens.views.addAuthor.multi","when":"false"},{"command":"gitlens.views.addAuthors","when":"false"},{"command":"gitlens.views.addRemote","when":"false"},{"command":"gitlens.views.applyChanges","when":"false"},{"command":"gitlens.views.associateIssueWithBranch","when":"false"},{"command":"gitlens.views.branches.copy","when":"false"},{"command":"gitlens.views.branches.refresh","when":"false"},{"command":"gitlens.views.branches.regroup","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.branches.setLayoutToList","when":"false"},{"command":"gitlens.views.branches.setLayoutToTree","when":"false"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","when":"false"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","when":"false"},{"command":"gitlens.views.branches.setShowStashesOff","when":"false"},{"command":"gitlens.views.branches.setShowStashesOn","when":"false"},{"command":"gitlens.views.browseRepoAtRevision","when":"false"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","when":"false"},{"command":"gitlens.views.browseRepoBeforeRevision","when":"false"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","when":"false"},{"command":"gitlens.views.cherryPick","when":"false"},{"command":"gitlens.views.cherryPick.multi","when":"false"},{"command":"gitlens.views.clearComparison","when":"false"},{"command":"gitlens.views.clearReviewed","when":"false"},{"command":"gitlens.views.closeRepository","when":"false"},{"command":"gitlens.views.collapseNode","when":"false"},{"command":"gitlens.views.commitDetails.refresh","when":"false"},{"command":"gitlens.views.commits.copy","when":"false"},{"command":"gitlens.views.commits.refresh","when":"false"},{"command":"gitlens.views.commits.regroup","when":"false"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"false"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.commits.setShowStashesOff","when":"false"},{"command":"gitlens.views.commits.setShowStashesOn","when":"false"},{"command":"gitlens.views.compareAncestryWithWorking","when":"false"},{"command":"gitlens.views.compareBranchWithHead","when":"false"},{"command":"gitlens.views.compareFileWithSelected","when":"false"},{"command":"gitlens.views.compareWithHead","when":"false"},{"command":"gitlens.views.compareWithMergeBase","when":"false"},{"command":"gitlens.views.compareWithSelected","when":"false"},{"command":"gitlens.views.compareWithUpstream","when":"false"},{"command":"gitlens.views.compareWithWorking","when":"false"},{"command":"gitlens.views.continuePausedOperation","when":"false"},{"command":"gitlens.views.contributors.copy","when":"false"},{"command":"gitlens.views.contributors.refresh","when":"false"},{"command":"gitlens.views.contributors.regroup","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"false"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"false"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"false"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"false"},{"command":"gitlens.views.copy","when":"false"},{"command":"gitlens.views.copyAsMarkdown","when":"false"},{"command":"gitlens.views.copyRemoteCommitUrl","when":"false"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","when":"false"},{"command":"gitlens.views.copyUrl","when":"false"},{"command":"gitlens.views.copyUrl.multi","when":"false"},{"command":"gitlens.views.createBranch","when":"false"},{"command":"gitlens.views.createPullRequest","when":"false"},{"command":"gitlens.views.createTag","when":"false"},{"command":"gitlens.views.createWorktree","when":"false"},{"command":"gitlens.views.deleteBranch","when":"false"},{"command":"gitlens.views.deleteBranch.multi","when":"false"},{"command":"gitlens.views.deleteTag","when":"false"},{"command":"gitlens.views.deleteTag.multi","when":"false"},{"command":"gitlens.views.deleteWorktree","when":"false"},{"command":"gitlens.views.deleteWorktree.multi","when":"false"},{"command":"gitlens.views.dismissNode","when":"false"},{"command":"gitlens.views.draft.open","when":"false"},{"command":"gitlens.views.draft.openOnWeb","when":"false"},{"command":"gitlens.views.drafts.copy","when":"false"},{"command":"gitlens.views.drafts.create","when":"false"},{"command":"gitlens.views.drafts.delete","when":"false"},{"command":"gitlens.views.drafts.info","when":"false"},{"command":"gitlens.views.drafts.refresh","when":"false"},{"command":"gitlens.views.drafts.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.drafts.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.editNode","when":"false"},{"command":"gitlens.views.expandNode","when":"false"},{"command":"gitlens.views.fetch","when":"false"},{"command":"gitlens.views.fileHistory.changeBase","when":"false"},{"command":"gitlens.views.fileHistory.copy","when":"false"},{"command":"gitlens.views.fileHistory.refresh","when":"false"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","when":"false"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","when":"false"},{"command":"gitlens.views.graph.openInTab","when":"false"},{"command":"gitlens.views.graph.refresh","when":"false"},{"command":"gitlens.views.graphDetails.refresh","when":"false"},{"command":"gitlens.views.highlightChanges","when":"false"},{"command":"gitlens.views.highlightRevisionChanges","when":"false"},{"command":"gitlens.views.home.disablePreview","when":"false"},{"command":"gitlens.views.home.discussions","when":"false"},{"command":"gitlens.views.home.enablePreview","when":"false"},{"command":"gitlens.views.home.help","when":"false"},{"command":"gitlens.views.home.info","when":"false"},{"command":"gitlens.views.home.issues","when":"false"},{"command":"gitlens.views.home.previewFeedback","when":"false"},{"command":"gitlens.views.home.refresh","when":"false"},{"command":"gitlens.views.home.whatsNew","when":"false"},{"command":"gitlens.views.launchpad.copy","when":"false"},{"command":"gitlens.views.launchpad.info","when":"false"},{"command":"gitlens.views.launchpad.refresh","when":"false"},{"command":"gitlens.views.launchpad.regroup","when":"false"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.lineHistory.changeBase","when":"false"},{"command":"gitlens.views.lineHistory.copy","when":"false"},{"command":"gitlens.views.lineHistory.refresh","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.loadAllChildren","when":"false"},{"command":"gitlens.views.loadMoreChildren","when":"false"},{"command":"gitlens.views.mergeBranchInto","when":"false"},{"command":"gitlens.views.openBranchOnRemote","when":"false"},{"command":"gitlens.views.openBranchOnRemote.multi","when":"false"},{"command":"gitlens.views.openChangedFileDiffs","when":"false"},{"command":"gitlens.views.openChangedFileDiffsIndividually","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","when":"false"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","when":"false"},{"command":"gitlens.views.openChangedFileRevisions","when":"false"},{"command":"gitlens.views.openChangedFiles","when":"false"},{"command":"gitlens.views.openChanges","when":"false"},{"command":"gitlens.views.openChangesWithWorking","when":"false"},{"command":"gitlens.views.openCommitOnRemote","when":"false"},{"command":"gitlens.views.openCommitOnRemote.multi","when":"false"},{"command":"gitlens.views.openDirectoryDiff","when":"false"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"false"},{"command":"gitlens.views.openFile","when":"false"},{"command":"gitlens.views.openFileRevision","when":"false"},{"command":"gitlens.views.openInIntegratedTerminal","when":"false"},{"command":"gitlens.views.openInTerminal","when":"false"},{"command":"gitlens.views.openInWorktree","when":"false"},{"command":"gitlens.views.openOnlyChangedFiles","when":"false"},{"command":"gitlens.views.openPausedOperationInRebaseEditor","when":"false"},{"command":"gitlens.views.openPreviousChangesWithWorking","when":"false"},{"command":"gitlens.views.openPullRequest","when":"false"},{"command":"gitlens.views.openPullRequestChanges","when":"false"},{"command":"gitlens.views.openPullRequestComparison","when":"false"},{"command":"gitlens.views.openUrl","when":"false"},{"command":"gitlens.views.openUrl.multi","when":"false"},{"command":"gitlens.views.openWorktree","when":"false"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"false"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","when":"false"},{"command":"gitlens.views.patchDetails.close","when":"false"},{"command":"gitlens.views.patchDetails.refresh","when":"false"},{"command":"gitlens.views.pruneRemote","when":"false"},{"command":"gitlens.views.publishBranch","when":"false"},{"command":"gitlens.views.publishRepository","when":"false"},{"command":"gitlens.views.pull","when":"false"},{"command":"gitlens.views.pullRequest.close","when":"false"},{"command":"gitlens.views.pullRequest.copy","when":"false"},{"command":"gitlens.views.pullRequest.refresh","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.push","when":"false"},{"command":"gitlens.views.pushToCommit","when":"false"},{"command":"gitlens.views.pushWithForce","when":"false"},{"command":"gitlens.views.rebaseOntoBranch","when":"false"},{"command":"gitlens.views.rebaseOntoCommit","when":"false"},{"command":"gitlens.views.rebaseOntoUpstream","when":"false"},{"command":"gitlens.views.refreshNode","when":"false"},{"command":"gitlens.views.remotes.copy","when":"false"},{"command":"gitlens.views.remotes.refresh","when":"false"},{"command":"gitlens.views.remotes.regroup","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.remotes.setLayoutToList","when":"false"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"false"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.removeRemote","when":"false"},{"command":"gitlens.views.renameBranch","when":"false"},{"command":"gitlens.views.repositories.copy","when":"false"},{"command":"gitlens.views.repositories.refresh","when":"false"},{"command":"gitlens.views.repositories.regroup","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"false"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.repositories.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.repositories.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.repositories.setShowBranchesOff","when":"false"},{"command":"gitlens.views.repositories.setShowBranchesOn","when":"false"},{"command":"gitlens.views.repositories.setShowCommitsOff","when":"false"},{"command":"gitlens.views.repositories.setShowCommitsOn","when":"false"},{"command":"gitlens.views.repositories.setShowContributorsOff","when":"false"},{"command":"gitlens.views.repositories.setShowContributorsOn","when":"false"},{"command":"gitlens.views.repositories.setShowRemotesOff","when":"false"},{"command":"gitlens.views.repositories.setShowRemotesOn","when":"false"},{"command":"gitlens.views.repositories.setShowSectionOff","when":"false"},{"command":"gitlens.views.repositories.setShowStashesOff","when":"false"},{"command":"gitlens.views.repositories.setShowStashesOn","when":"false"},{"command":"gitlens.views.repositories.setShowTagsOff","when":"false"},{"command":"gitlens.views.repositories.setShowTagsOn","when":"false"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","when":"false"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","when":"false"},{"command":"gitlens.views.repositories.setShowWorktreesOff","when":"false"},{"command":"gitlens.views.repositories.setShowWorktreesOn","when":"false"},{"command":"gitlens.views.resetCommit","when":"false"},{"command":"gitlens.views.resetToCommit","when":"false"},{"command":"gitlens.views.resetToTip","when":"false"},{"command":"gitlens.views.restore","when":"false"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"false"},{"command":"gitlens.views.revealWorktreeInExplorer","when":"false"},{"command":"gitlens.views.revert","when":"false"},{"command":"gitlens.views.scm.grouped.branches","when":"false"},{"command":"gitlens.views.scm.grouped.branches.detach","when":"false"},{"command":"gitlens.views.scm.grouped.branches.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.branches.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.commits","when":"false"},{"command":"gitlens.views.scm.grouped.commits.detach","when":"false"},{"command":"gitlens.views.scm.grouped.commits.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.commits.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.contributors","when":"false"},{"command":"gitlens.views.scm.grouped.contributors.detach","when":"false"},{"command":"gitlens.views.scm.grouped.contributors.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.contributors.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.detachAll","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad.detach","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.launchpad.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.refresh","when":"false"},{"command":"gitlens.views.scm.grouped.regroupAll","when":"false"},{"command":"gitlens.views.scm.grouped.remotes","when":"false"},{"command":"gitlens.views.scm.grouped.remotes.detach","when":"false"},{"command":"gitlens.views.scm.grouped.remotes.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.remotes.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.repositories","when":"false"},{"command":"gitlens.views.scm.grouped.repositories.detach","when":"false"},{"command":"gitlens.views.scm.grouped.repositories.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.repositories.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.searchAndCompare.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.stashes","when":"false"},{"command":"gitlens.views.scm.grouped.stashes.detach","when":"false"},{"command":"gitlens.views.scm.grouped.stashes.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.stashes.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.tags","when":"false"},{"command":"gitlens.views.scm.grouped.tags.detach","when":"false"},{"command":"gitlens.views.scm.grouped.tags.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.tags.setAsDefault","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees.detach","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees.regroup","when":"false"},{"command":"gitlens.views.scm.grouped.worktrees.setAsDefault","when":"false"},{"command":"gitlens.views.searchAndCompare.clear","when":"false"},{"command":"gitlens.views.searchAndCompare.copy","when":"false"},{"command":"gitlens.views.searchAndCompare.refresh","when":"false"},{"command":"gitlens.views.searchAndCompare.regroup","when":"false"},{"command":"gitlens.views.searchAndCompare.searchCommits","when":"false"},{"command":"gitlens.views.searchAndCompare.selectForCompare","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"false"},{"command":"gitlens.views.selectFileForCompare","when":"false"},{"command":"gitlens.views.selectForCompare","when":"false"},{"command":"gitlens.views.setAsDefault","when":"false"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"false"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"false"},{"command":"gitlens.views.setContributorsStatisticsOff","when":"false"},{"command":"gitlens.views.setContributorsStatisticsOn","when":"false"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","when":"false"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"false"},{"command":"gitlens.views.setResultsFilesFilterOff","when":"false"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","when":"false"},{"command":"gitlens.views.setResultsFilesFilterOnRight","when":"false"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"false"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"false"},{"command":"gitlens.views.skipPausedOperation","when":"false"},{"command":"gitlens.views.stageDirectory","when":"false"},{"command":"gitlens.views.stageFile","when":"false"},{"command":"gitlens.views.star","when":"false"},{"command":"gitlens.views.star.multi","when":"false"},{"command":"gitlens.views.stash.apply","when":"false"},{"command":"gitlens.views.stash.delete","when":"false"},{"command":"gitlens.views.stash.delete.multi","when":"false"},{"command":"gitlens.views.stash.rename","when":"false"},{"command":"gitlens.views.stashes.copy","when":"false"},{"command":"gitlens.views.stashes.refresh","when":"false"},{"command":"gitlens.views.stashes.regroup","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.switchToAnotherBranch","when":"false"},{"command":"gitlens.views.switchToBranch","when":"false"},{"command":"gitlens.views.switchToCommit","when":"false"},{"command":"gitlens.views.switchToTag","when":"false"},{"command":"gitlens.views.tags.copy","when":"false"},{"command":"gitlens.views.tags.refresh","when":"false"},{"command":"gitlens.views.tags.regroup","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.tags.setLayoutToList","when":"false"},{"command":"gitlens.views.tags.setLayoutToTree","when":"false"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.timeline.refresh","when":"false"},{"command":"gitlens.views.title.createBranch","when":"false"},{"command":"gitlens.views.title.createTag","when":"false"},{"command":"gitlens.views.title.createWorktree","when":"false"},{"command":"gitlens.views.undoCommit","when":"false"},{"command":"gitlens.views.unsetAsDefault","when":"false"},{"command":"gitlens.views.unstageDirectory","when":"false"},{"command":"gitlens.views.unstageFile","when":"false"},{"command":"gitlens.views.unstar","when":"false"},{"command":"gitlens.views.unstar.multi","when":"false"},{"command":"gitlens.views.workspaces.addRepos","when":"false"},{"command":"gitlens.views.workspaces.addReposFromLinked","when":"false"},{"command":"gitlens.views.workspaces.changeAutoAddSetting","when":"false"},{"command":"gitlens.views.workspaces.convert","when":"false"},{"command":"gitlens.views.workspaces.copy","when":"false"},{"command":"gitlens.views.workspaces.create","when":"gitlens:plus"},{"command":"gitlens.views.workspaces.createLocal","when":"false"},{"command":"gitlens.views.workspaces.delete","when":"false"},{"command":"gitlens.views.workspaces.info","when":"false"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"false"},{"command":"gitlens.views.workspaces.openLocal","when":"false"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"false"},{"command":"gitlens.views.workspaces.refresh","when":"false"},{"command":"gitlens.views.workspaces.repo.addToWindow","when":"false"},{"command":"gitlens.views.workspaces.repo.locate","when":"false"},{"command":"gitlens.views.workspaces.repo.open","when":"false"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"false"},{"command":"gitlens.views.workspaces.repo.remove","when":"false"},{"command":"gitlens.views.worktrees.copy","when":"false"},{"command":"gitlens.views.worktrees.refresh","when":"false"},{"command":"gitlens.views.worktrees.regroup","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"false"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"false"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"false"},{"command":"gitlens.views.worktrees.setShowStashesOff","when":"false"},{"command":"gitlens.views.worktrees.setShowStashesOn","when":"false"}],"editor/context":[{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens && editorTextFocus && config.gitlens.menus.editor.compare","group":"1_z_gitlens@0"},{"submenu":"gitlens/editor/context/changes","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.compare","group":"1_z_gitlens_open@1"},{"submenu":"gitlens/editor/context/openOn","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.remote && gitlens:repos:withRemotes","group":"1_z_gitlens_open@2"},{"submenu":"gitlens/editor/annotations","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:blameable && editorTextFocus && config.gitlens.menus.editor.blame","group":"1_z_gitlens_open_file@1"},{"submenu":"gitlens/editor/history","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && config.gitlens.menus.editor.history","group":"1_z_gitlens_open_file@2"}],"editor/context/copy":[{"command":"gitlens.copyRelativePathToClipboard","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens@1"},{"command":"gitlens.copyDeepLinkToLines","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard && editorHasSelection","group":"1_gitlens@2"},{"command":"gitlens.copyDeepLinkToFile","when":"resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens@3"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens@4"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens_remote@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens_remote@2"},{"command":"gitlens.copyRemoteCommitUrl","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"1_gitlens_remote@3"},{"command":"gitlens.copyShaToClipboard","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"3_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard","group":"3_gitlens@2"}],"editor/lineNumber/context":[{"submenu":"gitlens/editor/lineNumber/context/share","when":"resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.share && gitlens:repos:withRemotes","group":"2_gitlens@2"},{"submenu":"gitlens/editor/lineNumber/context/changes","when":"resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.compare","group":"3_gitlens@1"},{"submenu":"gitlens/editor/lineNumber/context/openOn","when":"resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.remote && gitlens:repos:withRemotes","group":"3_gitlens@2"}],"editor/title":[{"command":"gitlens.graph.refresh","when":"activeWebviewPanelId === gitlens.graph","group":"navigation@-99"},{"command":"gitlens.timeline.refresh","when":"activeWebviewPanelId === gitlens.timeline","group":"navigation@-99"},{"submenu":"gitlens/graph/configuration","when":"activeWebviewPanelId === gitlens.graph","group":"navigation@-98"},{"command":"gitlens.graph.split","when":"activeWebviewPanelId == gitlens.graph && resourceScheme == webview-panel && config.gitlens.graph.allowMultiple","group":"navigation@-97"},{"command":"gitlens.timeline.split","when":"activeWebviewPanelId == gitlens.timeline && resourceScheme == webview-panel && config.gitlens.visualHistory.allowMultiple","group":"navigation@-97"},{"command":"gitlens.clearFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated == computed || (resource in gitlens:tabs:annotated && resource not in gitlens:tabs:annotated:computing)) && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.computingFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated == computing || resource in gitlens:tabs:annotated:computing) && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.toggleFileBlame","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == blame","group":"navigation@100","alt":"gitlens.toggleFileHeatmap"},{"command":"gitlens.toggleFileChanges","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == changes && !gitlens:hasVirtualFolders","group":"navigation@100","alt":"gitlens.toggleFileBlame"},{"command":"gitlens.toggleFileHeatmap","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == heatmap","group":"navigation@100","alt":"gitlens.toggleFileBlame"},{"submenu":"gitlens/editor/annotations","when":"resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && !config.gitlens.fileAnnotations.command && !gitlens:window:annotated","group":"navigation@100"},{"command":"gitlens.diffWithPrevious","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@97","alt":"gitlens.diffWithRevision"},{"command":"gitlens.diffWithPreviousInDiffLeft","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@97","alt":"gitlens.diffWithRevision"},{"command":"gitlens.diffWithPreviousInDiffRight","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@97","alt":"gitlens.diffWithRevision"},{"command":"gitlens.showQuickRevisionDetails","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@98"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@98"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@98"},{"command":"gitlens.diffWithNext","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiffLeft","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiffRight","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor","group":"navigation@99"},{"command":"gitlens.openWorkingFile","when":"resourceScheme == git && gitlens:enabled && !isInDiffEditor","group":"navigation@-98"},{"command":"gitlens.diffWithWorking","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && !isInDiffEditor","group":"navigation@-99"},{"command":"gitlens.diffWithWorkingInDiffLeft","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-99"},{"command":"gitlens.diffWithWorkingInDiffRight","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"navigation@-99"},{"command":"gitlens.openWorkingFile","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && !isInDiffEditor","group":"navigation@-98"},{"command":"gitlens.openWorkingFileInDiffLeft","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-98"},{"command":"gitlens.openWorkingFileInDiffRight","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"navigation@-98"},{"command":"gitlens.openRevisionFileInDiffLeft","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"navigation@-97"},{"command":"gitlens.openRevisionFileInDiffRight","when":"resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"navigation@-97"},{"command":"gitlens.openPatch","when":"false && editorLangId == diff"}],"editor/title/context":[{"command":"gitlens.graph.split","when":"activeWebviewPanelId == gitlens.graph && resourceScheme == webview-panel && config.gitlens.graph.allowMultiple","group":"6_split_in_group_gitlens@2"},{"command":"gitlens.timeline.split","when":"activeWebviewPanelId == gitlens.timeline && resourceScheme == webview-panel && config.gitlens.visualHistory.allowMultiple","group":"6_split_in_group_gitlens@2"},{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens && resourceScheme in gitlens:schemes:trackable","group":"2_a_gitlens@0"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.clipboard && gitlens:repos:withRemotes","group":"1_cutcopypaste@100"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.clipboard && gitlens:repos:withRemotes","group":"1_cutcopypaste@101"},{"submenu":"gitlens/editor/changes","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"2_a_gitlens_open@1"},{"submenu":"gitlens/editor/openOn","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.remote && gitlens:repos:withRemotes","group":"2_a_gitlens_open@2"},{"submenu":"gitlens/editor/history","when":"resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.history","group":"2_a_gitlens_open_file@1"}],"explorer/context":[{"submenu":"gitlens/explorer/changes","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"4_t_gitlens@0"},{"submenu":"gitlens/explorer/openOn","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.remote && gitlens:repos:withRemotes","group":"4_t_gitlens@1"},{"submenu":"gitlens/explorer/file/history","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_timeline@0"},{"submenu":"gitlens/explorer/folder/history","when":"(explorerResourceIsRoot || explorerResourceIsFolder) && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_timeline@0"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.clipboard && gitlens:repos:withRemotes","group":"6_copypath@100"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.clipboard && gitlens:repos:withRemotes","group":"6_copypath@101"}],"extension/context":[{"command":"gitlens.getStarted","when":"extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed","group":"9_gitlens@1"},{"command":"gitlens.showSettingsPage","when":"extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed","group":"9_gitlens@3"}],"git.commit":[{"command":"gitlens.addAuthors","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && config.gitlens.menus.scmRepository.authors","group":"4_gitlens@1"},{"command":"gitlens.copyPatchToClipboard","when":"gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch","group":"4_gitlens@2"},{"command":"gitlens.shareAsCloudPatch","when":"gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch","group":"4_gitlens@3"},{"command":"gitlens.scm.generateCommitMessage","when":"gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:ai:enabled && config.gitlens.ai.generateCommitMessage.enabled && config.gitlens.menus.scmRepository.generateCommitMessage","group":"4_gitlens@4"}],"gitlens/commit/browse":[{"command":"gitlens.views.browseRepoAtRevision","group":"1_gitlens@1"},{"command":"gitlens.views.browseRepoBeforeRevision","group":"1_gitlens@2"},{"command":"gitlens.views.browseRepoAtRevisionInNewWindow","group":"1_gitlens@3"},{"command":"gitlens.views.browseRepoBeforeRevisionInNewWindow","group":"1_gitlens@4"}],"gitlens/commit/changes":[{"command":"gitlens.views.openChangedFileDiffs","group":"1_gitlens@1"},{"command":"gitlens.views.openChangedFileDiffsIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@2"},{"command":"gitlens.views.openChangedFileDiffsWithWorking","group":"1_gitlens@3"},{"command":"gitlens.views.openChangedFileDiffsWithWorkingIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@4"},{"command":"gitlens.views.openChangedFiles","group":"2_gitlens@1"},{"command":"gitlens.views.openChangedFileRevisions","group":"2_gitlens@2"},{"command":"gitlens.views.openOnlyChangedFiles","group":"2_gitlens@3"}],"gitlens/commit/copy":[{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/","group":"1_gitlens@2"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/","group":"1_gitlens@3"},{"command":"gitlens.copyRemoteBranchUrl","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/","group":"1_gitlens@4"}],"gitlens/commit/file/changes":[{"command":"gitlens.views.openPreviousChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|stashed|staged|unstaged)\\b)/","group":"1_gitlens@1"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"1_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"1_gitlens@4"},{"command":"gitlens.externalDiff","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_@1"},{"command":"gitlens.views.highlightChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/","group":"2_gitlens@1"},{"command":"gitlens.views.highlightRevisionChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/","group":"2_gitlens@2"}],"gitlens/commit/file/commit":[{"command":"gitlens.showInDetailsView","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/","group":"navigation@1"},{"command":"gitlens.showInCommitGraph","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)\\b/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/","group":"navigation@2"},{"command":"gitlens.views.openCommitOnRemote","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && gitlens:repos:withRemotes","group":"navigation@3","alt":"gitlens.copyRemoteCommitUrl"},{"command":"gitlens.revealCommitInView","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/","group":"navigation@4"},{"command":"gitlens.views.undoCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+HEAD\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@0"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.revert","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.resetToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.views.resetCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.views.rebaseOntoCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@6"},{"command":"gitlens.views.switchToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.createPatch","when":"false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.createCloudPatch","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && config.gitlens.cloudPatches.enabled && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_secondary_actions@3"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@4"}],"gitlens/commit/file/history":[{"command":"gitlens.openFileHistory","when":"view != gitlens.views.fileHistory/","group":"1_gitlens@1"},{"command":"gitlens.showFileInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/comparison/results/files/filter":[{"command":"gitlens.views.setResultsFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.setResultsFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/comparison/results/files/filter/inline":[{"command":"gitlens.views.setResultsFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.setResultsFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/comparison/results/files/filtered":[{"command":"gitlens.views.setResultsFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.setResultsFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/comparison/results/files/filtered/inline":[{"command":"gitlens.views.setResultsFilesFilterOff","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/","group":"navigation@1"},{"command":"gitlens.views.setResultsFilesFilterOnLeft","group":"navigation_1@1"},{"command":"gitlens.views.setResultsFilesFilterOnRight","group":"navigation_1@2"}],"gitlens/editor/annotations":[{"command":"gitlens.clearFileAnnotations","when":"resource in gitlens:tabs:blameable && (gitlens:window:annotated || resource in gitlens:tabs:annotated)","group":"1_gitlens@1"},{"command":"gitlens.toggleFileBlame","when":"resource in gitlens:tabs:blameable && !isInDiffEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileBlameInDiffLeft","when":"resource in gitlens:tabs:blameable && isInDiffEditor && !isInDiffRightEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileBlameInDiffRight","when":"resource in gitlens:tabs:blameable && isInDiffRightEditor","group":"2_gitlens@1"},{"command":"gitlens.toggleFileHeatmap","when":"resource in gitlens:tabs:blameable && !isInDiffEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileHeatmapInDiffLeft","when":"resource in gitlens:tabs:blameable && isInDiffEditor && !isInDiffRightEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileHeatmapInDiffRight","when":"resource in gitlens:tabs:blameable && isInDiffRightEditor","group":"2_gitlens@2"},{"command":"gitlens.toggleFileChanges","when":"resource in gitlens:tabs:blameable && !gitlens:hasVirtualFolders","group":"2_gitlens@3"},{"command":"gitlens.showSettingsPage!file-annotations","when":"resource in gitlens:tabs:blameable","group":"8_gitlens@1"}],"gitlens/editor/changes":[{"command":"gitlens.diffWithPrevious","group":"1_gitlens@1"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"1_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"1_gitlens@4"}],"gitlens/editor/context/changes":[{"command":"gitlens.diffLineWithPrevious","when":"resource in gitlens:tabs:tracked && editorTextFocus","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","when":"resource in gitlens:tabs:tracked && editorTextFocus","group":"1_gitlens@2"},{"command":"gitlens.diffWithPrevious","group":"2_gitlens@1"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens","group":"2_gitlens@2"},{"command":"gitlens.diffWithRevision","group":"2_gitlens@3"},{"command":"gitlens.diffWithRevisionFrom","group":"2_gitlens@4"},{"command":"gitlens.showQuickCommitFileDetails","group":"3_gitlens@1"},{"command":"gitlens.showCommitsInView","when":"editorTextFocus && editorHasSelection","group":"3_gitlens@2"},{"command":"gitlens.showLineCommitInView","group":"3_gitlens@2"},{"command":"gitlens.showQuickRevisionDetails","when":"resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && !isInDiffEditor","group":"3_gitlens_1@1"},{"command":"gitlens.showQuickRevisionDetailsInDiffLeft","when":"resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor","group":"3_gitlens_1@1"},{"command":"gitlens.showQuickRevisionDetailsInDiffRight","when":"resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && isInDiffRightEditor","group":"3_gitlens_1@1"}],"gitlens/editor/context/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@3","alt":"gitlens.copyRemoteFileUrlFrom"},{"command":"gitlens.openCommitOnRemote","group":"1_gitlens_commit@1","alt":"gitlens.copyRemoteCommitUrl"}],"gitlens/editor/history":[{"command":"gitlens.openFileHistory","group":"1_gitlens@1"},{"command":"gitlens.showFileInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/editor/lineNumber/context/changes":[{"command":"gitlens.diffLineWithPrevious","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","group":"1_gitlens@2"},{"command":"gitlens.showQuickCommitFileDetails","group":"3_gitlens@1"},{"command":"gitlens.showLineCommitInView","group":"3_gitlens@2"}],"gitlens/editor/lineNumber/context/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@3","alt":"gitlens.copyRemoteFileUrlFrom"},{"command":"gitlens.openCommitOnRemote","group":"1_gitlens_commit@1","alt":"gitlens.copyRemoteCommitUrl"}],"gitlens/editor/lineNumber/context/share":[{"command":"gitlens.copyDeepLinkToLines","group":"1_gitlens@1"},{"command":"gitlens.copyDeepLinkToFile","group":"1_gitlens@2"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"resource in gitlens:tabs:tracked","group":"1_gitlens@3"},{"command":"gitlens.copyRemoteFileUrlToClipboard","group":"1_gitlens_remote@2"},{"command":"gitlens.copyRemoteFileUrlFrom","group":"1_gitlens_remote@3"},{"command":"gitlens.copyRemoteCommitUrl","group":"1_gitlens_remote_commit@1"}],"gitlens/editor/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/explorer/changes":[{"command":"gitlens.diffFolderWithRevision","when":"explorerResourceIsFolder && !gitlens:hasVirtualFolders","group":"1_gitlens@1"},{"command":"gitlens.diffWithPrevious","when":"!explorerResourceIsFolder","group":"1_gitlens@1"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"explorerResourceIsFolder && !gitlens:hasVirtualFolders","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevision","when":"!explorerResourceIsFolder","group":"1_gitlens@2"},{"command":"gitlens.diffWithRevisionFrom","when":"!explorerResourceIsFolder","group":"1_gitlens@3"}],"gitlens/explorer/file/history":[{"command":"gitlens.openFileHistory","group":"1_gitlens@1"},{"command":"gitlens.showFileInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/explorer/folder/history":[{"command":"gitlens.openFolderHistory","group":"1_gitlens@1"},{"command":"gitlens.showFolderInTimeline","group":"1_gitlens@2"}],"gitlens/explorer/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/graph/commit/changes":[{"command":"gitlens.graph.openChangedFileDiffs","group":"1_gitlens@1"},{"command":"gitlens.graph.openChangedFileDiffsIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@2"},{"command":"gitlens.graph.openChangedFileDiffsWithWorking","when":"webviewItem != gitlens:wip","group":"1_gitlens@3"},{"command":"gitlens.graph.openChangedFileDiffsWithWorkingIndividually","when":"config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled","group":"1_gitlens@4"},{"command":"gitlens.graph.openChangedFiles","group":"2_gitlens@1"},{"command":"gitlens.graph.openChangedFileRevisions","group":"2_gitlens@2"},{"command":"gitlens.graph.openOnlyChangedFiles","group":"2_gitlens@3"}],"gitlens/graph/configuration":[{"command":"gitlens.graph.switchToEditorLayout","group":"1_gitlens@1"},{"command":"gitlens.graph.switchToPanelLayout","group":"1_gitlens@1"},{"command":"gitlens.showSettingsPage!commit-graph","group":"9_gitlens@1"}],"gitlens/graph/markers":[{"command":"gitlens.graph.scrollMarkerLocalBranchOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:enabled\\b/","group":"4_settings@1"},{"command":"gitlens.graph.scrollMarkerLocalBranchOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:disabled\\b/","group":"4_settings@1"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:enabled\\b/","group":"4_settings@2"},{"command":"gitlens.graph.scrollMarkerRemoteBranchOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:disabled\\b/","group":"4_settings@2"},{"command":"gitlens.graph.scrollMarkerPullRequestOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:pullRequests:enabled\\b/","group":"4_settings@3"},{"command":"gitlens.graph.scrollMarkerPullRequestOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:pullRequests:disabled\\b/","group":"4_settings@3"},{"command":"gitlens.graph.scrollMarkerStashOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:enabled\\b/","group":"4_settings@4"},{"command":"gitlens.graph.scrollMarkerStashOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:disabled\\b/","group":"4_settings@4"},{"command":"gitlens.graph.scrollMarkerTagOff","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:enabled\\b/","group":"4_settings@5"},{"command":"gitlens.graph.scrollMarkerTagOn","when":"webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:disabled\\b/","group":"4_settings@5"}],"gitlens/scm/resourceFolder/changes":[{"command":"gitlens.diffFolderWithRevision","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@1"},{"command":"gitlens.diffFolderWithRevisionFrom","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@2"}],"gitlens/scm/resourceFolder/history":[{"command":"gitlens.openFolderHistory","group":"1_gitlens@2"},{"command":"gitlens.showFolderInTimeline","group":"1_gitlens@2"}],"gitlens/scm/resourceGroup/changes":[{"command":"gitlens.externalDiffAll","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders","group":"2_gitlens@1"},{"command":"gitlens.diffDirectoryWithHead","when":"!gitlens:hasVirtualFolders","group":"2_gitlens@2"},{"command":"gitlens.diffDirectory","when":"!gitlens:hasVirtualFolders","group":"2_gitlens@3"}],"gitlens/scm/resourceState/changes":[{"command":"gitlens.diffWithRevision","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@1"},{"command":"gitlens.diffWithRevisionFrom","when":"!gitlens:hasVirtualFolders","group":"1_gitlens@2"},{"command":"gitlens.externalDiff","when":"!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders","group":"2_gitlens@1"}],"gitlens/scm/resourceState/history":[{"command":"gitlens.openFileHistory","group":"1_gitlens@1"},{"command":"gitlens.showFileInTimeline","group":"1_gitlens@2"},{"command":"gitlens.quickOpenFileHistory","group":"1_gitlens_quick@1"}],"gitlens/scm/resourceState/openOn":[{"command":"gitlens.openFileOnRemote","group":"1_gitlens@1","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.openFileOnRemoteFrom","group":"1_gitlens@2","alt":"gitlens.copyRemoteFileUrlFrom"}],"gitlens/share":[{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && !listMultiSelection && gitlens:enabled && gitlens:repos:withRemotes","group":"2_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && !listMultiSelection && gitlens:enabled && gitlens:repos:withRemotes","group":"2_gitlens@2"},{"command":"gitlens.copyDeepLinkToBranch","when":"viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|status:upstream(?!:none))\\b/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.copyDeepLinkToRepo","when":"viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|remote|repo-folder|repository|status:upstream(?!:none))\\b/ && !listMultiSelection","group":"1_gitlens@99"},{"command":"gitlens.copyRemoteBranchUrl","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@50"},{"command":"gitlens.shareAsCloudPatch","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b)|stash|compare:results(?!:))\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_a_gitlens@1"},{"command":"gitlens.copyDeepLinkToCommit","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.views.copyRemoteCommitUrl","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"},{"command":"gitlens.views.copyRemoteCommitUrl.multi","when":"viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"},{"command":"gitlens.copyDeepLinkToComparison","when":"viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.copyRemoteComparisonUrl","when":"viewItem =~ /gitlens:compare:(results(:commits|(?!:))|branch\\b(?=.*?\\b\\+comparing\\b))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@50"},{"command":"gitlens.copyDeepLinkToFile","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"1_gitlens@26"},{"command":"gitlens.copyDeepLinkToFileAtRevision","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"1_gitlens@27"},{"command":"gitlens.copyRemoteFileUrlWithoutRange","when":"viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@2"},{"command":"gitlens.copyRemoteRepositoryUrl","when":"viewItem =~ /gitlens:(remote|repo-folder|repository)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@99"},{"command":"gitlens.copyDeepLinkToTag","when":"viewItem =~ /gitlens:tag\\b/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.copyDeepLinkToWorkspace","when":"viewItem =~ /gitlens:workspace\\b/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.graph.copyDeepLinkToBranch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.graph.copyDeepLinkToRepo","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection","group":"1_gitlens@99"},{"command":"gitlens.graph.copyRemoteBranchUrl","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@50"},{"command":"gitlens.graph.shareAsCloudPatch","when":"webviewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_a_gitlens@1"},{"command":"gitlens.graph.copyDeepLinkToCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection","group":"1_gitlens@25"},{"command":"gitlens.graph.copyRemoteCommitUrl","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"},{"command":"gitlens.graph.copyDeepLinkToTag","when":"webviewItem =~ /gitlens:tag\\b/ && !listMultiSelection","group":"1_gitlens@50"},{"command":"gitlens.graph.copyRemoteCommitUrl.multi","when":"webviewItems =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens@25"}],"gitlens/view/repositories/sections":[{"command":"gitlens.views.repositories.setShowBranchComparisonOff","when":"config.gitlens.views.repositories.showBranchComparison","group":"1_gitlens@0"},{"command":"gitlens.views.repositories.setShowBranchComparisonOn","when":"!config.gitlens.views.repositories.showBranchComparison","group":"1_gitlens@0"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOff","when":"config.gitlens.views.repositories.showUpstreamStatus","group":"1_gitlens@1"},{"command":"gitlens.views.repositories.setShowUpstreamStatusOn","when":"!config.gitlens.views.repositories.showUpstreamStatus","group":"1_gitlens@1"},{"command":"gitlens.views.repositories.setShowCommitsOff","when":"config.gitlens.views.repositories.showCommits","group":"2_gitlens@2"},{"command":"gitlens.views.repositories.setShowCommitsOn","when":"!config.gitlens.views.repositories.showCommits","group":"2_gitlens@2"},{"command":"gitlens.views.repositories.setShowBranchesOff","when":"config.gitlens.views.repositories.showBranches","group":"2_gitlens@3"},{"command":"gitlens.views.repositories.setShowBranchesOn","when":"!config.gitlens.views.repositories.showBranches","group":"2_gitlens@3"},{"command":"gitlens.views.repositories.setShowRemotesOff","when":"config.gitlens.views.repositories.showRemotes","group":"2_gitlens@4"},{"command":"gitlens.views.repositories.setShowRemotesOn","when":"!config.gitlens.views.repositories.showRemotes","group":"2_gitlens@4"},{"command":"gitlens.views.repositories.setShowStashesOff","when":"config.gitlens.views.repositories.showStashes && !gitlens:hasVirtualFolders","group":"2_gitlens@5"},{"command":"gitlens.views.repositories.setShowStashesOn","when":"!config.gitlens.views.repositories.showStashes && !gitlens:hasVirtualFolders","group":"2_gitlens@5"},{"command":"gitlens.views.repositories.setShowTagsOff","when":"config.gitlens.views.repositories.showTags","group":"2_gitlens@6"},{"command":"gitlens.views.repositories.setShowTagsOn","when":"!config.gitlens.views.repositories.showTags","group":"2_gitlens@6"},{"command":"gitlens.views.repositories.setShowWorktreesOff","when":"config.gitlens.views.repositories.showWorktrees","group":"2_gitlens@7"},{"command":"gitlens.views.repositories.setShowWorktreesOn","when":"!config.gitlens.views.repositories.showWorktrees","group":"2_gitlens@7"},{"command":"gitlens.views.repositories.setShowContributorsOff","when":"config.gitlens.views.repositories.showContributors","group":"2_gitlens@8"},{"command":"gitlens.views.repositories.setShowContributorsOn","when":"!config.gitlens.views.repositories.showContributors","group":"2_gitlens@8"}],"gitlens/view/searchAndCompare/new":[{"command":"gitlens.views.searchAndCompare.searchCommits","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"navigation@10"},{"command":"gitlens.views.searchAndCompare.selectForCompare","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"navigation@11"}],"gitlens/views/grouped/branches":[{"command":"gitlens.views.switchToAnotherBranch","when":"gitlens:views:scm:grouped:view == branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"3_gitlens@1"},{"command":"gitlens.views.title.createBranch","when":"gitlens:views:scm:grouped:view == branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"3_gitlens@2"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == branches","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.branches.setAsDefault","when":"gitlens:views:scm:grouped:view == branches && config.gitlens.views.scm.grouped.default != branches","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.branches.detach","when":"gitlens:views:scm:grouped:view == branches","group":"9_gitlens@3"}],"gitlens/views/grouped/commits":[{"command":"gitlens.pushRepositories","when":"gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"command":"gitlens.pullRepositories","when":"gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@2"},{"command":"gitlens.fetchRepositories","when":"gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@3"},{"command":"gitlens.views.switchToAnotherBranch","when":"gitlens:views:scm:grouped:view == commits && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions_@0"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"gitlens:views:scm:grouped:view == commits && gitlens:views:commits:filtered","group":"8_gitlens_@0"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"gitlens:views:scm:grouped:view == commits","group":"8_gitlens_@1"},{"command":"gitlens.showGraph","when":"gitlens:views:scm:grouped:view == commits && gitlens:plus:enabled","group":"8_gitlens_toggles@0"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == commits","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.commits.setAsDefault","when":"gitlens:views:scm:grouped:view == commits && config.gitlens.views.scm.grouped.default != commits","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.commits.detach","when":"gitlens:views:scm:grouped:view == commits","group":"9_gitlens@3"}],"gitlens/views/grouped/contributors":[{"command":"gitlens.views.addAuthors","when":"gitlens:views:scm:grouped:view == contributors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == contributors","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.contributors.setAsDefault","when":"gitlens:views:scm:grouped:view == contributors && config.gitlens.views.scm.grouped.default != contributors","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.contributors.detach","when":"gitlens:views:scm:grouped:view == contributors","group":"9_gitlens@3"}],"gitlens/views/grouped/launchpad":[{"command":"gitlens.views.launchpad.info","when":"gitlens:views:scm:grouped:view == launchpad","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == launchpad","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.launchpad.setAsDefault","when":"gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.scm.grouped.default != launchpad","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.launchpad.detach","when":"gitlens:views:scm:grouped:view == launchpad","group":"9_gitlens@3"}],"gitlens/views/grouped/more":[{"command":"gitlens.views.branches.setLayoutToList","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.branches.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setLayoutToTree","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.branches.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.branches.setShowStashesOff","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.branches.setShowStashesOn","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.showSettingsPage!branches-view","when":"gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !gitlens:views:commits:hideMergeCommits","group":"5_gitlens@5"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && gitlens:views:commits:hideMergeCommits","group":"5_gitlens@5"},{"command":"gitlens.views.commits.setShowStashesOff","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.commits.setShowStashesOn","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.showSettingsPage!commits-view","when":"gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@3"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@3"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.showStatistics","group":"5_gitlens@4"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.contributors.showStatistics","group":"5_gitlens@4"},{"command":"gitlens.showSettingsPage!contributors-view","when":"gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && !config.gitlens.views.launchpad.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.remotes.setLayoutToList","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.branches.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.branches.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && !config.gitlens.views.remotes.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"command":"gitlens.showSettingsPage!remotes-view","when":"gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens@1"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens@1"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.files.layout == list","group":"3_gitlens@1"},{"submenu":"gitlens/view/repositories/sections","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped","group":"4_gitlens@1"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && !config.gitlens.views.repositories.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.showSettingsPage!repositories-view","when":"gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && !config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@1"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped && config.gitlens.views.stashes.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped && config.gitlens.views.stashes.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped && config.gitlens.views.stashes.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.showSettingsPage!stashes-view","when":"gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.tags.setLayoutToList","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.branches.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setLayoutToTree","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.branches.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && !config.gitlens.views.tags.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.showSettingsPage!tags-view","when":"gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped","group":"9_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.worktrees.setShowStashesOff","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.worktrees.setShowStashesOn","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped","group":"9_gitlens@1"}],"gitlens/views/grouped/remotes":[{"command":"gitlens.views.addRemote","when":"gitlens:views:scm:grouped:view == remotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == remotes","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.remotes.setAsDefault","when":"gitlens:views:scm:grouped:view == remotes && config.gitlens.views.scm.grouped.default != remotes","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.remotes.detach","when":"gitlens:views:scm:grouped:view == remotes","group":"9_gitlens@3"}],"gitlens/views/grouped/repositories":[{"command":"gitlens.pushRepositories","when":"gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"command":"gitlens.pullRepositories","when":"gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@2"},{"command":"gitlens.fetchRepositories","when":"gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@3"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == repositories","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.repositories.setAsDefault","when":"gitlens:views:scm:grouped:view == repositories && config.gitlens.views.scm.grouped.default != repositories","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.repositories.detach","when":"gitlens:views:scm:grouped:view == repositories","group":"9_gitlens@3"}],"gitlens/views/grouped/searchAndCompare":[{"command":"gitlens.views.searchAndCompare.clear","when":"gitlens:views:scm:grouped:view == searchAndCompare","group":"2_gitlens_actions_@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == searchAndCompare","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.searchAndCompare.setAsDefault","when":"gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.scm.grouped.default != searchAndCompare","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","when":"gitlens:views:scm:grouped:view == searchAndCompare","group":"9_gitlens@3"},{"command":"gitlens.views.searchAndCompare.searchCommits","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"2_gitlens_actions@1"},{"command":"gitlens.views.searchAndCompare.selectForCompare","when":"view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)","group":"2_gitlens_actions@2"}],"gitlens/views/grouped/stashes":[{"command":"gitlens.stashSave","when":"gitlens:views:scm:grouped:view == stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"command":"gitlens.stashApply","when":"gitlens:views:scm:grouped:view == stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@2"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == stashes","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.stashes.setAsDefault","when":"gitlens:views:scm:grouped:view == stashes && config.gitlens.views.scm.grouped.default != stashes","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.stashes.detach","when":"gitlens:views:scm:grouped:view == stashes","group":"9_gitlens@3"}],"gitlens/views/grouped/tags":[{"command":"gitlens.views.title.createTag","when":"gitlens:views:scm:grouped:view == tags && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == tags","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.tags.setAsDefault","when":"gitlens:views:scm:grouped:view == tags && config.gitlens.views.scm.grouped.default != tags","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.tags.detach","when":"gitlens:views:scm:grouped:view == tags","group":"9_gitlens@3"}],"gitlens/views/grouped/worktrees":[{"command":"gitlens.views.title.createWorktree","when":"gitlens:views:scm:grouped:view == worktrees","group":"2_gitlens_actions@1"},{"submenu":"gitlens/views/grouped/more","when":"gitlens:views:scm:grouped:view == worktrees","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.worktrees.setAsDefault","when":"gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.scm.grouped.default != workspaces","group":"9_gitlens@2"},{"command":"gitlens.views.scm.grouped.worktrees.detach","when":"gitlens:views:scm:grouped:view == worktrees","group":"9_gitlens@3"}],"menuBar/edit/copy":[{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editor.clipboard","group":"1_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlFrom","when":"resource in gitlens:tabs:tracked && config.gitlens.menus.editor.clipboard","group":"1_gitlens@2"}],"scm/resourceFolder/context":[{"submenu":"gitlens/scm/resourceFolder/changes","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"2_gitlens@1"},{"submenu":"gitlens/scm/resourceFolder/history","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.history","group":"2_gitlens_1@1"},{"command":"gitlens.copyPatchToClipboard","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@97"}],"scm/resourceGroup/context":[{"command":"gitlens.stashSave","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroupInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@-1"},{"command":"gitlens.stashSave","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_modification@100"},{"submenu":"gitlens/scm/resourceGroup/changes","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"2_gitlens@1"},{"command":"gitlens.openChangedFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@1"},{"command":"gitlens.closeUnchangedFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@2"},{"command":"gitlens.openOnlyChangedFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"3_gitlens@3"},{"command":"gitlens.copyPatchToClipboard","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@97"},{"command":"gitlens.shareAsCloudPatch","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch","group":"7_cutcopypaste@98"}],"scm/resourceState/context":[{"submenu":"gitlens/scm/resourceState/changes","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"navigation"},{"submenu":"gitlens/scm/resourceState/openOn","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.remote && gitlens:repos:withRemotes","group":"navigation"},{"command":"gitlens.stashSaveFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItemInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"submenu":"gitlens/scm/resourceState/history","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_a_gitlens@2"},{"command":"gitlens.stashSaveFiles","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_modification@2"},{"submenu":"gitlens/share","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.share","group":"7_a_gitlens_share@1"},{"command":"gitlens.copyPatchToClipboard","when":"scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.patch","group":"7_cutcopypaste@97"},{"command":"gitlens.copyRelativePathToClipboard","when":"scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.clipboard && gitlens:repos:withRemotes","group":"7_cutcopypaste@98"}],"scm/sourceControl":[{"command":"gitlens.showGraph","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scm.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"6_gitlens@1"}],"scm/title":[{"command":"gitlens.stashSave","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepositoryInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@-1001"},{"command":"gitlens.showGraph","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepositoryInline.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"navigation@-1000"},{"command":"gitlens.addAuthors","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.authors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_z_gitlens@1"},{"command":"gitlens.copyPatchToClipboard","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.patch","group":"2_z_gitlens@2"},{"command":"gitlens.shareAsCloudPatch","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.patch","group":"2_z_gitlens@3"},{"command":"gitlens.scm.generateCommitMessage","when":"scmProvider == git && gitlens:enabled && config.gitlens.ai.generateCommitMessage.enabled && config.gitlens.menus.scmRepository.generateCommitMessage && gitlens:gk:organization:ai:enabled && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_z_gitlens@4"},{"command":"gitlens.showGraph","when":"scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos","group":"2_z_gitlens@5"}],"timeline/item/context":[{"command":"gitlens.openCommitOnRemote","when":"false && gitlens:enabled && gitlens:repos:withRemotes && timelineItem =~ /git:file:commit\\b/","group":"inline@99","alt":"gitlens.copyRemoteCommitUrl"}],"view/item/context":[{"command":"gitlens.ghpr.views.openOrCreateWorktree","when":"viewItem =~ /pullrequest(:local)?:nonactive|description/ && view == pr:github && config.gitlens.menus.ghpr.worktree && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"2_gitlens@1"},{"command":"gitlens.views.copy","when":"viewItem =~ /gitlens:(?=(autolinked:item\\b|branch|commit|contributor|file(?!.*?\\b\\+(staged|unstaged))\\b|folder|history:line|launchpad:item|pullrequest|remote|repository|repo-folder|search:results|stash|tag|workspace|worktree)\\b)/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:(?!(file|message|date-marker)\\b)/","group":"9_gitlens_z@99"},{"command":"gitlens.views.openUrl","when":"viewItem =~ /gitlens:autolinked:item\\b/","group":"inline@99","alt":"gitlens.views.copyUrl"},{"command":"gitlens.views.openUrl","when":"viewItem =~ /gitlens:autolinked:item\\b/ && !listMultiSelection","group":"1_gitlens_actions@99"},{"command":"gitlens.views.openUrl.multi","when":"viewItem =~ /gitlens:autolinked:item\\b/ && listMultiSelection","group":"1_gitlens_actions@99"},{"command":"gitlens.views.copyUrl","when":"viewItem =~ /gitlens:autolinked:item\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.copyUrl.multi","when":"viewItem =~ /gitlens:autolinked:item\\b/ && listMultiSelection","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.copyAsMarkdown","when":"viewItem =~ /gitlens:autolinked:item\\b/","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:autolinked:items\\b/ && config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected","group":"inline@98"},{"command":"gitlens.showSettingsPage!autolinks","when":"viewItem =~ /gitlens:autolinked:items\\b/","group":"inline@99"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:autolinked:items\\b/ && config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected","group":"6_gitlens_actions@1"},{"command":"gitlens.showSettingsPage!autolinks","when":"viewItem =~ /gitlens:autolinked:items\\b/ && !listMultiSelection","group":"8_gitlens_actions@99"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !gitlens:hasVirtualFolders","group":"inline@7","alt":"gitlens.views.openWorktreeInNewWindow"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@7"},{"command":"gitlens.views.switchToBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@7"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)(?!.*?\\b\\+(ahead|behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8","alt":"gitlens.views.pull"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+(ahead|behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8"},{"command":"gitlens.views.publishBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(closed|remote|tracking)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8","alt":"gitlens.views.fetch"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+(behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@8"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes","group":"inline@9"},{"command":"gitlens.views.compareBranchWithHead","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders","group":"inline@97","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.views.compareBranchWithHead","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && gitlens:hasVirtualFolders","group":"inline@97"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders","group":"inline@97"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"1_gitlens_action@1"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.views.switchToBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"1_gitlens_action@2"},{"command":"gitlens.views.openInWorktree","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"1_gitlens_action@3"},{"command":"gitlens.views.publishBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(closed|remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(behind|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+(behind|closed)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.mergeBranchInto","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.views.rebaseOntoBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.rebaseOntoUpstream","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.resetToTip","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@3"},{"command":"gitlens.views.associateIssueWithBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@1"},{"command":"gitlens.views.renameBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@2"},{"command":"gitlens.views.deleteBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@3"},{"command":"gitlens.views.deleteBranch.multi","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout)\\b)(?!.*?\\b\\+closed\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@3"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@7"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@8"},{"command":"gitlens.views.createWorktree","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@9"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:action:createPullRequest && gitlens:repos:withRemotes","group":"1_gitlens_actions_3@10"},{"command":"gitlens.views.openBranchOnRemote","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openBranchOnRemote.multi","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.showInCommitGraph","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"submenu":"gitlens/commit/browse","when":"viewItem =~ /gitlens:(branch|commit|file\\b(?=.*?\\b\\+committed\\b)|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"3_gitlens_explore@10"},{"command":"gitlens.views.openChangedFileDiffsWithMergeBase","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"3_gitlens_explore@11"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"viewItem =~ /gitlens:(branch|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"3_gitlens_explore@12"},{"command":"gitlens.views.compareWithUpstream","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@1"},{"command":"gitlens.views.compareBranchWithHead","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.views.compareWithMergeBase","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"4_gitlens_compare@3"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@4"},{"command":"gitlens.views.compareAncestryWithWorking","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@5"},{"command":"gitlens.views.compareWithSelected","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && gitlens:views:canCompare","group":"4_gitlens_compare@98"},{"command":"gitlens.views.selectForCompare","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection","group":"4_gitlens_compare@99"},{"submenu":"gitlens/share","when":"viewItem =~ /gitlens:(branch|commit|compare:(branch(?=.*?\\b\\+comparing\\b)|results(:commits(?!:)|(?!:)))|remote|repo-folder|repository|stash|status:upstream|tag|workspace|file\\b(?=.*?\\b\\+committed\\b))\\b/","group":"7_gitlens_a_share@1"},{"submenu":"gitlens/commit/copy","when":"viewItem =~ /gitlens:(branch|commit|remote|repo-folder|repository|stash|tag|file\\b(?=.*?\\b\\+committed\\b))\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@10"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.star.multi","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unstar.multi","when":"viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.repositories.setShowSectionOff","when":"viewItem =~ /gitlens:(compare:branch(?=.*?\\b\\+root\\b)|branches|branch(?=.*?\\b\\+commits\\b)|reflog|remotes|stashes|status:upstream|tags)\\b/ && view == gitlens.views.repositories && !listMultiSelection","group":"8_gitlens_toggles@99"},{"command":"gitlens.views.collapseNode","when":"viewItem =~ /gitlens:(branch|compare|folder|grouping|pseudo:folder|results|search|status|tag)\\b/ && !listMultiSelection","group":"9_gitlens@1"},{"command":"gitlens.views.expandNode","when":"viewItem =~ /gitlens:(branch|compare|folder|grouping|pseudo:folder|results|search|status|tag)\\b/ && !listMultiSelection","group":"9_gitlens@2"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@10"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@11"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == tree","group":"inline@50"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == list","group":"inline@50"},{"command":"gitlens.openBranchesOnRemote","when":"viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/","group":"inline@98","alt":"gitlens.copyRemoteBranchesUrl"},{"command":"gitlens.views.switchToAnotherBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.openBranchesOnRemote","when":"viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"viewItem =~ /gitlens:branches\\b/ && view == gitlens.views.repositories && config.gitlens.views.repositories.branches.showBranchComparison && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOn","when":"viewItem =~ /gitlens:branches\\b/ && view == gitlens.views.repositories && !config.gitlens.views.repositories.branches.showBranchComparison && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.undoCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@78"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@79","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@80"},{"command":"gitlens.views.openChangedFileDiffs","when":"viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/ && config.gitlens.views.openChangesInMultiDiffEditor && config.multiDiffEditor.experimental.enabled && !listMultiSelection","group":"inline@90","alt":"gitlens.views.openChangedFileDiffsWithWorking"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(commit|stash|tag)\\b/","group":"inline@97","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:commit\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.views.openCommitOnRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:repos:withRemotes","group":"inline@99","alt":"gitlens.views.copyRemoteCommitUrl"},{"command":"gitlens.views.cherryPick","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.cherryPick.multi","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.undoCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.revert","when":"viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.resetToCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.views.resetCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.views.rebaseOntoCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@6"},{"command":"gitlens.views.switchToCommit","when":"viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(commit|stash)\\b/","group":"1_gitlens_actions_1@2"},{"command":"gitlens.createCloudPatch","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_actions_1@3"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@4"},{"submenu":"gitlens/commit/changes","when":"viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.showInDetailsView","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection","group":"3_gitlens_explore@0"},{"command":"gitlens.revealCommitInView","when":"viewItem =~ /gitlens:commit\\b/ && view =~ /gitlens\\.views\\.(?!commits|branches\\b)/ && !listMultiSelection","group":"3_gitlens_explore@2"},{"command":"gitlens.views.openCommitOnRemote","when":"viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.views.openCommitOnRemote.multi","when":"viewItem =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(commit|stash|tag)\\b/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@4"},{"command":"gitlens.copyPatchToClipboard","when":"viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"viewItem == gitlens:commits:current-branch && !gitlens:views:commits:filtered","group":"inline@50"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"viewItem == gitlens:commits:current-branch && gitlens:views:commits:filtered","group":"inline@50"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/","group":"inline@2"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/","group":"inline@2"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/","group":"inline@96"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/","group":"inline@96"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/","group":"inline@97"},{"command":"gitlens.views.clearComparison","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/","group":"inline@99"},{"command":"gitlens.views.setBranchComparisonToBranch","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/ && !listMultiSelection","group":"1_gitlens@1"},{"command":"gitlens.views.setBranchComparisonToWorking","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/ && !listMultiSelection","group":"1_gitlens@1"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection","group":"1_gitlens@2"},{"command":"gitlens.views.clearReviewed","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection","group":"1_gitlens@3"},{"command":"gitlens.views.clearComparison","when":"viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection","group":"1_gitlens@4"},{"command":"gitlens.openComparisonOnRemote","when":"viewItem =~ /gitlens:compare:(branch\\b(?=.*?\\b\\+comparing\\b)|results(?!:))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@1"},{"command":"gitlens.copyPatchToClipboard","when":"viewItem =~ /gitlens:compare:(branch|results(?!:))\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.views.setResultsCommitsFilterOff","when":"viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/ && !listMultiSelection","group":"7_gitlens_filter@1"},{"command":"gitlens.views.setResultsCommitsFilterAuthors","when":"viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b/ && !listMultiSelection","group":"7_gitlens_filter@2"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"viewItem =~ /gitlens:compare:branch\\b/ && view == gitlens.views.branches && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"viewItem =~ /gitlens:compare:branch\\b/ && view == gitlens.views.commits && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.repositories.setBranchesShowBranchComparisonOff","when":"viewItem =~ /gitlens:compare:branch(?!.*?\\b\\+root\\b)\\b/ && view == gitlens.views.repositories && !listMultiSelection","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/","group":"inline@99"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/ && !listMultiSelection","group":"1_gitlens_actions@98"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"inline@96"},{"command":"gitlens.views.searchAndCompare.swapComparison","when":"viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.clearReviewed","when":"viewItem =~ /gitlens:compare:results(?!:)/ && !listMultiSelection","group":"1_gitlens_actions@3"},{"command":"gitlens.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:compare:results(?!:)\\b/","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.createCloudPatch","when":"viewItem =~ /gitlens:compare:results(?!:)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.views.openDirectoryDiff","when":"viewItem =~ /gitlens:compare:results(?!:)\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.openComparisonOnRemote","when":"viewItem =~ /gitlens:compare:results:commits\\b/ && gitlens:repos:withRemotes","group":"inline@99","alt":"gitlens.copyRemoteComparisonUrl"},{"command":"gitlens.openComparisonOnRemote","when":"viewItem =~ /gitlens:compare:results:commits\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@0"},{"command":"gitlens.inviteToLiveShare","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && gitlens:vsls && gitlens:vsls != guest","group":"inline@1"},{"command":"gitlens.views.addAuthor","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@2"},{"command":"gitlens.views.copy","when":"viewItem =~ /gitlens:contributor\\b/","group":"inline@98"},{"command":"gitlens.inviteToLiveShare","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && gitlens:vsls && gitlens:vsls != guest","group":"1_gitlens_actions@1"},{"command":"gitlens.views.addAuthor","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.addAuthor.multi","when":"viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.copyAsMarkdown","when":"viewItem =~ /gitlens:contributor\\b/","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.views.addAuthors","when":"viewItem =~ /gitlens:contributors\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.setContributorsStatisticsOff","when":"viewItem == gitlens:contributors && config.gitlens.views.showContributorsStatistics","group":"inline@99"},{"command":"gitlens.views.setContributorsStatisticsOn","when":"viewItem == gitlens:contributors && !config.gitlens.views.showContributorsStatistics","group":"inline@99"},{"command":"gitlens.views.addAuthors","when":"viewItem =~ /gitlens:contributors\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"viewItem == gitlens:date-marker && config.gitlens.views.showRelativeDateMarkers && !listMultiSelection","group":"1_gitlens@0"},{"command":"gitlens.views.draft.openOnWeb","when":"viewItem =~ /gitlens:draft\\b/ && gitlens:plus","group":"inline@99"},{"command":"gitlens.views.draft.open","when":"viewItem =~ /gitlens:draft\\b/ && gitlens:plus","group":"1_gitlens_actions@1"},{"command":"gitlens.views.draft.openOnWeb","when":"viewItem =~ /gitlens:draft\\b/ && gitlens:plus","group":"1_gitlens_actions@2"},{"command":"gitlens.views.drafts.delete","when":"viewItem =~ /gitlens:draft\\b(?=.*?\\b\\+mine\\b)/ && gitlens:plus","group":"6_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@-1"},{"command":"gitlens.views.pushToCommit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@-1"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file(:results|\\b(?=.*?\\b\\+(committed|stashed)\\b))/","group":"inline@1","alt":"gitlens.views.openFile"},{"command":"gitlens.views.openChanges","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/ && view =~ /gitlens\\.views\\.(?!fileHistory|lineHistory)\\b/","group":"inline@96"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|unstaged)\\b)/","group":"inline@96"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/","group":"inline@96"},{"command":"gitlens.views.stageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.views.unstageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.openFileOnRemote","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:repos:withRemotes","group":"inline@99","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.views.applyChanges","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.stageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.unstageFile","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.stashSaveFiles","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+(un)?staged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.restore","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openChanges","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"submenu":"gitlens/commit/file/changes","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.showInDetailsView","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@3"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/ && !listMultiSelection","group":"2_gitlens_quickopen_file@3"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/ && !listMultiSelection","group":"2_gitlens_quickopen_file@4"},{"command":"gitlens.openFileOnRemote","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen_file@5","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"submenu":"gitlens/commit/file/commit","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"submenu":"gitlens/commit/file/history","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"3_gitlens_explore@2"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@3"},{"command":"gitlens.views.compareFileWithSelected","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection && gitlens:views:canCompare:file","group":"4_gitlens_compare@98"},{"command":"gitlens.views.selectFileForCompare","when":"viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/ && !listMultiSelection","group":"4_gitlens_compare@99"},{"command":"gitlens.copyRelativePathToClipboard","when":"viewItem =~ /gitlens:file\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.copyPatchToClipboard","when":"viewItem =~ /gitlens:file(\\b(?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@97"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@98"},{"command":"gitlens.views.applyChanges","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"8_gitlens_actions@1"},{"command":"gitlens.views.restore","when":"viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"8_gitlens_actions@2"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@2"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"submenu":"gitlens/explorer/folder/history","when":"viewItem =~ /gitlens:folder\\b/","group":"4_timeline@1"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/","group":"inline@1"},{"command":"gitlens.openFileOnRemote","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"5_gitlens_open@2","alt":"gitlens.copyRemoteFileUrlWithoutRange"},{"command":"gitlens.views.openPullRequestChanges","when":"viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && config.multiDiffEditor.experimental.enabled","group":"inline@2"},{"command":"gitlens.openPullRequestOnRemote","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/","group":"inline@98","alt":"gitlens.copyRemotePullRequestUrl"},{"command":"gitlens.views.openInWorktree","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"inline@99"},{"command":"gitlens.views.openInWorktree","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openPullRequestChanges","when":"viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && config.multiDiffEditor.experimental.enabled && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.openPullRequestOnRemote","when":"viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openPullRequestComparison","when":"viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection","group":"4_gitlens_compare@1"},{"command":"gitlens.plus.login","when":"viewItem == gitlens:message:signin","group":"inline@1"},{"command":"gitlens.views.loadAllChildren","when":"viewItem =~ /gitlens:pager\\b/","group":"inline@1"},{"command":"gitlens.views.loadAllChildren","when":"viewItem =~ /gitlens:pager\\b/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.abortPausedOperation","when":"viewItem =~ /gitlens:paused-operation\\b/ && !listMultiSelection","group":"inline@3"},{"command":"gitlens.views.abortPausedOperation","when":"viewItem =~ /gitlens:paused-operation\\b/ && !listMultiSelection","group":"1_gitlens_actions@3"},{"command":"gitlens.views.continuePausedOperation","when":"viewItem =~ /gitlens:paused-operation:(cherry-pick|merge|rebase)\\b/ && !listMultiSelection","group":"inline@1"},{"command":"gitlens.views.skipPausedOperation","when":"viewItem =~ /gitlens:paused-operation:(cherry-pick|rebase|revert)\\b/ && !listMultiSelection","group":"inline@2"},{"command":"gitlens.views.continuePausedOperation","when":"viewItem =~ /gitlens:paused-operation:(cherry-pick|merge|rebase)\\b/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.skipPausedOperation","when":"viewItem =~ /gitlens:paused-operation:(cherry-pick|rebase|revert)\\b/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.openPausedOperationInRebaseEditor","when":"viewItem =~ /gitlens:paused-operation:rebase\\b/ && !listMultiSelection","group":"inline@4"},{"command":"gitlens.views.openPausedOperationInRebaseEditor","when":"viewItem =~ /gitlens:paused-operation:rebase\\b/ && !listMultiSelection","group":"2_gitlens@1"},{"command":"gitlens.views.openPullRequest","when":"viewItem =~ /gitlens:pullrequest\\b/ && gitlens:action:openPullRequest > 1","group":"inline@1"},{"command":"gitlens.views.openPullRequest","when":"viewItem =~ /gitlens:pullrequest\\b/ && !listMultiSelection && gitlens:action:openPullRequest > 1","group":"1_gitlens_actions@1"},{"command":"gitlens.showInCommitGraph","when":"viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:remote\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/ && config.gitlens.integrations.enabled","group":"inline@98"},{"command":"gitlens.disconnectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/ && config.gitlens.integrations.enabled","group":"inline@98"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"inline@99","alt":"gitlens.copyRemoteRepositoryUrl"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pruneRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection","group":"5_gitlens_open@1"},{"command":"gitlens.openBranchesOnRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection","group":"5_gitlens_open@2"},{"command":"gitlens.views.removeRemote","when":"viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"6_gitlens_terminal@1"},{"command":"gitlens.views.setAsDefault","when":"viewItem =~ /gitlens:remote\\b(?!.*?\\b\\+default\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.views.unsetAsDefault","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+default\\b)/ && !listMultiSelection","group":"8_gitlens_actions@1"},{"command":"gitlens.connectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/ && config.gitlens.integrations.enabled && !listMultiSelection","group":"8_gitlens_actions@2"},{"command":"gitlens.disconnectRemoteProvider","when":"viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/ && config.gitlens.integrations.enabled && !listMultiSelection","group":"8_gitlens_actions@2"},{"command":"gitlens.views.addRemote","when":"viewItem =~ /gitlens:remotes\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.repositories.setBranchesLayoutToList","when":"viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == tree","group":"inline@50"},{"command":"gitlens.views.repositories.setBranchesLayoutToTree","when":"viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == list","group":"inline@50"},{"command":"gitlens.views.addRemote","when":"viewItem =~ /gitlens:remotes\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@96","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.showGraph","when":"viewItem =~ /gitlens:repo-folder\\b/ && gitlens:plus:enabled","group":"inline@100"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"(view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered","group":"inline@101"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.stashSave","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.stashApply","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@2"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@3"},{"command":"gitlens.showGraph","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:plus:enabled","group":"3_gitlens_explore@1"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection","group":"3_gitlens_explore@2"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.star.multi","when":"viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar.multi","when":"viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.closeRepository","when":"viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection","group":"8_gitlens_actions_@2"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"!listMultiSelection && (view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered","group":"8_gitlens_filter_@1"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"!listMultiSelection && (view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b/","group":"8_gitlens_filter_@2"},{"command":"gitlens.views.workspaces.convert","when":"viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus","group":"inline@1"},{"command":"gitlens.views.workspaces.convert","when":"viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.addReposFromLinked","when":"viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+linked\\b)(?=.*?\\b\\+current\\b)/ && !listMultiSelection","group":"1_gitlens_actions@3"},{"command":"gitlens.views.workspaces.changeAutoAddSetting","when":"viewItem =~ /(gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)|gitlens:repositories\\b(?=.*?\\b\\+linked\\b))/ && !listMultiSelection","group":"2_gitlens_quickopen@6"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@96","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/","group":"inline@99"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/","group":"inline@99"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/","group":"inline@100","alt":"gitlens.views.workspaces.repo.open"},{"command":"gitlens.views.workspaces.repo.open","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_1gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.openInNewWindow","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_1gitlens_actions@2"},{"command":"gitlens.views.workspaces.repo.addToWindow","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_1gitlens_actions@3"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"0_2gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.locate","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/ && !listMultiSelection","group":"0_2gitlens_actions@2"},{"command":"gitlens.views.workspaces.repo.remove","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/ && !listMultiSelection","group":"0_3gitlens_actions@1"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.stashSave","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.stashApply","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.revealRepositoryInExplorer","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@3"},{"command":"gitlens.openRepoOnRemote","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@4"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/ && !listMultiSelection","group":"3_gitlens_explore@1"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.star.multi","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.unstar.multi","when":"viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection","group":"8_gitlens_actions_@1"},{"command":"gitlens.views.closeRepository","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection","group":"8_gitlens_actions_@2"},{"submenu":"gitlens/comparison/results/files/filter/inline","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/","group":"inline@99"},{"submenu":"gitlens/comparison/results/files/filtered/inline","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/","group":"inline@99"},{"command":"gitlens.views.clearReviewed","when":"viewItem =~ /gitlens:results:files\\b/ && !listMultiSelection","group":"1_gitlens@1"},{"submenu":"gitlens/comparison/results/files/filter","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/ && !listMultiSelection","group":"1_gitlens@2"},{"submenu":"gitlens/comparison/results/files/filtered","when":"viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/ && !listMultiSelection","group":"1_gitlens@2"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:search:results(?!:)\\b/","group":"inline@1"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:search:results(?!:)\\b/","group":"inline@97"},{"command":"gitlens.views.editNode","when":"viewItem =~ /gitlens:search:results(?!:)\\b/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.stash.apply","when":"viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.stash.rename","when":"viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.stash.delete","when":"viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.stash.apply","when":"viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.stash.rename","when":"viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.stash.delete","when":"viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.stash.delete.multi","when":"viewItem == gitlens:stash && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.stashSave","when":"viewItem =~ /^gitlens:(stashes|status:files)$/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.stashApply","when":"viewItem == gitlens:stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.stashSave","when":"viewItem =~ /^gitlens:(stashes|status:files)$/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.stashApply","when":"viewItem == gitlens:stashes && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:(?!(missing|none))/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@98"},{"command":"gitlens.views.push","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:ahead/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:behind/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.publishBranch","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.publishRepository","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:repos:withRemotes && !gitlens:untrusted","group":"inline@99"},{"command":"gitlens.views.addRemote","when":"viewItem =~ /gitlens:status(\\-branch)?:upstream:none/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:repos:withRemotes && !gitlens:untrusted","group":"inline@2"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:status:upstream/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@1"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:status:upstream/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:status:upstream\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen_terminal@1"},{"command":"gitlens.views.openInIntegratedTerminal","when":"viewItem =~ /gitlens:status:upstream\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"2_gitlens_quickopen_terminal@2"},{"command":"gitlens.views.fetch","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:action:createPullRequest && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_secondary_actions@3"},{"command":"gitlens.views.openBranchOnRemote","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"2_gitlens_quickopen_remote@1"},{"command":"gitlens.copyRemoteBranchUrl","when":"viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.views.push","when":"viewItem == gitlens:status:upstream:ahead && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.pushWithForce","when":"viewItem == gitlens:status:upstream:ahead && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.pull","when":"viewItem == gitlens:status:upstream:behind && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.createPullRequest","when":"viewItem =~ /gitlens:status:upstream:same/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.openBranchOnRemote","when":"viewItem =~ /gitlens:status:upstream:same/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@97","alt":"gitlens.copyRemoteBranchUrl"},{"command":"gitlens.views.switchToTag","when":"viewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@10"},{"command":"gitlens.views.switchToTag","when":"viewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.deleteTag","when":"viewItem == gitlens:tag && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.deleteTag.multi","when":"viewItem == gitlens:tag && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.views.createBranch","when":"viewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:tags\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.createTag","when":"viewItem =~ /gitlens:tags\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.addRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/","group":"inline@1"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/","group":"inline@2"},{"command":"gitlens.views.workspaces.createLocal","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?!.*?\\b\\+hasPath\\b)(?!.*?\\b\\+empty\\b)/","group":"inline@3"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/","group":"inline@3","alt":"gitlens.views.workspaces.openLocal"},{"command":"gitlens.views.workspaces.addRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.locateAllRepos","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/ && !listMultiSelection","group":"1_gitlens_actions@2"},{"command":"gitlens.views.workspaces.createLocal","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+empty\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@3"},{"command":"gitlens.views.workspaces.openLocal","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@4"},{"command":"gitlens.views.workspaces.openLocalNewWindow","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@5"},{"command":"gitlens.views.workspaces.delete","when":"viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/ && !listMultiSelection","group":"6_gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.locate","when":"viewItem =~ /gitlens:workspaceMissingRepository\\b/","group":"inline@1"},{"command":"gitlens.views.workspaces.repo.locate","when":"viewItem =~ /gitlens:workspaceMissingRepository\\b/ && !listMultiSelection","group":"1_gitlens_actions@1"},{"command":"gitlens.views.workspaces.repo.remove","when":"viewItem =~ /gitlens:workspaceMissingRepository\\b/ && !listMultiSelection","group":"6_gitlens_actions@1"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/","group":"inline@1","alt":"gitlens.views.openWorktreeInNewWindow"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && workspaceFolderCount != 1","group":"inline@1","alt":"gitlens.views.openWorktreeInNewWindow"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openWorktree","when":"viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && !listMultiSelection && workspaceFolderCount != 1","group":"2_gitlens_quickopen@1"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/ && !listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openWorktreeInNewWindow","when":"viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && !listMultiSelection && workspaceFolderCount != 1","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.openWorktreeInNewWindow.multi","when":"viewItem =~ /gitlens:worktree\\b/ && listMultiSelection","group":"2_gitlens_quickopen@2"},{"command":"gitlens.views.revealWorktreeInExplorer","when":"viewItem =~ /gitlens:worktree\\b/ && !listMultiSelection","group":"3_gitlens@1"},{"command":"gitlens.views.deleteWorktree","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|default)\\b)/ && !listMultiSelection && !gitlens:readonly","group":"6_gitlens_actions@1"},{"command":"gitlens.views.deleteWorktree.multi","when":"viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|default)\\b)/ && listMultiSelection && !gitlens:readonly","group":"6_gitlens_actions@1"},{"command":"gitlens.views.createWorktree","when":"viewItem =~ /gitlens:worktrees\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"inline@1"},{"command":"gitlens.views.createWorktree","when":"viewItem =~ /gitlens:worktrees\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"}],"view/title":[{"command":"gitlens.views.switchToAnotherBranch","when":"view == gitlens.views.branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.views.title.createBranch","when":"view == gitlens.views.branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@11"},{"command":"gitlens.views.branches.setLayoutToList","when":"view == gitlens.views.branches && config.gitlens.views.branches.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.branches.setLayoutToTree","when":"view == gitlens.views.branches && config.gitlens.views.branches.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.branches.refresh","when":"view == gitlens.views.branches","group":"navigation@98"},{"command":"gitlens.views.branches.regroup","when":"view == gitlens.views.branches","group":"navigation@99"},{"command":"gitlens.views.branches.setFilesLayoutToAuto","when":"view == gitlens.views.branches && config.gitlens.views.branches.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToList","when":"view == gitlens.views.branches && config.gitlens.views.branches.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setFilesLayoutToTree","when":"view == gitlens.views.branches && config.gitlens.views.branches.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.branches.setShowAvatarsOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowAvatarsOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.branches.setShowBranchComparisonOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchComparisonOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.branches.setShowBranchPullRequestOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.branches.setShowBranchPullRequestOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.branches && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.branches && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.branches.setShowRemoteBranchesOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.branches.setShowRemoteBranchesOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.branches.setShowStashesOff","when":"view == gitlens.views.branches && config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.branches.setShowStashesOn","when":"view == gitlens.views.branches && !config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.branches.regroup","when":"view == gitlens.views.branches","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!branches-view","when":"view == gitlens.views.branches","group":"9_gitlens@1"},{"command":"gitlens.views.commitDetails.refresh","when":"view == gitlens.views.commitDetails","group":"navigation@99"},{"command":"gitlens.pushRepositories","when":"view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@1"},{"command":"gitlens.pullRepositories","when":"view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@2"},{"command":"gitlens.fetchRepositories","when":"view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@3"},{"command":"gitlens.views.switchToAnotherBranch","when":"view == gitlens.views.commits && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.showGraph","when":"view == gitlens.views.commits && gitlens:plus:enabled","group":"navigation@11"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"view == gitlens.views.commits && gitlens:views:commits:filtered","group":"navigation@50"},{"command":"gitlens.views.commits.refresh","when":"view == gitlens.views.commits","group":"navigation@98"},{"command":"gitlens.views.commits.regroup","when":"view == gitlens.views.commits","group":"navigation@99"},{"command":"gitlens.views.commits.setCommitsFilterOff","when":"view == gitlens.views.commits && gitlens:views:commits:filtered","group":"2_gitlens@0"},{"command":"gitlens.views.commits.setCommitsFilterAuthors","when":"view == gitlens.views.commits","group":"2_gitlens@1"},{"command":"gitlens.views.commits.setFilesLayoutToAuto","when":"view == gitlens.views.commits && config.gitlens.views.commits.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToList","when":"view == gitlens.views.commits && config.gitlens.views.commits.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setFilesLayoutToTree","when":"view == gitlens.views.commits && config.gitlens.views.commits.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.commits.setShowAvatarsOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowAvatarsOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.commits.setShowBranchComparisonOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchComparisonOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.commits.setShowBranchPullRequestOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.commits.setShowBranchPullRequestOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.commits && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.commits && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.commits.setShowMergeCommitsOff","when":"view == gitlens.views.commits && !gitlens:views:commits:hideMergeCommits","group":"5_gitlens@5"},{"command":"gitlens.views.commits.setShowMergeCommitsOn","when":"view == gitlens.views.commits && gitlens:views:commits:hideMergeCommits","group":"5_gitlens@5"},{"command":"gitlens.views.commits.setShowStashesOff","when":"view == gitlens.views.commits && config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.views.commits.setShowStashesOn","when":"view == gitlens.views.commits && !config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@6"},{"command":"gitlens.showGraph","when":"view == gitlens.views.commits && gitlens:plus:enabled","group":"8_gitlens_toggles@0"},{"command":"gitlens.showRepositoriesView","when":"view == gitlens.views.commits && !gitlens:hasVirtualFolders","group":"8_gitlens_toggles@1"},{"command":"gitlens.views.commits.regroup","when":"view == gitlens.views.commits","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!commits-view","when":"view == gitlens.views.commits","group":"9_gitlens@1"},{"command":"gitlens.views.addAuthors","when":"view == gitlens.views.contributors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.views.contributors.refresh","when":"view == gitlens.views.contributors","group":"navigation@98"},{"command":"gitlens.views.contributors.regroup","when":"view == gitlens.views.contributors","group":"navigation@99"},{"command":"gitlens.views.contributors.setShowAllBranchesOff","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setShowAllBranchesOn","when":"view == gitlens.views.contributors && !config.gitlens.views.contributors.showAllBranches","group":"3_gitlens@1"},{"command":"gitlens.views.contributors.setFilesLayoutToAuto","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == tree","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToList","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == auto","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setFilesLayoutToTree","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == list","group":"3_gitlens@2"},{"command":"gitlens.views.contributors.setShowAvatarsOff","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.contributors.setShowAvatarsOn","when":"view == gitlens.views.contributors && !config.gitlens.views.contributors.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.contributors && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.contributors && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.contributors.setShowMergeCommitsOff","when":"view == gitlens.views.contributors && !gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@3"},{"command":"gitlens.views.contributors.setShowMergeCommitsOn","when":"view == gitlens.views.contributors && gitlens:views:contributors:hideMergeCommits","group":"5_gitlens@3"},{"command":"gitlens.views.contributors.setShowStatisticsOff","when":"view == gitlens.views.contributors && config.gitlens.views.contributors.showStatistics","group":"5_gitlens@4"},{"command":"gitlens.views.contributors.setShowStatisticsOn","when":"view == gitlens.views.contributors && !config.gitlens.views.contributors.showStatistics","group":"5_gitlens@4"},{"command":"gitlens.views.contributors.regroup","when":"view == gitlens.views.contributors","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!contributors-view","when":"view == gitlens.views.contributors","group":"9_gitlens@1"},{"command":"gitlens.views.drafts.create","when":"view == gitlens.views.drafts && gitlens:plus","group":"navigation@1"},{"command":"gitlens.views.drafts.refresh","when":"view == gitlens.views.drafts","group":"navigation@99"},{"command":"gitlens.views.drafts.setShowAvatarsOff","when":"view == gitlens.views.drafts && config.gitlens.views.drafts.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.drafts.setShowAvatarsOn","when":"view == gitlens.views.drafts && !config.gitlens.views.drafts.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.drafts.info","when":"view == gitlens.views.drafts","group":"8_info@1"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"view == gitlens.views.fileHistory && gitlens:views:fileHistory:canPin && gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"view == gitlens.views.fileHistory && !gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setCursorFollowingOff","when":"view == gitlens.views.fileHistory && gitlens:views:fileHistory:cursorFollowing && !gitlens:hasVirtualFolders","group":"navigation@11"},{"command":"gitlens.views.fileHistory.setCursorFollowingOn","when":"view == gitlens.views.fileHistory && !gitlens:hasVirtualFolders && !gitlens:views:fileHistory:cursorFollowing","group":"navigation@11"},{"command":"gitlens.views.fileHistory.refresh","when":"view == gitlens.views.fileHistory","group":"navigation@99"},{"command":"gitlens.views.fileHistory.changeBase","when":"view == gitlens.views.fileHistory","group":"1_gitlens@0"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryFollowsRenames && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@1"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryFollowsRenames && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@1"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOff","when":"view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryShowMergeCommits && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@2"},{"command":"gitlens.views.fileHistory.setShowMergeCommitsOn","when":"view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryShowMergeCommits && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@2"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOff","when":"view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryShowAllBranches && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@3"},{"command":"gitlens.views.fileHistory.setShowAllBranchesOn","when":"view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryShowAllBranches && !gitlens:views:fileHistory:cursorFollowing","group":"3_gitlens@3"},{"command":"gitlens.views.fileHistory.setShowAvatarsOff","when":"view == gitlens.views.fileHistory && config.gitlens.views.fileHistory.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.fileHistory.setShowAvatarsOn","when":"view == gitlens.views.fileHistory && !config.gitlens.views.fileHistory.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.fileHistory && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.fileHistory && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.showLineHistoryView","when":"view == gitlens.views.fileHistory && !gitlens:hasVirtualFolders","group":"8_gitlens_toggles@0"},{"command":"gitlens.showSettingsPage!file-history-view","when":"view == gitlens.views.fileHistory","group":"9_gitlens@1"},{"command":"gitlens.views.graph.openInTab","when":"view == gitlens.views.graph","group":"navigation@-100"},{"command":"gitlens.views.graph.refresh","when":"view == gitlens.views.graph","group":"navigation@-99"},{"submenu":"gitlens/graph/configuration","when":"view == gitlens.views.graph","group":"navigation@-98"},{"command":"gitlens.views.graphDetails.refresh","when":"view == gitlens.views.graphDetails","group":"navigation@99"},{"command":"gitlens.views.home.whatsNew","when":"view == gitlens.views.home","group":"navigation@1"},{"command":"gitlens.views.home.previewFeedback","when":"view == gitlens.views.home","group":"navigation@96"},{"command":"gitlens.views.home.disablePreview","when":"view == gitlens.views.home && config.gitlens.home.preview.enabled","group":"navigation@97"},{"command":"gitlens.views.home.enablePreview","when":"view == gitlens.views.home && !config.gitlens.home.preview.enabled","group":"navigation@97"},{"command":"gitlens.views.home.info","when":"view == gitlens.views.home","group":"navigation@98"},{"command":"gitlens.views.home.refresh","when":"view == gitlens.views.home","group":"navigation@99"},{"command":"gitlens.views.home.help","when":"view == gitlens.views.home","group":"1_gitlens@97"},{"command":"gitlens.views.home.issues","when":"view == gitlens.views.home","group":"2_gitlens@98"},{"command":"gitlens.views.home.discussions","when":"view == gitlens.views.home","group":"2_gitlens@99"},{"command":"gitlens.views.launchpad.setFilesLayoutToAuto","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == tree","group":"navigation@50"},{"command":"gitlens.views.launchpad.setFilesLayoutToList","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == auto","group":"navigation@50"},{"command":"gitlens.views.launchpad.setFilesLayoutToTree","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == list","group":"navigation@50"},{"command":"gitlens.views.launchpad.refresh","when":"view == gitlens.views.launchpad","group":"navigation@98"},{"command":"gitlens.views.launchpad.regroup","when":"view == gitlens.views.launchpad","group":"navigation@99"},{"command":"gitlens.views.launchpad.setShowAvatarsOff","when":"view == gitlens.views.launchpad && config.gitlens.views.launchpad.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.launchpad.setShowAvatarsOn","when":"view == gitlens.views.launchpad && !config.gitlens.views.launchpad.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.launchpad.info","when":"view == gitlens.views.launchpad","group":"8_info@1"},{"command":"gitlens.views.launchpad.regroup","when":"view == gitlens.views.launchpad","group":"9_gitlens@0"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"view == gitlens.views.lineHistory && gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"view == gitlens.views.lineHistory && !gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.refresh","when":"view == gitlens.views.lineHistory","group":"navigation@99"},{"command":"gitlens.views.lineHistory.changeBase","when":"view == gitlens.views.lineHistory","group":"1_gitlens@0"},{"command":"gitlens.views.lineHistory.setShowAvatarsOff","when":"view == gitlens.views.lineHistory && config.gitlens.views.lineHistory.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.lineHistory.setShowAvatarsOn","when":"view == gitlens.views.lineHistory && !config.gitlens.views.lineHistory.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.lineHistory && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.lineHistory && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.showSettingsPage!line-history-view","when":"view == gitlens.views.lineHistory","group":"9_gitlens@1"},{"command":"gitlens.views.patchDetails.refresh","when":"view == gitlens.views.patchDetails","group":"navigation@98"},{"command":"gitlens.views.patchDetails.close","when":"view == gitlens.views.patchDetails","group":"navigation@99"},{"command":"gitlens.views.pullRequest.setFilesLayoutToAuto","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == tree","group":"navigation@50"},{"command":"gitlens.views.pullRequest.setFilesLayoutToList","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == auto","group":"navigation@50"},{"command":"gitlens.views.pullRequest.setFilesLayoutToTree","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == list","group":"navigation@50"},{"command":"gitlens.views.pullRequest.refresh","when":"view == gitlens.views.pullRequest","group":"navigation@98"},{"command":"gitlens.views.pullRequest.close","when":"view == gitlens.views.pullRequest","group":"navigation@99"},{"command":"gitlens.views.pullRequest.setShowAvatarsOff","when":"view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.pullRequest.setShowAvatarsOn","when":"view == gitlens.views.pullRequest && !config.gitlens.views.pullRequest.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.addRemote","when":"view == gitlens.views.remotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@1"},{"command":"gitlens.views.remotes.setLayoutToList","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.remotes.setLayoutToTree","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.remotes.refresh","when":"view == gitlens.views.remotes","group":"navigation@98"},{"command":"gitlens.views.remotes.regroup","when":"view == gitlens.views.remotes","group":"navigation@99"},{"command":"gitlens.views.remotes.setFilesLayoutToAuto","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setFilesLayoutToList","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setFilesLayoutToTree","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.remotes.setShowAvatarsOff","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setShowAvatarsOn","when":"view == gitlens.views.remotes && !config.gitlens.views.remotes.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOff","when":"view == gitlens.views.remotes && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.remotes.setShowBranchPullRequestOn","when":"view == gitlens.views.remotes && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.remotes && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.remotes && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@3"},{"command":"gitlens.views.remotes.regroup","when":"view == gitlens.views.remotes","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!remotes-view","when":"view == gitlens.views.remotes","group":"9_gitlens@1"},{"command":"gitlens.pushRepositories","when":"view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@1"},{"command":"gitlens.pullRepositories","when":"view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@2"},{"command":"gitlens.fetchRepositories","when":"view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@3"},{"command":"gitlens.views.repositories.refresh","when":"view == gitlens.views.repositories","group":"navigation@98"},{"command":"gitlens.views.repositories.regroup","when":"view == gitlens.views.repositories","group":"navigation@99"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens@0"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == list","group":"3_gitlens@0"},{"submenu":"gitlens/view/repositories/sections","when":"view == gitlens.views.repositories","group":"4_gitlens@1"},{"command":"gitlens.views.repositories.setShowAvatarsOff","when":"view == gitlens.views.repositories && config.gitlens.views.repositories.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.repositories.setShowAvatarsOn","when":"view == gitlens.views.repositories && !config.gitlens.views.repositories.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.repositories && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.repositories && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.repositories.regroup","when":"view == gitlens.views.repositories","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!repositories-view","when":"view == gitlens.views.repositories","group":"9_gitlens@1"},{"command":"gitlens.views.scm.grouped.commits","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits && (gitlens:views:scm:grouped:view != commits || gitlens:views:scm:grouped:welcome)","group":"navigation@1","alt":"gitlens.views.scm.grouped.commits.detach"},{"submenu":"gitlens/views/grouped/commits","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.scm.grouped.views.commits && !gitlens:views:scm:grouped:welcome","group":"navigation@1"},{"command":"gitlens.views.scm.grouped.branches","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches && (gitlens:views:scm:grouped:view != branches || gitlens:views:scm:grouped:welcome)","group":"navigation@2","alt":"gitlens.views.scm.grouped.branches.detach"},{"submenu":"gitlens/views/grouped/branches","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.scm.grouped.views.branches && !gitlens:views:scm:grouped:welcome","group":"navigation@2"},{"command":"gitlens.views.scm.grouped.remotes","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes && (gitlens:views:scm:grouped:view != remotes || gitlens:views:scm:grouped:welcome)","group":"navigation@3","alt":"gitlens.views.scm.grouped.remotes.detach"},{"submenu":"gitlens/views/grouped/remotes","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.scm.grouped.views.remotes && !gitlens:views:scm:grouped:welcome","group":"navigation@3"},{"command":"gitlens.views.scm.grouped.stashes","when":"!gitlens:hasVirtualFolders && view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes && (gitlens:views:scm:grouped:view != stashes || gitlens:views:scm:grouped:welcome)","group":"navigation@4","alt":"gitlens.views.scm.grouped.stashes.detach"},{"submenu":"gitlens/views/grouped/stashes","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.scm.grouped.views.stashes && !gitlens:hasVirtualFolders && !gitlens:views:scm:grouped:welcome","group":"navigation@4"},{"command":"gitlens.views.scm.grouped.tags","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags && (gitlens:views:scm:grouped:view != tags || gitlens:views:scm:grouped:welcome)","group":"navigation@5","alt":"gitlens.views.scm.grouped.tags.detach"},{"submenu":"gitlens/views/grouped/tags","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.scm.grouped.views.tags && !gitlens:views:scm:grouped:welcome","group":"navigation@5"},{"command":"gitlens.views.scm.grouped.worktrees","when":"!gitlens:hasVirtualFolders && gitlens:plus:enabled && view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees && (gitlens:views:scm:grouped:view != worktrees || gitlens:views:scm:grouped:welcome)","group":"navigation@6","alt":"gitlens.views.scm.grouped.worktrees.detach"},{"submenu":"gitlens/views/grouped/worktrees","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders && !gitlens:views:scm:grouped:welcome","group":"navigation@6"},{"command":"gitlens.views.scm.grouped.contributors","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors && (gitlens:views:scm:grouped:view != contributors || gitlens:views:scm:grouped:welcome)","group":"navigation@7","alt":"gitlens.views.scm.grouped.contributors.detach"},{"submenu":"gitlens/views/grouped/contributors","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.scm.grouped.views.contributors && !gitlens:views:scm:grouped:welcome","group":"navigation@7"},{"command":"gitlens.views.scm.grouped.repositories","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories && (gitlens:views:scm:grouped:view != repositories || gitlens:views:scm:grouped:welcome)","group":"navigation@8","alt":"gitlens.views.scm.grouped.repositories.detach"},{"submenu":"gitlens/views/grouped/repositories","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.scm.grouped.views.repositories && !gitlens:views:scm:grouped:welcome","group":"navigation@8"},{"command":"gitlens.views.scm.grouped.searchAndCompare","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare && (gitlens:views:scm:grouped:view != searchAndCompare || gitlens:views:scm:grouped:welcome)","group":"navigation@9","alt":"gitlens.views.scm.grouped.searchAndCompare.detach"},{"submenu":"gitlens/views/grouped/searchAndCompare","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.scm.grouped.views.searchAndCompare && !gitlens:views:scm:grouped:welcome","group":"navigation@9"},{"command":"gitlens.views.scm.grouped.launchpad","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad && (gitlens:views:scm:grouped:view != launchpad || gitlens:views:scm:grouped:welcome)","group":"navigation@10","alt":"gitlens.views.scm.grouped.launchpad.detach"},{"submenu":"gitlens/views/grouped/launchpad","when":"view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.scm.grouped.views.launchpad && !gitlens:views:scm:grouped:welcome","group":"navigation@10"},{"command":"gitlens.views.scm.grouped.refresh","when":"view == gitlens.views.scm.grouped","group":"navigation@98"},{"command":"gitlens.views.scm.grouped.commits.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits","group":"2_gitlens@1"},{"command":"gitlens.views.scm.grouped.commits.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.commits","group":"2_gitlens@1"},{"command":"gitlens.views.scm.grouped.branches.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches","group":"2_gitlens@2"},{"command":"gitlens.views.scm.grouped.branches.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.branches","group":"2_gitlens@2"},{"command":"gitlens.views.scm.grouped.remotes.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes","group":"2_gitlens@3"},{"command":"gitlens.views.scm.grouped.remotes.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.remotes","group":"2_gitlens@3"},{"command":"gitlens.views.scm.grouped.stashes.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes","group":"2_gitlens@4"},{"command":"gitlens.views.scm.grouped.stashes.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.stashes && !gitlens:hasVirtualFolders","group":"2_gitlens@4"},{"command":"gitlens.views.scm.grouped.tags.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags","group":"2_gitlens@5"},{"command":"gitlens.views.scm.grouped.tags.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.tags","group":"2_gitlens@5"},{"command":"gitlens.views.scm.grouped.worktrees.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders","group":"2_gitlens@6"},{"command":"gitlens.views.scm.grouped.worktrees.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders","group":"2_gitlens@6"},{"command":"gitlens.views.scm.grouped.contributors.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors","group":"2_gitlens@7"},{"command":"gitlens.views.scm.grouped.contributors.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.contributors","group":"2_gitlens@7"},{"command":"gitlens.views.scm.grouped.repositories.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories","group":"2_gitlens@8"},{"command":"gitlens.views.scm.grouped.repositories.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.repositories","group":"2_gitlens@8"},{"command":"gitlens.views.scm.grouped.searchAndCompare.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare","group":"2_gitlens@9"},{"command":"gitlens.views.scm.grouped.searchAndCompare.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.searchAndCompare","group":"2_gitlens@9"},{"command":"gitlens.views.scm.grouped.launchpad.detach","when":"view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad","group":"2_gitlens@10"},{"command":"gitlens.views.scm.grouped.launchpad.regroup","when":"view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.launchpad","group":"2_gitlens@10"},{"command":"gitlens.views.scm.grouped.detachAll","when":"view == gitlens.views.scm.grouped","group":"9_gitlens@98"},{"command":"gitlens.views.scm.grouped.regroupAll","when":"view == gitlens.views.scm.grouped","group":"9_gitlens@99"},{"submenu":"gitlens/view/searchAndCompare/new","when":"view == gitlens.views.searchAndCompare","group":"navigation@10"},{"command":"gitlens.views.searchAndCompare.clear","when":"view == gitlens.views.searchAndCompare","group":"navigation@98"},{"command":"gitlens.views.searchAndCompare.refresh","when":"view == gitlens.views.searchAndCompare","group":"navigation@98"},{"command":"gitlens.views.searchAndCompare.regroup","when":"view == gitlens.views.searchAndCompare","group":"navigation@99"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToAuto","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToList","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setFilesLayoutToTree","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOff","when":"view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.searchAndCompare.setShowAvatarsOn","when":"view == gitlens.views.searchAndCompare && !config.gitlens.views.searchAndCompare.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.searchAndCompare.regroup","when":"view == gitlens.views.searchAndCompare","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!search-compare-view","when":"view == gitlens.views.searchAndCompare","group":"9_gitlens@1"},{"command":"gitlens.stashSave","when":"view == gitlens.views.stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.stashApply","when":"view == gitlens.views.stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@11"},{"command":"gitlens.views.stashes.refresh","when":"view == gitlens.views.stashes","group":"navigation@98"},{"command":"gitlens.views.stashes.regroup","when":"view == gitlens.views.stashes","group":"navigation@99"},{"command":"gitlens.views.stashes.setFilesLayoutToAuto","when":"view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == tree","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.setFilesLayoutToList","when":"view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == auto","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.setFilesLayoutToTree","when":"view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == list","group":"3_gitlens@0"},{"command":"gitlens.views.stashes.regroup","when":"view == gitlens.views.stashes","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!stashes-view","when":"view == gitlens.views.stashes","group":"9_gitlens@1"},{"command":"gitlens.views.title.createTag","when":"view == gitlens.views.tags && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"navigation@10"},{"command":"gitlens.views.tags.setLayoutToList","when":"view == gitlens.views.tags && config.gitlens.views.tags.branches.layout == tree","group":"navigation@50"},{"command":"gitlens.views.tags.setLayoutToTree","when":"view == gitlens.views.tags && config.gitlens.views.tags.branches.layout == list","group":"navigation@50"},{"command":"gitlens.views.tags.refresh","when":"view == gitlens.views.tags","group":"navigation@98"},{"command":"gitlens.views.tags.regroup","when":"view == gitlens.views.tags","group":"navigation@99"},{"command":"gitlens.views.tags.setFilesLayoutToAuto","when":"view == gitlens.views.tags && config.gitlens.views.tags.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setFilesLayoutToList","when":"view == gitlens.views.tags && config.gitlens.views.tags.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setFilesLayoutToTree","when":"view == gitlens.views.tags && config.gitlens.views.tags.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.tags.setShowAvatarsOff","when":"view == gitlens.views.tags && config.gitlens.views.tags.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.tags.setShowAvatarsOn","when":"view == gitlens.views.tags && !config.gitlens.views.tags.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.tags && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.tags && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@2"},{"command":"gitlens.views.tags.regroup","when":"view == gitlens.views.tags","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!tags-view","when":"view == gitlens.views.tags","group":"9_gitlens@1"},{"command":"gitlens.views.timeline.refresh","when":"view == gitlens.views.timeline","group":"navigation@99"},{"command":"gitlens.views.workspaces.create","when":"view == gitlens.views.workspaces && gitlens:plus","group":"navigation@1"},{"command":"gitlens.views.workspaces.refresh","when":"view == gitlens.views.workspaces","group":"navigation@99"},{"command":"gitlens.views.workspaces.info","when":"view == gitlens.views.workspaces","group":"8_info@1"},{"command":"gitlens.views.title.createWorktree","when":"view == gitlens.views.worktrees","group":"navigation@10"},{"command":"gitlens.views.worktrees.refresh","when":"view == gitlens.views.worktrees","group":"navigation@98"},{"command":"gitlens.views.worktrees.regroup","when":"view == gitlens.views.worktrees","group":"navigation@99"},{"command":"gitlens.views.worktrees.setFilesLayoutToAuto","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == tree","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToList","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == auto","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setFilesLayoutToTree","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == list","group":"3_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowAvatarsOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.avatars","group":"5_gitlens@1"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchComparisonOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.showBranchComparison","group":"5_gitlens@2"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.worktrees.setShowBranchPullRequestOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches","group":"5_gitlens@3"},{"command":"gitlens.views.setShowRelativeDateMarkersOff","when":"view == gitlens.views.worktrees && config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.setShowRelativeDateMarkersOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.showRelativeDateMarkers","group":"5_gitlens@4"},{"command":"gitlens.views.worktrees.setShowStashesOff","when":"view == gitlens.views.worktrees && config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.worktrees.setShowStashesOn","when":"view == gitlens.views.worktrees && !config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders","group":"5_gitlens@5"},{"command":"gitlens.views.worktrees.regroup","when":"view == gitlens.views.worktrees","group":"9_gitlens@0"},{"command":"gitlens.showSettingsPage!worktrees-view","when":"view == gitlens.views.worktrees","group":"9_gitlens@1"}],"webview/context":[{"command":"gitlens.graph.openWorktree","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)/ && !gitlens:hasVirtualFolders","group":"1_gitlens_action@1"},{"command":"gitlens.graph.switchToAnotherBranch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(current|checkedout)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.graph.switchToBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_action@1"},{"command":"gitlens.graph.openWorktreeInNewWindow","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)/ && !gitlens:hasVirtualFolders","group":"1_gitlens_action@2"},{"command":"gitlens.graph.openInWorktree","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders","group":"1_gitlens_action@3"},{"command":"gitlens.graph.publishBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)(?!.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.pull","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(behind|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.push","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.fetch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.mergeBranchInto","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.graph.rebaseOntoBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.graph.rebaseOntoUpstream","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@2"},{"command":"gitlens.graph.resetToTip","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@3"},{"command":"gitlens.graph.associateIssueWithBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@1"},{"command":"gitlens.graph.renameBranch","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@2"},{"command":"gitlens.graph.deleteBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_2@3"},{"command":"gitlens.graph.createBranch","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@1"},{"command":"gitlens.graph.createTag","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@2"},{"command":"gitlens.graph.createWorktree","when":"webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_3@3"},{"command":"gitlens.graph.createPullRequest","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes","group":"1_gitlens_actions_3@4"},{"command":"gitlens.graph.openBranchOnRemote","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && gitlens:repos:withRemotes","group":"2_gitlens_quickopen@1"},{"command":"gitlens.graph.openChangedFileDiffsWithMergeBase","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"3_gitlens_explore@11"},{"command":"gitlens.graph.compareWithUpstream","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/ && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@1"},{"command":"gitlens.graph.compareBranchWithHead","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.graph.compareWithMergeBase","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/","group":"4_gitlens_compare@3"},{"command":"gitlens.graph.compareWithWorking","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@4"},{"command":"gitlens.graph.compareAncestryWithWorking","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders","group":"4_gitlens_compare@5"},{"submenu":"gitlens/share","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens_a_share@1"},{"command":"gitlens.graph.copy","when":"webviewItem =~ /gitlens:(branch|commit|contributor|launchpad:item|pullrequest|stash|tag)\\b/","group":"7_gitlens_cutcopypaste@1"},{"command":"gitlens.graph.copySha","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@2"},{"command":"gitlens.graph.copyMessage","when":"webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection","group":"7_gitlens_cutcopypaste@3"},{"command":"gitlens.graph.hideRemote","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@10"},{"command":"gitlens.graph.hideLocalBranch","when":"webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|remote)\\b)/","group":"8_gitlens_actions@11"},{"command":"gitlens.graph.hideRemoteBranch","when":"webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@11"},{"command":"gitlens.graph.cherryPick","when":"webviewItem =~ /gitlens:commit\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.undoCommit","when":"webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.revert","when":"webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.resetToCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.resetCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@5"},{"command":"gitlens.graph.rebaseOntoCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@6"},{"command":"gitlens.graph.switchToCommit","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@7"},{"command":"gitlens.graph.createBranch","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@1"},{"command":"gitlens.graph.createPatch","when":"!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(commit|stash)\\b/","group":"1_gitlens_actions_1@2"},{"command":"gitlens.graph.createCloudPatch","when":"webviewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"1_gitlens_actions_1@3"},{"command":"gitlens.graph.createTag","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions_1@4"},{"submenu":"gitlens/graph/commit/changes","when":"webviewItem =~ /gitlens:(commit|stash|wip)\\b/ && !listMultiSelection","group":"2_gitlens_quickopen@1"},{"command":"gitlens.graph.showInDetailsView","when":"webviewItem =~ /gitlens:(commit|stash|wip)\\b/ && !listMultiSelection","group":"3_gitlens_explore@0"},{"command":"gitlens.graph.openCommitOnRemote","when":"webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.graph.compareWithHead","when":"webviewItem =~ /gitlens:(commit|stash|tag)\\b/ && !listMultiSelection","group":"4_gitlens_compare@2"},{"command":"gitlens.copyPatchToClipboard","when":"webviewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted","group":"7_cutcopypaste@97"},{"command":"gitlens.graph.addAuthor","when":"webviewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"submenu":"gitlens/graph/markers","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"0_markers@0"},{"command":"gitlens.graph.columnAuthorOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:visible\\b/","group":"1_columns@1"},{"command":"gitlens.graph.columnAuthorOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:hidden\\b/","group":"1_columns@1"},{"command":"gitlens.graph.columnRefOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:visible\\b/","group":"1_columns@2"},{"command":"gitlens.graph.columnRefOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:hidden\\b/","group":"1_columns@2"},{"command":"gitlens.graph.columnChangesOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:visible\\b/","group":"1_columns@3"},{"command":"gitlens.graph.columnChangesOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:hidden\\b/","group":"1_columns@3"},{"command":"gitlens.graph.columnMessageOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:visible\\b/","group":"1_columns@4"},{"command":"gitlens.graph.columnMessageOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:hidden\\b/","group":"1_columns@4"},{"command":"gitlens.graph.columnDateTimeOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:visible\\b/","group":"1_columns@5"},{"command":"gitlens.graph.columnDateTimeOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:hidden\\b/","group":"1_columns@5"},{"command":"gitlens.graph.columnGraphOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible\\b/","group":"1_columns@6"},{"command":"gitlens.graph.columnGraphOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:hidden\\b/","group":"1_columns@6"},{"command":"gitlens.graph.columnShaOff","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:visible\\b/","group":"1_columns@7"},{"command":"gitlens.graph.columnShaOn","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:hidden\\b/","group":"1_columns@7"},{"command":"gitlens.graph.columnGraphCompact","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible(?![^,]*\\+compact\\b)/","group":"2_columns@1"},{"command":"gitlens.graph.columnGraphDefault","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible[^,]*\\+compact\\b/","group":"2_columns@1"},{"command":"gitlens.graph.resetColumnsDefault","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"3_columns@1"},{"command":"gitlens.graph.resetColumnsCompact","when":"webviewItem =~ /gitlens:graph:(columns|settings)\\b/","group":"3_columns@2"},{"command":"gitlens.graph.openPullRequestChanges","when":"webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && config.multiDiffEditor.experimental.enabled","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.openPullRequest","when":"webviewItem =~ /gitlens:pullrequest\\b/ && gitlens:action:openPullRequest > 1","group":"1_gitlens_actions@98"},{"command":"gitlens.graph.openPullRequestOnRemote","when":"webviewItem =~ /gitlens:pullrequest\\b/","group":"1_gitlens_actions@99"},{"command":"gitlens.graph.openPullRequestComparison","when":"webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/","group":"4_gitlens_compare@1"},{"command":"gitlens.graph.stash.apply","when":"webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.stash.rename","when":"webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.stash.delete","when":"webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.switchToTag","when":"webviewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.resetToTag","when":"webviewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.deleteTag","when":"webviewItem == gitlens:tag && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.createBranch","when":"webviewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.hideTag","when":"webviewItem =~ /gitlens:tag\\b/","group":"8_gitlens_actions@10"},{"command":"gitlens.graph.push","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@1"},{"command":"gitlens.graph.pull","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@2"},{"command":"gitlens.graph.fetch","when":"webviewItem =~ /gitlens:upstreamStatus\\b/","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.commitViaSCM","when":"webviewItem == gitlens:wip && !listMultiSelection","group":"1_gitlens@1"},{"command":"gitlens.graph.generateCommitMessage","when":"webviewItem == gitlens:wip && config.gitlens.ai.generateCommitMessage.enabled && !listMultiSelection && gitlens:gk:organization:ai:enabled && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens@2"},{"command":"gitlens.graph.stash.save","when":"webviewItem == gitlens:wip && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@3"},{"command":"gitlens.graph.copyWorkingChangesToWorktree","when":"webviewItem == gitlens:wip && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted","group":"1_gitlens_actions@4"},{"command":"gitlens.graph.hideRefGroup","when":"webviewItemGroup =~ /gitlens:refGroup\\b(?!.*?\\b\\+current\\b)/","group":"8_gitlens_actions@12"},{"command":"gitlens.graph.openCommitOnRemote.multi","when":"webviewItems =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes","group":"3_gitlens_explore@2"},{"command":"gitlens.graph.compareSelectedCommits.multi","when":"webviewItems =~ /gitlens:commit\\b/ && listDoubleSelection","group":"4_gitlens_compare@2"}]},"submenus":[{"id":"gitlens/commit/browse","label":"Browse"},{"id":"gitlens/commit/changes","label":"Open Changes"},{"id":"gitlens/commit/copy","label":"Copy As"},{"id":"gitlens/commit/file/changes","label":"Open Changes with"},{"id":"gitlens/commit/file/commit","label":"Commit"},{"id":"gitlens/commit/file/history","label":"File History"},{"id":"gitlens/comparison/results/files/filter","label":"Filter Files","icon":"$(filter)"},{"id":"gitlens/comparison/results/files/filter/inline","label":"Filter Files","icon":"$(filter)"},{"id":"gitlens/comparison/results/files/filtered","label":"Filter Files","icon":"$(filter-filled)"},{"id":"gitlens/comparison/results/files/filtered/inline","label":"Filter Files","icon":"$(filter-filled)"},{"id":"gitlens/editor/annotations","label":"File Annotations","icon":"$(gitlens-gitlens)"},{"id":"gitlens/editor/changes","label":"Open Changes"},{"id":"gitlens/editor/context/changes","label":"Open Changes"},{"id":"gitlens/editor/context/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/editor/history","label":"File History"},{"id":"gitlens/editor/lineNumber/context/changes","label":"Open Changes"},{"id":"gitlens/editor/lineNumber/context/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/editor/lineNumber/context/share","label":"Share"},{"id":"gitlens/editor/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/explorer/changes","label":"Open Changes"},{"id":"gitlens/explorer/file/history","label":"File History"},{"id":"gitlens/explorer/folder/history","label":"Folder History"},{"id":"gitlens/explorer/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/graph/commit/changes","label":"Open Changes"},{"id":"gitlens/graph/configuration","label":"Commit Graph Settings","icon":"$(gear)"},{"id":"gitlens/graph/markers","label":"Scroll Markers"},{"id":"gitlens/scm/resourceFolder/changes","label":"Open Changes with"},{"id":"gitlens/scm/resourceFolder/history","label":"Folder History"},{"id":"gitlens/scm/resourceGroup/changes","label":"Open Changes"},{"id":"gitlens/scm/resourceState/changes","label":"Open Changes with"},{"id":"gitlens/scm/resourceState/history","label":"File History"},{"id":"gitlens/scm/resourceState/openOn","label":"Open on Remote (Web)"},{"id":"gitlens/share","label":"Share"},{"id":"gitlens/view/repositories/sections","label":"Sections"},{"id":"gitlens/view/searchAndCompare/new","label":"New Search or Compare","icon":"$(add)"},{"id":"gitlens/views/grouped/branches","label":"Branches","icon":"$(gitlens-branches-view-filled)"},{"id":"gitlens/views/grouped/commits","label":"Commits","icon":"$(gitlens-commits-view-filled)"},{"id":"gitlens/views/grouped/contributors","label":"Contributors","icon":"$(gitlens-contributors-view-filled)"},{"id":"gitlens/views/grouped/launchpad","label":"Launchpad","icon":"$(gitlens-launchpad-view-filled)"},{"id":"gitlens/views/grouped/more","label":"View Options","icon":"$(ellipsis)"},{"id":"gitlens/views/grouped/remotes","label":"Remotes","icon":"$(gitlens-remotes-view-filled)"},{"id":"gitlens/views/grouped/repositories","label":"Repositories","icon":"$(gitlens-repositories-view-filled)"},{"id":"gitlens/views/grouped/searchAndCompare","label":"Search & Compare","icon":"$(gitlens-search-view-filled)"},{"id":"gitlens/views/grouped/stashes","label":"Stashes","icon":"$(gitlens-stashes-view-filled)"},{"id":"gitlens/views/grouped/tags","label":"Tags","icon":"$(gitlens-tags-view-filled)"},{"id":"gitlens/views/grouped/worktrees","label":"Worktrees","icon":"$(gitlens-worktrees-view-filled)"}],"keybindings":[{"command":"gitlens.key.alt+,","key":"alt+,","when":"gitlens:key:,"},{"command":"gitlens.key.alt+.","key":"alt+.","when":"gitlens:key:."},{"command":"gitlens.key.alt+enter","key":"alt+enter","when":"gitlens:key:alt+enter"},{"command":"gitlens.key.alt+left","key":"alt+left","when":"gitlens:key:alt+left"},{"command":"gitlens.key.alt+right","key":"alt+right","when":"gitlens:key:alt+right"},{"command":"gitlens.key.ctrl+enter","key":"ctrl+enter","when":"gitlens:key:ctrl+enter"},{"command":"gitlens.key.ctrl+left","key":"ctrl+left","when":"gitlens:key:ctrl+left","mac":"cmd+left"},{"command":"gitlens.key.ctrl+right","key":"ctrl+right","when":"gitlens:key:ctrl+right","mac":"cmd+right"},{"command":"workbench.view.scm","key":"ctrl+shift+g g","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"ctrl+shift+g"},{"command":"gitlens.key.escape","key":"escape","when":"gitlens:key:escape && editorTextFocus && !findWidgetVisible && !quickFixWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !referenceSearchVisible && !codeActionMenuVisible && !parameterHintsVisible && !isInEmbeddedEditor"},{"command":"gitlens.key.left","key":"left","when":"gitlens:key:left"},{"command":"gitlens.key.right","key":"right","when":"gitlens:key:right"},{"command":"gitlens.diffLineWithPrevious","key":"ctrl+shift+g shift+,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked","mac":"cmd+alt+g shift+,"},{"command":"gitlens.diffLineWithPrevious","key":"shift+alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor","mac":"cmd+alt+g ."},{"command":"gitlens.diffWithNextInDiffLeft","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffLeft","key":"ctrl+shift+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor","mac":"cmd+alt+g ."},{"command":"gitlens.diffWithNextInDiffRight","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor"},{"command":"gitlens.diffWithNextInDiffRight","key":"ctrl+shift+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor","mac":"cmd+alt+g ."},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && !isInDiffEditor"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && !isInDiffEditor","mac":"cmd+alt+g ,"},{"command":"gitlens.diffWithPreviousInDiffLeft","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffLeft","key":"ctrl+shift+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor","mac":"cmd+alt+g ,"},{"command":"gitlens.diffWithPreviousInDiffRight","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffRightEditor"},{"command":"gitlens.diffWithPreviousInDiffRight","key":"ctrl+shift+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffRightEditor","mac":"cmd+alt+g ,"},{"command":"gitlens.diffWithWorking","key":"ctrl+shift+g shift+.","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/","mac":"cmd+alt+g shift+."},{"command":"gitlens.diffWithWorking","key":"shift+alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"},{"command":"gitlens.gitCommands","key":"alt+/","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.gitCommands","key":"ctrl+shift+g /","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g /"},{"command":"gitlens.showQuickCommitFileDetails","key":"alt+c","when":"config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"ctrl+shift+g c","when":"config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled","mac":"cmd+alt+g c"},{"command":"gitlens.showQuickFileHistory","key":"alt+h","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickFileHistory","key":"ctrl+shift+g h","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g h"},{"command":"gitlens.showQuickRepoHistory","key":"ctrl+shift+g shift+h","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g shift+h"},{"command":"gitlens.showQuickRepoHistory","key":"shift+alt+h","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickRepoStatus","key":"alt+s","when":"config.gitlens.keymap == alternate && !gitlens:disabled"},{"command":"gitlens.showQuickRepoStatus","key":"ctrl+shift+g s","when":"config.gitlens.keymap == chorded && !gitlens:disabled","mac":"cmd+alt+g s"},{"command":"gitlens.toggleCodeLens","key":"ctrl+shift+g shift+b","when":"config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens","mac":"cmd+alt+g shift+b"},{"command":"gitlens.toggleCodeLens","key":"shift+alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens"},{"command":"gitlens.toggleFileBlame","key":"alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:blameable"},{"command":"gitlens.toggleFileBlame","key":"ctrl+shift+g b","when":"config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:blameable","mac":"cmd+alt+g b"},{"command":"gitlens.views.branches.copy","key":"ctrl+c","when":"focusedView == gitlens.views.branches","mac":"cmd+c"},{"command":"gitlens.views.commits.copy","key":"ctrl+c","when":"focusedView == gitlens.views.commits","mac":"cmd+c"},{"command":"gitlens.views.contributors.copy","key":"ctrl+c","when":"focusedView == gitlens.views.contributors","mac":"cmd+c"},{"command":"gitlens.views.drafts.copy","key":"ctrl+c","when":"focusedView == gitlens.views.drafts","mac":"cmd+c"},{"command":"gitlens.views.fileHistory.copy","key":"ctrl+c","when":"focusedView == gitlens.views.fileHistory","mac":"cmd+c"},{"command":"gitlens.views.lineHistory.copy","key":"ctrl+c","when":"focusedView == gitlens.views.lineHistory","mac":"cmd+c"},{"command":"gitlens.views.pullRequest.copy","key":"ctrl+c","when":"focusedView == gitlens.views.pullRequest","mac":"cmd+c"},{"command":"gitlens.views.remotes.copy","key":"ctrl+c","when":"focusedView == gitlens.views.remotes","mac":"cmd+c"},{"command":"gitlens.views.repositories.copy","key":"ctrl+c","when":"focusedView == gitlens.views.repositories","mac":"cmd+c"},{"command":"gitlens.views.scm.grouped.branches","key":"2","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches"},{"command":"gitlens.views.scm.grouped.commits","key":"1","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits"},{"command":"gitlens.views.scm.grouped.contributors","key":"7","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors"},{"command":"gitlens.views.scm.grouped.launchpad","key":"0","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad"},{"command":"gitlens.views.scm.grouped.remotes","key":"3","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes"},{"command":"gitlens.views.scm.grouped.repositories","key":"8","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories"},{"command":"gitlens.views.scm.grouped.searchAndCompare","key":"9","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare"},{"command":"gitlens.views.scm.grouped.stashes","key":"4","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes"},{"command":"gitlens.views.scm.grouped.tags","key":"5","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags"},{"command":"gitlens.views.scm.grouped.worktrees","key":"6","when":"focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees"},{"command":"gitlens.views.searchAndCompare.copy","key":"ctrl+c","when":"focusedView == gitlens.views.searchAndCompare","mac":"cmd+c"},{"command":"gitlens.views.stashes.copy","key":"ctrl+c","when":"focusedView == gitlens.views.stashes","mac":"cmd+c"},{"command":"gitlens.views.tags.copy","key":"ctrl+c","when":"focusedView == gitlens.views.tags","mac":"cmd+c"},{"command":"gitlens.views.workspaces.copy","key":"ctrl+c","when":"focusedView == gitlens.views.workspaces","mac":"cmd+c"},{"command":"gitlens.views.worktrees.copy","key":"ctrl+c","when":"focusedView == gitlens.views.worktrees","mac":"cmd+c"}],"customEditors":[{"viewType":"gitlens.rebase","displayName":"GitLens Interactive Rebase Editor","selector":[{"filenamePattern":"git-rebase-todo"}]}],"resourceLabelFormatters":[{"scheme":"gitlens","authority":"*","formatting":{"label":"${path} (${query.ref})","normalizeDriveLetter":true,"tildify":true,"workspaceSuffix":"GitLens"}}],"viewsContainers":{"activitybar":[{"id":"gitlens","title":"GitLens","icon":"$(gitlens-gitlens)"},{"id":"gitlensInspect","title":"GitLens Inspect","icon":"$(gitlens-gitlens-inspect)"},{"id":"gitlensPatch","title":"GitLens Patch","icon":"$(gitlens-cloud-patch)"}],"panel":[{"id":"gitlensPanel","title":"GitLens","icon":"$(gitlens-graph)"}]},"viewsWelcome":[{"view":"gitlens.views.drafts","contents":"Cloud Patches ᴘʀᴇᴠɪᴇᴡ — privately and securely share code with specific teammates and other developers, accessible from anywhere. Enhance collaboration without adding noise to your repositories."},{"view":"gitlens.views.drafts","contents":"[Create Cloud Patch](command:gitlens.views.drafts.create)","when":"gitlens:plus"},{"view":"gitlens.views.drafts","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22cloud-patches%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22cloud-patches%22%7D).","when":"!gitlens:plus"},{"view":"gitlens.views.drafts","contents":"An account is required and may require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/) in the future.","when":"gitlens:plus:state != 6"},{"view":"gitlens.views.launchpad","contents":"[Launchpad](command:gitlens.views.launchpad.info \"Learn about Launchpad\") — organizes your pull requests into actionable groups to help you focus and keep your team unblocked."},{"view":"gitlens.views.launchpad","contents":"[Connect an Integration...](command:gitlens.showLaunchpad?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nAllows Launchpad to organize your pull requests into actionable groups and keep your team unblocked.","when":"gitlens:launchpad:connect"},{"view":"gitlens.views.launchpad","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"!gitlens:launchpad:connect && gitlens:plus:state == -1"},{"view":"gitlens.views.launchpad","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nContinuing gives you 3 days to preview Launchpad and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D) for full access to Pro features.","when":"false && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 0"},{"view":"gitlens.views.launchpad","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"!gitlens:launchpad:connect && gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.launchpad","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22launchpad-view%22%7D)","when":"!gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.launchpad","contents":"Limited-time sale on GitLens Pro.","when":"!gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"},{"view":"gitlens.views.launchpad","contents":"Save 33% or more on GitLens Pro.","when":"!gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == pro50"},{"view":"gitlens.views.launchpad","contents":"Your Pro trial has ended. Please upgrade for full access to Launchpad and other Pro features.","when":"!gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.launchpad","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nReactivate your Pro trial and experience Launchpad and all the new Pro features — free for another 14 days!","when":"!gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 5"},{"view":"gitlens.views.scm.grouped","contents":"GitLens groups many related views—Commits, Branches, Stashes, etc—here for easier view management.\n\n[Continue](command:gitlens.views.scm.grouped.welcome.dismiss)\n\nUse the tabs above to navigate, or detach the views you want to keep separated. You can regroup them anytime using the 'x' in the view header.","when":"gitlens:views:scm:grouped:welcome && gitlens:install:new"},{"view":"gitlens.views.scm.grouped","contents":"In GitLens 16, we've grouped many related views—Commits, Branches, Stashes, etc—here for easier view management.\n\n[Continue](command:gitlens.views.scm.grouped.welcome.dismiss)\n\nPrefer them separate? [Restore views to previous locations](command:gitlens.views.scm.grouped.welcome.restore)\n\nUse the tabs above to navigate, or detach the views you want to keep separated. You can regroup them anytime using the 'x' in the view header.","when":"gitlens:views:scm:grouped:welcome && !gitlens:install:new"},{"view":"gitlens.views.scm.grouped","contents":"[Launchpad](command:gitlens.views.launchpad.info \"Learn about Launchpad\") — organizes your pull requests into actionable groups to help you focus and keep your team unblocked.","when":"gitlens:views:scm:grouped:view == launchpad"},{"view":"gitlens.views.scm.grouped","contents":"[Connect an Integration...](command:gitlens.showLaunchpad?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nAllows Launchpad to organize your pull requests into actionable groups and keep your team unblocked.","when":"gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connect"},{"view":"gitlens.views.scm.grouped","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:state == -1"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nContinuing gives you 3 days to preview Launchpad and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D) for full access to Pro features.","when":"gitlens:views:scm:grouped:view == launchpad && false && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 0"},{"view":"gitlens.views.scm.grouped","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D).","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.scm.grouped","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22launchpad-view%22%7D)","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"Limited-time sale on GitLens Pro.","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"},{"view":"gitlens.views.scm.grouped","contents":"Save 33% or more on GitLens Pro.","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == pro50"},{"view":"gitlens.views.scm.grouped","contents":"Your Pro trial has ended. Please upgrade for full access to Launchpad and other Pro features.","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\nReactivate your Pro trial and experience Launchpad and all the new Pro features — free for another 14 days!","when":"gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connect && gitlens:plus:required && gitlens:plus:state == 5"},{"view":"gitlens.views.scm.grouped","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [file](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22file%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [changes](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22change%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"gitlens:views:scm:grouped:view == searchAndCompare && !gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"gitlens:views:scm:grouped:view == searchAndCompare && gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"Compare a <branch, tag, or ref> with another <branch, tag, or ref>\n\n[Compare References...](command:gitlens.views.searchAndCompare.selectForCompare)","when":"gitlens:views:scm:grouped:view == searchAndCompare && !gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"[Worktrees](https://help.gitkraken.com/gitlens/side-bar/#worktrees-view-pro) ᴾᴿᴼ — minimize context switching by allowing you to work on multiple branches simultaneously.","when":"gitlens:views:scm:grouped:view == worktrees && !gitlens:hasVirtualFolders"},{"view":"gitlens.views.scm.grouped","contents":"[Create Worktree...](command:gitlens.views.createWorktree)","when":"gitlens:views:scm:grouped:view == worktrees && !gitlens:plus:required"},{"view":"gitlens.views.scm.grouped","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22worktrees%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:state == -1"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nContinuing gives you 3 days to preview Worktrees and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D) for full access to Pro features.","when":"false && gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 0"},{"view":"gitlens.views.scm.grouped","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.scm.grouped","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22worktrees%22%7D)","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"Limited-time sale on GitLens Pro.","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"},{"view":"gitlens.views.scm.grouped","contents":"Save 33% or more on GitLens Pro.","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == pro50"},{"view":"gitlens.views.scm.grouped","contents":"Your Pro trial has ended. Please upgrade for full access to Worktrees and other Pro features.","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.scm.grouped","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nReactivate your Pro trial and experience Worktrees and all the new Pro features — free for another 14 days!","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 5"},{"view":"gitlens.views.scm.grouped","contents":"Use on privately-hosted repos require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/).","when":"gitlens:views:scm:grouped:view == worktrees && gitlens:plus:state != 6"},{"view":"gitlens.views.searchAndCompare","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [file](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22file%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [changes](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22change%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"!gitlens:hasVirtualFolders"},{"view":"gitlens.views.searchAndCompare","contents":"Search for commits by [message](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), [author](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D), or [SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)\n\n[Search Commits...](command:gitlens.views.searchAndCompare.searchCommits)","when":"gitlens:hasVirtualFolders"},{"view":"gitlens.views.searchAndCompare","contents":"Compare a <branch, tag, or ref> with another <branch, tag, or ref>\n\n[Compare References...](command:gitlens.views.searchAndCompare.selectForCompare)","when":"!gitlens:hasVirtualFolders"},{"view":"gitlens.views.workspaces","contents":"Workspaces ᴘʀᴇᴠɪᴇᴡ — group and manage multiple repositories together, accessible from anywhere, streamlining your workflow.\n\nCreate workspaces just for yourself or share (coming soon in GitLens) them with your team for faster onboarding and better collaboration."},{"view":"gitlens.views.workspaces","contents":"[Create Cloud Workspace](command:gitlens.views.workspaces.create)","when":"gitlens:plus"},{"view":"gitlens.views.workspaces","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22workspaces%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22workspaces%22%7D).","when":"!gitlens:plus"},{"view":"gitlens.views.workspaces","contents":"An account is required and may require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/) in the future.","when":"gitlens:plus:state != 6"},{"view":"gitlens.views.worktrees","contents":"[Worktrees](https://help.gitkraken.com/gitlens/side-bar/#worktrees-view-pro) ᴾᴿᴼ — minimize context switching by working on multiple branches simultaneously."},{"view":"gitlens.views.worktrees","contents":"[Create Worktree...](command:gitlens.views.createWorktree)","when":"!gitlens:plus:required"},{"view":"gitlens.views.worktrees","contents":"[Resend Verification Email](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22worktrees%22%7D)\n\nYou must verify your email before you can continue or [recheck Status](command:gitlens.plus.validate?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:plus:state == -1"},{"view":"gitlens.views.worktrees","contents":"[Continue](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nContinuing gives you 3 days to preview Worktrees and other local Pro features for 3 days. [Start 14-day Pro trial](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D) or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D) for full access to Pro features.","when":"false && gitlens:plus:required && gitlens:plus:state == 0"},{"view":"gitlens.views.worktrees","contents":"[Try GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D)\n\nGet 14 days of GitLens Pro for free — no credit card required. Or [sign in](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D).","when":"gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"},{"view":"gitlens.views.worktrees","contents":"[Upgrade to Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22worktrees%22%7D)","when":"gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.worktrees","contents":"Limited-time sale on GitLens Pro.","when":"gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"},{"view":"gitlens.views.worktrees","contents":"Save 33% or more on GitLens Pro.","when":"gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == pro50"},{"view":"gitlens.views.worktrees","contents":"Your Pro trial has ended. Please upgrade for full access to Worktrees and other Pro features.","when":"gitlens:plus:required && gitlens:plus:state == 4"},{"view":"gitlens.views.worktrees","contents":"[Continue](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\nReactivate your Pro trial and experience Worktrees and all the new Pro features — free for another 14 days!","when":"gitlens:plus:required && gitlens:plus:state == 5"},{"view":"gitlens.views.worktrees","contents":"Use on privately-hosted repos require [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/).","when":"gitlens:plus:state != 6"}],"views":{"scm":[{"id":"gitlens.views.repositories","name":"Repositories","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.repositories || gitlens:views:scm:grouped:views:repositories)","contextualTitle":"GitLens","icon":"$(gitlens-repositories-view)","visibility":"hidden"},{"id":"gitlens.views.commits","name":"Commits","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.commits || gitlens:views:scm:grouped:views:commits)","contextualTitle":"GitLens","icon":"$(gitlens-commits-view)","visibility":"visible"},{"id":"gitlens.views.branches","name":"Branches","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.branches || gitlens:views:scm:grouped:views:branches)","contextualTitle":"GitLens","icon":"$(gitlens-branches-view)","visibility":"collapsed"},{"id":"gitlens.views.remotes","name":"Remotes","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.remotes || gitlens:views:scm:grouped:views:remotes)","contextualTitle":"GitLens","icon":"$(gitlens-remotes-view)","visibility":"collapsed"},{"id":"gitlens.views.stashes","name":"Stashes","when":"!gitlens:disabled && !gitlens:hasVirtualFolders && !(config.gitlens.views.scm.grouped.views.stashes || gitlens:views:scm:grouped:views:stashes)","contextualTitle":"GitLens","icon":"$(gitlens-stashes-view)","visibility":"collapsed"},{"id":"gitlens.views.tags","name":"Tags","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.tags || gitlens:views:scm:grouped:views:tags)","contextualTitle":"GitLens","icon":"$(gitlens-tags-view)","visibility":"collapsed"},{"id":"gitlens.views.worktrees","name":"Worktrees","when":"!gitlens:disabled && !gitlens:hasVirtualFolders && gitlens:plus:enabled && !(config.gitlens.views.scm.grouped.views.worktrees || gitlens:views:scm:grouped:views:worktrees)","contextualTitle":"GitLens","icon":"$(gitlens-worktrees-view)","visibility":"collapsed"},{"id":"gitlens.views.contributors","name":"Contributors","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.contributors || gitlens:views:scm:grouped:views:contributors)","contextualTitle":"GitLens","icon":"$(gitlens-contributors-view)","visibility":"collapsed"},{"id":"gitlens.views.scm.grouped","name":"GitLens","when":"!gitlens:disabled && ((config.gitlens.views.scm.grouped.views.branches || gitlens:views:scm:grouped:views:branches) || (config.gitlens.views.scm.grouped.views.commits || gitlens:views:scm:grouped:views:commits) || (config.gitlens.views.scm.grouped.views.contributors || gitlens:views:scm:grouped:views:contributors) || (config.gitlens.views.scm.grouped.views.launchpad || gitlens:views:scm:grouped:views:launchpad) || (config.gitlens.views.scm.grouped.views.remotes || gitlens:views:scm:grouped:views:remotes) || (config.gitlens.views.scm.grouped.views.repositories || gitlens:views:scm:grouped:views:repositories) || (config.gitlens.views.scm.grouped.views.searchAndCompare || gitlens:views:scm:grouped:views:searchAndCompare) || (config.gitlens.views.scm.grouped.views.stashes || gitlens:views:scm:grouped:views:stashes) || (config.gitlens.views.scm.grouped.views.tags || gitlens:views:scm:grouped:views:tags) || (config.gitlens.views.scm.grouped.views.worktrees || gitlens:views:scm:grouped:views:worktrees))","contextualTitle":"GitLens","icon":"$(gitlens-gitlens)","visibility":"visible"}],"gitlensInspect":[{"type":"webview","id":"gitlens.views.commitDetails","name":"Inspect","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-commit-view)","initialSize":6,"visibility":"visible"},{"id":"gitlens.views.pullRequest","name":"Pull Request","when":"!gitlens:disabled && gitlens:views:pullRequest:visible","contextualTitle":"GitLens","icon":"$(git-pull-request)","initialSize":1,"visibility":"visible"},{"id":"gitlens.views.lineHistory","name":"Line History","when":"!gitlens:disabled && !gitlens:hasVirtualFolders","contextualTitle":"GitLens","icon":"$(gitlens-history-view)","initialSize":1,"visibility":"collapsed"},{"id":"gitlens.views.fileHistory","name":"File History","when":"!gitlens:disabled","contextualTitle":"GitLens","icon":"$(gitlens-history-view)","initialSize":2,"visibility":"visible"},{"type":"webview","id":"gitlens.views.timeline","name":"Visual File History","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(graph-scatter)","initialSize":1,"visibility":"visible"},{"id":"gitlens.views.searchAndCompare","name":"Search & Compare","when":"!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.searchAndCompare || gitlens:views:scm:grouped:views:searchAndCompare)","contextualTitle":"GitLens","icon":"$(gitlens-search-view)","initialSize":2,"visibility":"visible"}],"gitlens":[{"type":"webview","id":"gitlens.views.home","name":"Home","contextualTitle":"GitLens","icon":"$(gitlens-gitlens)","initialSize":6,"visibility":"visible"},{"id":"gitlens.views.launchpad","name":"Launchpad","when":"!(config.gitlens.views.scm.grouped.views.launchpad || gitlens:views:scm:grouped:views:launchpad)","contextualTitle":"GitLens","icon":"$(gitlens-launchpad-view)","initialSize":2,"visibility":"collapsed"},{"id":"gitlens.views.drafts","name":"Cloud Patches","when":"!gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled","contextualTitle":"GitLens","icon":"$(gitlens-cloud-patch)","initialSize":2,"visibility":"collapsed"},{"id":"gitlens.views.workspaces","name":"Cloud Workspaces","when":"!gitlens:untrusted && !gitlens:hasVirtualFolders","contextualTitle":"GitLens","icon":"$(gitlens-workspaces-view)","initialSize":2,"visibility":"collapsed"}],"gitlensPanel":[{"type":"webview","id":"gitlens.views.graph","name":"Graph","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(gitlens-graph)","initialSize":4,"visibility":"visible"},{"type":"webview","id":"gitlens.views.graphDetails","name":"Graph Details","when":"!gitlens:disabled && gitlens:plus:enabled","contextualTitle":"GitLens","icon":"$(gitlens-commit-view)","initialSize":1,"visibility":"visible"}],"gitlensPatch":[{"type":"webview","id":"gitlens.views.patchDetails","name":"Patch","when":"!gitlens:untrusted && config.gitlens.cloudPatches.enabled && gitlens:views:patchDetails:mode","contextualTitle":"GitLens","icon":"$(gitlens-cloud-patch)","initialSize":24}]},"walkthroughs":[{"id":"welcome","title":"Get Started With GitLens","description":"Supercharge Git and unlock untapped knowledge within your repo to better understand, write, and review code.","steps":[{"id":"get-started-community","title":"Welcome to GitLens","description":"Thank you for installing GitLens—the most popular Git extension for VS Code!\n\n**Community vs. Pro**\n\nYou're using **GitLens Community** edition.\nTrack code changes and see who made them with features like in-editor blame annotations, hovers, CodeLens, and more—completely free.\n\n**Leverage powerful workflows with GitLens Pro**\n\nThe **GitLens Pro** edition unlocks advanced features to accelerate PR reviews, gain actionable insights with rich code visuals, and streamline team collaboration to boost productivity.\n\n[Get Started with GitLens Pro](command:gitlens.walkthrough.plus.signUp)","media":{"markdown":"walkthroughs/welcome/get-started-community.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"!gitlens:plus:state || gitlens:plus:state <= 2"},{"id":"welcome-in-trial","title":"Welcome to GitLens Pro","description":"Thanks for starting your **GitLens Pro** trial.\n\nComplete this walkthrough to experience enhanced PR review tools, deeper code history visualizations, and streamlined collaboration to help boost your productivity.\n\n[Continue the Walkthrough](command:gitlens.walkthrough.openWalkthrough)\n\nOnce your trial ends, you'll return to **GitLens Community** — where you can still leverage features like in-editor blame annotations, hovers, CodeLens, and more. [Upgrade to GitLens Pro](command:gitlens.walkthrough.plus.upgrade) today to continue enjoying the full experience.\n\n[Upgrade to GitLens Pro](command:gitlens.walkthrough.plus.upgrade)","media":{"markdown":"walkthroughs/welcome/welcome-in-trial.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 3"},{"id":"welcome-in-trial-expired","title":"Get the most out of GitLens","description":"Thanks for installing GitLens and trying out GitLens Pro.\n\nYou're now on the **GitLens Community** edition.\nTrack code changes and see who made them with features like in-editor blame annotations, hovers, CodeLens, and more—completely free.\n\nLearn more about the [difference between GitLens Community vs. Pro](command:gitlens.walkthrough.openCommunityVsPro).\n\n**Unlock more powerful tools with GitLens Pro**\n\n[Upgrade to GitLens Pro](command:gitlens.walkthrough.plus.upgrade)\n\nWith GitLens Pro, you can accelerate PR reviews, visualize code history in-depth, and enhance collaboration across your team. It's the perfect upgrade to streamline your VS Code workflow.","media":{"markdown":"walkthroughs/welcome/welcome-in-trial-expired.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 4"},{"id":"welcome-in-trial-expired-eligible","title":"Get the most out of GitLens ","description":"Thanks for installing GitLens and trying out GitLens Pro.\n\nYou're using **GitLens Community** edition.\nTrack code changes and see who made them with features like in-editor blame annotations, hovers, CodeLens, and more—completely free.\n\n**Unlock more powerful tools — Try GitLens Pro again** free for another 14 days.\n\n[Reactivate GitLens Pro Trial](command:gitlens.walkthrough.plus.reactivate)\n\nWith GitLens Pro, you can accelerate PR reviews, visualize code history in-depth, and enhance collaboration across your team. It's the perfect upgrade to streamline your VS Code workflow.","media":{"markdown":"walkthroughs/welcome/welcome-in-trial-expired-eligible.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 5"},{"id":"welcome-paid","title":"Discover the Benefits of GitLens Pro","description":"As a **GitLens Pro** user, you have access to powerful tools that accelerate PR reviews, provide deeper code history visualizations, and streamline collaboration across your team.\n\n[Continue the Walkthrough](command:gitlens.walkthrough.openWalkthrough)\n\nTo get the most out of your **GitLens Pro** experience, complete the walkthrough and visit our Help Center for in-depth guides.\n\n**[Learn more in the Help Center](command:gitlens.walkthrough.openHelpCenter)**","media":{"markdown":"walkthroughs/welcome/welcome-paid.md"},"completionEvents":["onContext:gitlens:walkthroughState:gettingStarted == true"],"when":"gitlens:plus:state == 6"},{"id":"visualize-code-history","title":"Interactive Code History","description":"$(gitlens-gitlens)  **Blame Annotations and Hovers**\n\nSee who changed what and why with in-editor blame annotations, hovers, and CodeLens.\n\n$(gitlens-graph)  **Visual Commit Graph & Search**\n\nNavigate complex Git histories with clarity using the interactive Commit Graph to visualize changes and search your repository.\n\n[View your Commit Graph](command:gitlens.walkthrough.showGraph)\n\n$(gitlens-gitlens-inspect)  **GitLens Inspect**\n\nDive deep into the revision history of files, folders, or specific lines. Get the context you need to understand changes faster. [Open GitLens Inspect](command:gitlens.walkthrough.gitlensInspect)\n\n$(gitlens-play-button)  [Watch a video about Interactive Code History](command:gitlens.walkthrough.openInteractiveCodeHistory)","media":{"markdown":"walkthroughs/welcome/visualize-code-history.md"},"completionEvents":["onContext:gitlens:walkthroughState:visualizeCodeHistory == true"]},{"id":"accelerate-pr-reviews","title":"Accelerate PR Reviews","description":"$(gitlens-launchpad-view)  **Launchpad: Your PR Hub**\n\nEasily manage GitHub pull requests by status, prioritize tasks, and spot bottlenecks—all within VS Code.\n\n[View My PRs in Launchpad](command:gitlens.walkthrough.showLaunchpad)\n\n💡 [Connect](command:gitlens.walkthrough.connectIntegrations) your GitHub or host provider to use Launchpad and accelerate PR reviews\n\n$(folder-opened)  **Worktrees: Multi-branch efficiency**\n\nWork on multiple branches simultaneously to handle hotfixes, new features, or experiments—without disrupting your main workspace.\n\n\n[Add a worktree](command:gitlens.walkthrough.worktree.create)\n$(gitlens-play-button)  [Watch how to accelerate code reviews](command:gitlens.walkthrough.openAcceleratePrReviews)","media":{"markdown":"walkthroughs/welcome/accelerate-pr-reviews.md"},"completionEvents":["onContext:gitlens:walkthroughState:prReviews == true"]},{"id":"streamline-collaboration","title":"Streamline Collaboration","description":"$(gitlens-cloud-patch)  **Cloud Patches: Collaborate before PRs**\n\nShare and iterate on code without committing to the repo or affecting CI. Keep your team moving forward with accessible, flexible Cloud Patches.\n\n[Open Cloud Patches](command:gitlens.walkthrough.showDraftsView)\n\n$(gitlens-code-suggestion)  **Code Suggest**\n\nReview GitHub and GitLab pull requests and send suggested changes to teammates directly from GitLens.\n\n$(gitlens-play-button)  [Watch how to enhance collaboration in GitLens](command:gitlens.walkthrough.openStreamlineCollaboration)","media":{"markdown":"walkthroughs/welcome/streamline-collaboration.md"},"completionEvents":["onContext:gitlens:walkthroughState:streamlineCollaboration == true"]},{"id":"improve-workflows-with-integrations","title":"Improve Workflows With Integrations","description":"$(extensions)  **Integrations**\n\nConnect to GitHub, GitLab, and Jira to associate PRs and issues to branches and commits in GitLens. Track and take action on PRs from Launchpad, quickly start work on issues, and get enhanced information in autolinks.\n\n[Connect Integrations](command:gitlens.walkthrough.connectIntegrations)\n\n$(link)  **Autolinks**\n\nGitLens automatically detects patterns in commit messages to generate links for pull requests and issues across services like GitHub, GitLab, Gitea, Gerrit, Google Source, Bitbucket, Azure DevOps, and custom servers.\n\n[Configure autolinks](command:gitlens.walkthrough.showAutolinks) for custom pattern-matching with other services.\n\n$(gitlens-play-button)  [Watch how integrations improve GitLens](command:gitlens.walkthrough.openStartIntegrations)","media":{"markdown":"walkthroughs/welcome/improve-workflows-with-integrations.md"},"completionEvents":["onContext:gitlens:walkthroughState:integrations == true"]}]}]},"scripts":{"analyze:bundle":"webpack --mode production --env analyzeBundle","analyze:bundle:extension":"webpack --mode production --config-name extension:node --env analyzeBundle","analyze:bundle:extension:browser":"webpack --mode production --config-name extension:webworker --env analyzeBundle","analyze:bundle:webviews":"webpack --mode production --config-name webviews --env analyzeBundle","analyze:deps":"webpack --env analyzeDeps","build":"webpack --mode development","build:quick":"webpack --mode development --env skipLint","build:extension":"webpack --mode development --config-name extension:node","build:extension:browser":"webpack --mode development --config-name extension:webworker","build:webviews":"webpack --mode development --config-name webviews","build:icons":"pnpm run icons:svgo && pnpm fantasticon && pnpm run icons:apply && pnpm run icons:export","build:tests":"node ./scripts/esbuild.tests.mjs --mode development","// Extracts the contributions from package.json into contributions.json":"//","extract:contributions":"node --experimental-strip-types ./scripts/generateContributions.mts --extract","// Generates contributions in contributions.json into package.json":"//","generate:contributions":"node --experimental-strip-types ./scripts/generateContributions.mts","// Generates command types from contributions.json into src/constants.commands.generated.ts":"//","generate:commandTypes":"node --experimental-strip-types ./scripts/generateCommandTypes.mts","// Generates docs/telemetry-events.md":"//","generate:docs:telemetry":"node ./scripts/generateTelemetryDocs.mjs","generate:emoji":"node ./scripts/generateEmojiShortcodeMap.mjs","// Generates ThirdPartyNotices.txt":"//","generate:licenses":"node ./scripts/generateLicenses.mjs","bundle":"webpack --mode production","bundle:extension":"webpack --mode production --config-name extension:node","clean":"pnpx rimraf --glob dist out .vscode-test .vscode-test-web .eslintcache* tsconfig*.tsbuildinfo","clean:all":"pnpm run clean && pnpm run clean:deps","clean:lint":"pnpx rimraf .eslintcache","clean:deps":"pnpx rimraf node_modules","copy:images":"webpack --config webpack.config.images.mjs","graph:link":"pnpm link @gitkraken/gitkraken-components","graph:link:main":"pushd \"../GitKrakenComponents\" && pnpm link && popd && pnpm graph:link","graph:unlink":"pnpm unlink @gitkraken/gitkraken-components && pnpm install --force","graph:unlink:main":"pnpm graph:unlink && pushd \"../GitKrakenComponents\" && pnpm unlink && popd","icons:apply":"node ./scripts/applyIconsContribution.mjs","icons:export":"node ./scripts/export-codicons.mjs","icons:svgo":"svgo -q -f ./images/icons/ --config svgo.config.js","lint":"pnpm run clean:lint && eslint .","lint:fix":"pnpm run clean:lint && eslint . --fix","lint:webviews":"pnpm run clean:lint && eslint \"src/webviews/apps/**/*.ts?(x)\"","package":"vsce package --no-dependencies","package-pre":"pnpm run patch-pre && pnpm run package --pre-release","patch-pre":"node ./scripts/applyPreReleasePatch.mjs","prep-release":"node ./scripts/prep-release.mjs","pretty":"prettier --config .prettierrc --write .","pretty:check":"prettier --config .prettierrc --check .","pub":"vsce publish --no-dependencies","pub-pre":"vsce publish --no-dependencies --pre-release","rebuild":"pnpm run reset && pnpm run build","reset":"pnpm run clean && pnpm install --force","test":"vscode-test","test:e2e":"playwright test -c tests/e2e/playwright.config.ts","watch":"webpack --watch --mode development","watch:extension":"webpack --watch --mode development --config-name extension","watch:quick":"webpack --watch --mode development --env skipLint","watch:webviews":"webpack --watch --mode development --config-name webviews","watch:tests":"node ./scripts/esbuild.tests.mjs --watch --mode development","web":"vscode-test-web --extensionDevelopmentPath=. --folder-uri=vscode-vfs://github/gitkraken/vscode-gitlens","web:serve":"node -e \"const p = require('path'); const h = require('os').homedir(); require('child_process').execSync('pnpx  serve --cors -l 5000 --ssl-cert '+p.resolve(h, 'certs/localhost.pem')+' --ssl-key '+p.resolve(h, 'certs/localhost-key.pem'), { stdio: 'inherit' })\"","update-dts":"pushd \"src/@types\" && pnpx  @vscode/dts dev && popd","update-dts:main":"pushd \"src/@types\" && pnpx  @vscode/dts main && popd","pretest":"pnpm run build:tests","vscode:prepublish":"pnpm run bundle"},"dependencies":{"@gitkraken/gitkraken-components":"10.7.0","@gitkraken/provider-apis":"0.26.2","@gitkraken/shared-web-components":"0.1.1-rc.15","@gk-nzaytsev/fast-string-truncated-width":"1.1.0","@lit-labs/signals":"0.1.1","@lit/context":"1.1.3","@lit/react":"1.0.7","@lit/task":"1.0.2","@octokit/graphql":"8.1.2","@octokit/request":"9.2.0","@octokit/request-error":"6.1.6","@octokit/types":"13.7.0","@opentelemetry/api":"1.9.0","@opentelemetry/exporter-trace-otlp-http":"0.57.1","@opentelemetry/resources":"1.30.1","@opentelemetry/sdk-trace-base":"1.30.1","@opentelemetry/semantic-conventions":"1.28.0","@shoelace-style/shoelace":"2.19.1","@vscode/codicons":"0.0.36","billboard.js":"3.14.3","https-proxy-agent":"5.0.1","iconv-lite":"0.6.3","lit":"3.2.1","marked":"15.0.6","node-fetch":"2.7.0","os-browserify":"0.3.0","path-browserify":"1.0.1","react":"16.8.4","react-dom":"16.8.4","signal-utils":"0.21.1","slug":"10.0.0","sortablejs":"1.15.0"},"devDependencies":{"@eamodio/eslint-lite-webpack-plugin":"0.2.0","@eslint/js":"9.19.0","@playwright/test":"1.50.1","@swc/core":"1.10.4","@twbs/fantasticon":"3.0.0","@types/eslint__js":"8.42.3","@types/mocha":"10.0.10","@types/node":"18.15.13","@types/react":"17.0.83","@types/react-dom":"17.0.25","@types/slug":"5.0.9","@types/sortablejs":"1.15.8","@types/vscode":"1.82.0","@typescript-eslint/parser":"8.22.0","@vscode/test-cli":"^0.0.10","@vscode/test-electron":"2.4.1","@vscode/test-web":"0.0.66","@vscode/vsce":"3.2.2","cheerio":"1.0.0-rc.12","circular-dependency-plugin":"5.2.2","clean-webpack-plugin":"4.0.0","copy-webpack-plugin":"12.0.2","csp-html-webpack-plugin":"5.1.0","css-loader":"7.1.2","css-minimizer-webpack-plugin":"7.0.0","cssnano-preset-advanced":"7.0.6","esbuild":"0.24.2","esbuild-loader":"4.2.2","esbuild-node-externals":"1.16.0","esbuild-sass-plugin":"3.3.1","eslint":"9.19.0","eslint-import-resolver-oxc":"0.10.1","eslint-plugin-anti-trojan-source":"1.1.1","eslint-plugin-import-x":"4.6.1","eslint-plugin-lit":"1.15.0","eslint-plugin-wc":"2.2.0","fork-ts-checker-webpack-plugin":"9.0.2","glob":"11.0.1","globals":"15.14.0","html-loader":"5.1.0","html-webpack-plugin":"5.6.3","image-minimizer-webpack-plugin":"4.1.3","license-checker-rseidelsohn":"4.4.2","lz-string":"1.5.0","mini-css-extract-plugin":"2.9.2","mocha":"10.8.2","ovsx":"0.10.1","playwright":"1.50.1","prettier":"3.1.0","regex-to-strings":"2.1.0","sass":"1.83.4","sass-loader":"16.0.4","schema-utils":"4.3.0","sharp":"0.33.5","svgo":"3.3.2","terser-webpack-plugin":"5.3.11","ts-loader":"9.5.2","typescript":"5.7.3","typescript-eslint":"8.22.0","webpack":"5.97.1","webpack-bundle-analyzer":"4.10.2","webpack-cli":"6.0.1","webpack-node-externals":"3.0.0","webpack-require-from":"1.8.6"},"resolutions":{"esbuild":"0.24.2","iconv-lite":"0.6.3","node-fetch":"2.7.0","semver-regex":"4.0.5"},"packageManager":"pnpm@10.0.0"},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/eamodio.gitlens-16.3.3","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitKraken","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"4de763bd-505d-4978-9575-2b7696ecf94e","publisherId":"678d198b-9b2e-49d3-96ff-6d801c9575df","publisherDisplayName":"GitKraken","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":15640428},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"wix.vscode-import-cost","uuid":"c46b0018-f317-4b6c-a785-d2039b27338f"},"manifest":{"name":"vscode-import-cost","displayName":"Import Cost","description":"Display import/require package size in the editor","license":"MIT","version":"3.3.0","publisher":"wix","main":"./dist/extension.electron.js","browser":"./dist/extension.browser.js","engines":{"vscode":"^1.64.0"},"categories":["Other"],"activationEvents":["onLanguage:javascript","onLanguage:javascriptreact","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:vue","onLanguage:svelte"],"keywords":["import","require","size","weight","webpack"],"contributes":{"configuration":{"type":"object","title":"Import Cost configuration","properties":{"importCost.bundleSizeColoring":{"type":"string","default":"minified","enum":["minified","compressed"],"description":"Which bundle size to use for selecting the color"},"importCost.smallPackageSize":{"type":"number","default":50,"description":"Upper size limit, in KB, that will count a package as a small package"},"importCost.mediumPackageSize":{"type":"number","default":100,"description":"Upper size limit, in KB, that will count a package as a medium package"},"importCost.smallPackageDarkColor":{"type":"string","default":"#7cc36e","description":"Decoration color for small packages in dark theme"},"importCost.mediumPackageDarkColor":{"type":"string","default":"#7cc36e","description":"Decoration color for medium packages in dark theme"},"importCost.largePackageDarkColor":{"type":"string","default":"#d44e40","description":"Decoration color for large packages in dark theme"},"importCost.smallPackageLightColor":{"type":"string","default":"#7cc36e","description":"Decoration color for small packages in light theme"},"importCost.mediumPackageLightColor":{"type":"string","default":"#7cc36e","description":"Decoration color for medium packages in light theme"},"importCost.largePackageLightColor":{"type":"string","default":"#d44e40","description":"Decoration color for large packages in light theme"},"importCost.margin":{"type":"number","default":1,"description":"Decoration margin from end of line"},"importCost.fontStyle":{"type":"string","default":"normal","enum":["normal","italic","oblique"],"description":"Decoration font style"},"importCost.typescriptExtensions":{"type":"array","default":["\\.tsx?$"],"description":"File extensions to be parsed by the Typescript parser"},"importCost.javascriptExtensions":{"type":"array","default":["\\.jsx?$"],"description":"File extensions to be parsed by the Javascript parser"},"importCost.vueExtensions":{"type":"array","default":["\\.vue$"],"description":"File extensions to be parsed by the Vue parser"},"importCost.svelteExtensions":{"type":"array","default":["\\.svelte$"],"description":"File extensions to be parsed by the Svelte parser"},"importCost.bundleSizeDecoration":{"type":"string","default":"both","enum":["both","minified","compressed"],"description":"Which bundle size to display"},"importCost.showCalculatingDecoration":{"type":"boolean","default":true,"description":"Display the 'calculating' decoration when starting to calculate the size"},"importCost.debug":{"type":"boolean","default":false,"description":"Enable debug logging"},"importCost.timeout":{"type":"number","default":20000,"description":"Size calculation timeout in milliseconds"}}},"commands":[{"command":"importCost.toggle","title":"Toggle import cost"}]},"scripts":{"pretest":"webpack -c ./webpack.browser.js && webpack -c ./webpack.electron.js","test":"node ./test/index.js"},"devDependencies":{"@types/glob":"^7.2.0","@types/mocha":"^9.1.0","@types/node":"16.x","@types/vscode":"^1.64.0","@vscode/test-electron":"^2.1.2","@vscode/test-web":"^0.0.24","assert":"^2.0.0","browser-process-hrtime":"^1.0.0","browserify-zlib":"^0.2.0","buffer":"^6.0.3","chai":"^4.2.0","constants-browserify":"^1.0.0","crypto-browserify":"^3.12.0","filesize":"^8.0.7","glob":"^7.2.0","https-browserify":"^1.0.0","import-cost":"^3.1.0","memfs":"^3.4.1","mocha":"^9.2.2","os-browserify":"^0.3.0","path-browserify":"^1.0.1","process":"^0.11.10","stream-browserify":"^3.0.0","stream-http":"^3.2.0","url":"^0.11.0","util":"^0.12.4","vm-browserify":"^1.1.2","vsce":"^2.7.0","webpack":"5.70.0","webpack-cli":"^4.9.2"},"icon":"images/import-cost-logo.png","galleryBanner":{"color":"#1C78C0","theme":"dark"},"homepage":"https://github.com/wix/import-cost/blob/master/packages/vscode-import-cost/README.md","repository":{"type":"git","url":"https://github.com/wix/import-cost.git"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/wix.vscode-import-cost-3.3.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Wix","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"c46b0018-f317-4b6c-a785-d2039b27338f","publisherId":"7a344d8a-64ec-42a7-9255-9eacf94e746a","publisherDisplayName":"Wix","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":46693315},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"github.copilot","uuid":"23c4aeee-f844-43cd-b53e-1113e483f1a6"},"manifest":{"name":"copilot","displayName":"GitHub Copilot","description":"Your AI pair programmer","version":"1.293.0","build":"1470","buildType":"prod","publisher":"GitHub","preview":false,"homepage":"https://github.com/features/copilot?editor=vscode","license":"https://docs.github.com/en/site-policy/github-terms/github-terms-for-additional-products-and-features","bugs":{"url":"https://github.com/microsoft/vscode-copilot-release/issues"},"qna":"https://github.com/github-community/community/discussions/categories/copilot","icon":"assets/Copilot-App-Icon.png","pricing":"Trial","extensionPack":["GitHub.copilot-chat"],"engines":{"vscode":"^1.98.0","node":">=20.0.0","npm":">=9.0.0"},"categories":["AI","Chat","Programming Languages","Machine Learning"],"keywords":["ai","openai","codex","pilot","snippets","documentation","autocomplete","intellisense","refactor","javascript","python","typescript","php","go","golang","ruby","c++","c#","java","kotlin","co-pilot"],"badges":[{"url":"https://img.shields.io/badge/GitHub%20Copilot-Subscription%20Required-orange","href":"https://github.com/github-copilot/signup?editor=vscode","description":"Sign up for GitHub Copilot"},{"url":"https://img.shields.io/github/stars/github/copilot-docs?style=social","href":"https://github.com/github/copilot-docs","description":"Star Copilot on GitHub"},{"url":"https://img.shields.io/youtube/channel/views/UC7c3Kb6jYCRj4JOHHZTxKsQ?style=social","href":"https://www.youtube.com/@GitHub/search?query=copilot","description":"Check out GitHub on Youtube"},{"url":"https://img.shields.io/twitter/follow/github?style=social","href":"https://twitter.com/github","description":"Follow GitHub on Twitter"}],"activationEvents":["onStartupFinished"],"main":"./dist/extension","enabledApiProposals":["inlineCompletionsAdditions"],"contributes":{"commands":[{"command":"github.copilot.toggleStatusMenu","title":"Open Status Menu","category":"GitHub Copilot"},{"command":"github.copilot.signIn","title":"Sign In","category":"GitHub Copilot","enablement":"!github.copilot.activated"},{"command":"github.copilot.acceptCursorPanelSolution","title":"Accept Panel Suggestion at the Cursor","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.previousPanelSolution","title":"Navigate to the Previous Panel Suggestion","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.nextPanelSolution","title":"Navigate to the Next Panel Suggestion","enablement":"github.copilot.panelVisible","category":"GitHub Copilot"},{"command":"github.copilot.generate","title":"Open Completions Panel","enablement":"github.copilot.activated","category":"GitHub Copilot"},{"command":"github.copilot.completions.disable","title":"Disable Completions","enablement":"github.copilot.activated && config.editor.inlineSuggest.enabled && github.copilot.completions.enabled","category":"GitHub Copilot"},{"command":"github.copilot.completions.enable","title":"Enable Completions","enablement":"github.copilot.activated && !(config.editor.inlineSuggest.enabled && github.copilot.completions.enabled)","category":"GitHub Copilot"},{"command":"github.copilot.completions.toggle","title":"Toggle (Enable/Disable) Completions","enablement":"github.copilot.activated","category":"GitHub Copilot"},{"command":"github.copilot.sendFeedback","title":"Send Feedback","category":"GitHub Copilot"},{"command":"github.copilot.collectDiagnostics","title":"Collect Diagnostics","category":"GitHub Copilot"},{"command":"github.copilot.openLogs","title":"Open Logs","category":"GitHub Copilot"},{"command":"github.copilot.openModelPicker","title":"Change Completions Model","category":"GitHub Copilot"}],"keybindings":[{"command":"github.copilot.generate","key":"ctrl+enter","mac":"ctrl+enter","when":"editorTextFocus && !commentEditorFocused"},{"command":"github.copilot.acceptCursorPanelSolution","key":"ctrl+/","mac":"ctrl+/","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.previousPanelSolution","key":"alt+[","mac":"alt+[","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"github.copilot.nextPanelSolution","key":"alt+]","mac":"alt+]","when":"activeWebviewPanelId == 'GitHub Copilot Suggestions'"},{"command":"editor.action.inlineSuggest.trigger","key":"alt+\\","when":"editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"}],"menus":{"editor/inlineCompletions/actions":[{"command":"github.copilot.generate"}],"commandPalette":[{"command":"github.copilot.openModelPicker","when":"github.copilot.modelPickerEnabled"}]},"configuration":[{"title":"GitHub Copilot","properties":{"github.copilot.selectedCompletionModel":{"type":"string","default":"","markdownDescription":"The currently selected completion model ID. To select from a list of available models, use the __\"Change Completion Model\"__ command or open the model picker from the Copilot menu. The value must be a valid model ID. An empty value indicates that the default model will be used."},"github.copilot.advanced":{"type":"object","title":"Advanced Settings","properties":{"authProvider":{"type":"string","enum":["github","github-enterprise"],"enumDescriptions":["GitHub.com","GitHub Enterprise"],"default":"github","description":"The GitHub identity to use for Copilot"},"authPermissions":{"type":"string","enum":["default","minimal"],"markdownEnumDescriptions":["Default (recommended) - The default permissions enable the best that Copilot has to offer including, but not limited to, faster repo indexing and the power of the `@github` agent.","Minimal - The minimal permissions required for Copilot functionality."],"default":"default","markdownDescription":"Controls what kind of permissions are asked for when signing in to Copilot. The options are\n* `default` - (strongly recommended) The default permissions enable the best that Copilot has to offer including, but not limited to, faster repo indexing and the power of the `@github` agent.\n* `minimal` - The minimal permissions are the least that Copilot needs to function. Some features may behave slower or not at all."},"useLanguageServer":{"type":"boolean","default":false,"description":"Experimental: Use language server"},"debug.overrideEngine":{"type":"string","default":"","description":"Override engine name"},"debug.overrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy full URL"},"debug.testOverrideProxyUrl":{"type":"string","default":"","description":"Override GitHub authentication proxy URL when running tests"},"debug.overrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API full URL"},"debug.testOverrideCapiUrl":{"type":"string","default":"","description":"Override GitHub Copilot API URL when running tests"},"debug.filterLogCategories":{"type":"array","default":[],"deprecationMessage":"Set overrideLogLevels.* to ERROR to filter out unwanted categories.","description":"Show only log categories listed in this setting. If an array is empty, show all loggers"}}},"github.copilot.enable":{"type":"object","scope":"application","default":{"*":true,"plaintext":false,"markdown":false,"scminput":false},"additionalProperties":{"type":"boolean"},"markdownDescription":"Enable or disable Copilot completions for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)"},"github.copilot.inlineSuggest.enable":{"type":"boolean","default":true,"deprecationMessage":"This setting has no effect. Please use github.copilot.editor.enableAutoCompletions instead.","description":"Show inline suggestions"},"github.copilot.editor.enableAutoCompletions":{"type":"boolean","scope":"language-overridable","default":true,"description":"Automatically show inline completions"}}}],"configurationDefaults":{"editor.tokenColorCustomizations":{"[*Light*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#000"}}]},"[*Dark*]":{"textMateRules":[{"scope":"ref.matchtext","settings":{"foreground":"#fff"}}]}}},"languages":[{"id":"code-referencing"}],"grammars":[{"language":"code-referencing","scopeName":"text.ref","path":"./syntaxes/ref.tmGrammar.json"}],"iconFonts":[{"id":"copilot-font","src":[{"path":"assets/copilot.woff","format":"woff"}]}]},"scripts":{"build":"tsx esbuild.ts","clean":"./script/build/clean.sh","compress":"tsx ./script/compressTokenizer.ts","forbid-sources-content:extension":"node script/forbid-sources-content.js --extension","generate_languages":"tsx script/generateLanguages.ts && prettier --write lib/src/language/generatedLanguages.ts","get_token":"tsx script/getToken.ts","lint":"run-p --aggregate-output \"lint:*\"","lint:deps":"depcruise -c .dependency-cruiser.js .","lint:eslint":"eslint -f visualstudio --quiet --cache .","lint:prettier":"prettier --check . 2>&1","lint:types":"tsc --noEmit && tsc --noEmit -p extension/src/copilotPanel/webview","prebuild":"npm install","pretest":"npm run build","pretest:headless":"npm run build","pretest:extension":"npm run build","pretest:lsp-client":"npm run build","pretest:lib-e2e":"npm run build","prewatch":"npm run build","prewatch:esbuild":"npm run build","start":"npm run watch","test":"npm-run-all \"test:extension --ignore-scripts\" \"test:headless --ignore-scripts\" lint","test:headless":"npm-run-all test:lib test:agent \"test:lib-e2e --ignore-scripts\" test:prompt \"test:lsp-client --ignore-scripts\" lint","test:agent":"mocha \"agent/src/**/*.test.{ts,tsx}\"","test:extension":"tsx extension/test/runTest.ts","test:lib":"mocha \"lib/src/**/*.test.{ts,tsx}\"","test:lib-e2e":"mocha \"lib/e2e/src/**/*.test.{ts,tsx}\" --exclude \"lib/e2e/src/prompt/**/*.test.ts\"","test:lib-e2e-no-ci":"mocha \"lib/e2e/no-ci/**/*.test.{ts,tsx}\"","test:lib-prompt-e2e":"mocha --delay \"lib/e2e/src/prompt/prompt.test.ts\"","test:lib-prompt-e2e-perf":"INCLUDE_PERFORMANCE=true npm run test:lib-prompt-e2e","test:lsp-client":"mocha \"lsp-client/test/*.test.{ts,tsx}\"","test:prompt":"npm -C prompt run test","vscode-dts":"vscode-dts dev && mv vscode.proposed.*.ts extension/src","vscode:prepublish":"run-s \"build --ignore-scripts\" forbid-sources-content:extension","vscode:uninstall":"node dist/extensionUninstalled.js","vsix":"vsce package --allow-missing-repository","watch":"run-p \"watch:esbuild --ignore-scripts\" \"watch:types -- --preserveWatchOutput\"","watch:esbuild":"tsx esbuild.ts --watch","watch:types":"tsc --noEmit --watch"},"devDependencies":{"@datadog/datadog-ci":"^3.2.0","@github/prettier-config":"0.0.6","@limegrass/eslint-plugin-import-alias":"^1.5.0","@types/benchmark":"^2.1.5","@types/crypto-js":"^4.2.2","@types/diff":"^7.0.2","@types/git-url-parse":"^9.0.3","@types/js-yaml":"^4.0.6","@types/kerberos":"^1.1.2","@types/mocha":"^10.0.10","@types/node":"~20.8.0","@types/semver":"^7.7.0","@types/sinon":"^17.0.4","@types/uuid":"^10.0.0","@types/vscode":"1.98.0","@types/yargs":"^17.0.24","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^3.3.1","@yao-pkg/pkg":"^6.3.2","benchmark":"^2.1.4","boxen":"^8.0.1","chalk":"^5.4.1","dependency-cruiser":"^16.10.0","electron":"^28.1.4","esbuild":"^0.25.1","esbuild-plugin-copy":"^2.1.1","esbuild-plugin-summary":"^0.0.2","eslint":"^9.23.0","eslint-formatter-visualstudio":"^8.40.0","eslint-plugin-mocha":"^10.5.0","fantasticon":"^3.0.0","glob":"^11.0.1","globals":"^16.0.0","js-yaml":"^4.1.0","mocha":"^11.1.0","mocha-junit-reporter":"^2.2.1","mocha-multi-reporters":"^1.5.1","npm-run-all":"^4.1.5","prettier":"^3.5.3","prettier-plugin-organize-imports":"^4.1.0","proxy":"^2.1.1","sinon":"^20.0.0","ts-dedent":"^2.2.0","ts-node":"^10.9.1","tsconfig-paths":"^4.2.0","tsx":"^4.19.3","typescript":"^5.8.2","typescript-eslint":"^8.28.0","vscode-dts":"^0.3.3"},"dependencies":{"@adobe/helix-fetch":"github:devm33/helix-fetch#1088e599270f36632703f138d88c2100cbe468db","@github/memoize":"1.1.5","@microsoft/1ds-post-js":"^4.3.6","@microsoft/applicationinsights-web-basic":"^3.3.6","@microsoft/tiktokenizer":"^1.0.9","@sinclair/typebox":"^0.34.31","@types/vscode-webview":"^1.57.4","@vscode/codicons":"^0.0.36","@vscode/prompt-tsx":"0.3.0-alpha.21","@vscode/webview-ui-toolkit":"^1.3.1","await-lock":"^2.2.2","crypto-js":"^4.2.0","diff":"^7.0.0","dldr":"^0.0.10","get-stream":"^6.0.1","git-url-parse":"^16.0.0","kerberos":"^2.2.0","mac-ca":"^3.1.1","microjob":"^0.7.0","minimatch":"^9.0.3","open":"^10.1.0","semver":"^7.7.1","shiki":"~1.15.0","source-map-support":"^0.5.21","sqlite3":"^5.1.7","uuid":"^11.1.0","vscode-languageclient":"^9.0.0","vscode-languageserver":"^9.0.0","vscode-languageserver-protocol":"^3.17","vscode-languageserver-textdocument":"~1.0.11","vscode-uri":"^3.1.0","web-tree-sitter":"^0.20.8","windows-ca-certs":"^0.1.0","yargs":"^17.7.2"},"overrides":{"fsevents":"<0","bindings":"npm:bundled-bindings@^1.5.0"}},"location":{"$mid":1,"path":"/home/manu/.vscode/extensions/github.copilot-1.293.0","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"GitHub","metadata":{"installedTimestamp":1743297921618,"pinned":false,"source":"gallery","id":"23c4aeee-f844-43cd-b53e-1113e483f1a6","publisherId":"7c1c19cd-78eb-4dfb-8999-99caf7679002","publisherDisplayName":"GitHub","targetPlatform":"undefined","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":58014186},"isValid":true,"validations":[],"preRelease":false}]}