{"ref":"e9660225-a042-4b5b-85b6-51cd4ae9a37f","syncData":{"version":1,"machineId":"3940cd71-3ae9-471d-8175-4ccece434760","content":"{\"css.json\":\"{\\n\\t// Place your snippets for css here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n\\n\\n\\n\\t\\\"Crea un Media Querie\\\":{\\n\\t\\t\\\"prefix\\\": \\\"mq\\\",\\n\\t\\t\\\"body\\\": \\\"@media (max-width: 1400px){\\\\n    $1\\\\n}\\\"\\n\\t},\\n\\n\\t\\\"Media Querie Max Width\\\":{\\n\\t\\t\\\"prefix\\\": \\\"mq2\\\",\\n\\t\\t\\\"body\\\": \\\"@media (max-width: 480px){\\\\n    $1\\\\n}\\\"\\n\\t},\\n\\n\\t\\\"Normalize.css\\\":{ \\n\\t\\t\\\"prefix\\\": \\\"norm\\\",\\n\\t\\t\\\"body\\\": \\\"@import url('https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css');\\\"\\n\\t},\\n\\n}\\n\",\"scss.json\":\"{\\n\\t// Place your snippets for scss here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n\\n\\t\\\"media query\\\" : {\\n\\t\\t\\\"prefix\\\": \\\"mq\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"@include m.$1 {\\\\n\\\\t$2\\\\n}\\\"\\n\\t\\t]\\n\\t},\\n\\n\\t\\\"importar mixins\\\": {\\n\\t\\t\\\"prefix\\\": \\\"imm\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"@use 'base/mixins' as m;\\\"\\n\\t\\t]\\n\\t},\\n\\n\\t\\\"importar variables\\\": {\\n\\t\\t\\\"prefix\\\": \\\"imv\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"@use 'base/variables' as v;\\\"\\n\\t\\t]\\n\\t}\\n\\n}\",\"html.json\":\"{\\n\\t// Place your snippets for html here. Each snippet is defined under a snippet name and has a prefix, body and\\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the\\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n\\n\\n\\t\\\"imagenes\\\": {\\n\\t\\t\\\"prefix\\\": \\\"im\\\",\\n\\t\\t\\\"body\\\": [\\n\\t\\t\\t\\\"<picture>\\\",\\n\\t\\t\\t\\t\\\"\\\\t<source srcset=\\\\\\\"$1.avif\\\\\\\" type=\\\\\\\"image/avif\\\\\\\">\\\",\\n\\t\\t\\t\\t\\\"\\\\t<source srcset=\\\\\\\"$1.webp\\\\\\\" type=\\\\\\\"image/webp\\\\\\\">\\\",\\n                \\\"\\\\t<img loading=\\\\\\\"lazy\\\\\\\" width=\\\\\\\"200\\\\\\\" height=\\\\\\\"300\\\\\\\" src=\\\\\\\"$2\\\\\\\" alt=\\\\\\\"$3\\\\\\\">\\\",\\n\\n\\t\\t\\t\\\"</picture>\\\"\\n\\t\\t]\\n\\t}\\n}\",\"cpp.json\":\"{\\n\\t// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and \\n\\t// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:\\n\\t// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the \\n\\t// same ids are connected.\\n\\t// Example:\\n\\t// \\\"Print to console\\\": {\\n\\t// \\t\\\"prefix\\\": \\\"log\\\",\\n\\t// \\t\\\"body\\\": [\\n\\t// \\t\\t\\\"console.log('$1');\\\",\\n\\t// \\t\\t\\\"$2\\\"\\n\\t// \\t],\\n\\t// \\t\\\"description\\\": \\\"Log output to console\\\"\\n\\t// }\\n\\n\\t\\\"Title\\\": {\\n\\t\\t\\\"prefix\\\": \\\"title\\\",\\n\\t\\t\\\"body\\\": \\\"// Manuel Oscar Delpino\\\\n// Ejercicio ${1:number}: ${2:description}\\\\n\\\",\\n\\t\\t\\\"description\\\": \\\"Titulo completo de ejercicio\\\"\\n\\t},\\n\\t\\n\\t\\\"Standard Input/Output\\\": {\\n\\t\\t\\\"prefix\\\": \\\"stdio\\\",\\n\\t\\t\\\"body\\\": \\\"#include <stdio.h>\\\\n\\\",\\n\\t\\t\\\"description\\\": \\\"Include Standard Input Output (C Library)\\\"\\n\\t},\\n\\n\\t\\\"CType\\\": {\\n\\t\\t\\\"prefix\\\": \\\"ctype\\\",\\n\\t\\t\\\"body\\\": \\\"#include <ctype.h>\\\\n\\\",\\n\\t\\t\\\"description\\\": \\\"Include CType (C Library)\\\"\\n\\t},\\n\\t\\n\\t\\\"String\\\": {\\n\\t\\t\\\"prefix\\\": \\\"string\\\",\\n\\t\\t\\\"body\\\": \\\"#include <string.h>\\\",\\n\\t\\t\\\"description\\\": \\\"Include String (C Library)\\\"\\n\\t}\\n\\t\\n}\"}"}}